<?xml version="1.0" encoding="utf-8" ?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.kan.hro.domain.biz.settlement.SettlementAdjustmentImportBatchVO">

	<resultMap id="result"
		type="com.kan.hro.domain.biz.settlement.SettlementAdjustmentImportBatchVO">
		<result property="batchId" column="batchId" />
		<result property="accountId" column="accountId" />
		<result property="entityId" column="entityId" />
		<result property="businessTypeId" column="businessTypeId" />
		<result property="clientId" column="clientId" />
		<result property="corpId" column="corpId" />
		<result property="orderId" column="orderId" />
		<result property="contractId" column="contractId" />
		<result property="employeeId" column="employeeId" />
		<result property="monthly" column="monthly" />
		<result property="weekly" column="weekly" />
		<result property="startDate" column="startDate" />
		<result property="endDate" column="endDate" />
		<result property="description" column="description" />
		<result property="deleted" column="deleted" />
		<result property="status" column="status" />
		<result property="remark1" column="remark1" />
		<result property="remark2" column="remark2" />
		<result property="remark3" column="remark3" />
		<result property="remark4" column="remark4" />
		<result property="remark5" column="remark5" />
		<result property="createBy" column="createBy" />
		<result property="createDate" column="createDate" />
		<result property="modifyBy" column="modifyBy" />
		<result property="modifyDate" column="modifyDate" />
		<result property="importExcelName" column="importExcelName" />
		<result property="countHeaderId" column="countHeaderId" />
		<result property="billAmountCompany" column="billAmountCompany" />
		<result property="billAmountPersonal" column="billAmountPersonal" />
		<result property="costAmountCompany" column="costAmountCompany" />
		<result property="costAmountPersonal" column="costAmountPersonal" />
	</resultMap>


	<sql id="settelmentAdjustmentBatchColumns">
		accountId, entityId, businessTypeId, corpId, orderId, contractId, employeeId, monthly, weekly, startDate, endDate, description, deleted, status, remark1, remark2, remark3, remark4, remark5, createBy, createDate, 
		modifyBy, modifyDate
	</sql>
	
	<sql id="settelmentAdjustmentBatchColumns-for-join">
		a.accountId,a.corpId,a.importExcelName,a.description,a.deleted,a.status,a.remark1,a.remark2,
		a.remark3,a.remark4,a.remark5,a.createBy,a.createDate,a.modifyBy,a.modifyDate
	</sql>

	<!-- 主列表count -->
	<select id="countSettlementAdjustmentImportBatchVOsByCondition" parameterType="settlementAdjustmentImportBatch" resultType="int">
		SELECT
			count(1) as count
		FROM
			hro_common_batch a
		INNER JOIN hro_settle_adjustment_header_temp f ON a.batchId = f.batchId
		AND f.deleted = 1
		LEFT JOIN HRO_BIZ_Client b ON f.clientId = b.clientId
		AND b.deleted = 1
		LEFT JOIN HRO_BIZ_Employee_Contract c ON f.contractId = c.contractId
		AND c.deleted = 1
		LEFT JOIN hro_biz_client_order_header d ON c.contractId = d.contractId
		AND d.deleted = 1
		WHERE
			a.deleted = 1
		AND a.accountId = #{accountId}
		<if test="corpId != null and corpId != ''">
			AND (f.corpId = #{corpId} OR 0 = #{corpId})
		</if>
		<if test="corpId == null or corpId == ''">
			AND f.corpId IS NULL
		</if>
		<if test="entityId != null and entityId != ''">
			AND (f.entityId = #{entityId} or 0 = #{entityId})
		</if>
		<if test="businessTypeId != null and businessTypeId != ''">
			AND (f.businessTypeId = #{businessTypeId} or 0 = #{businessTypeId})
		</if>
		<if test="employeeId != null and employeeId != ''">
			AND f.employeeId = #{employeeId}
		</if>
		<if test="employeeNameZH != null and employeeNameZH != ''">
			AND f.employeeNameZH like CONCAT('%', '${employeeNameZH}', '%') 
		</if>
		<if test="employeeNameEN != null and employeeNameEN != ''">
			AND f.employeeNameEN like CONCAT('%', '${employeeNameEN}', '%') 
		</if>
		<if test="clientId != null and clientId != ''">
			AND f.clientId = #{clientId}
		</if>
		<if test="vendorId != null and vendorId != ''">
			AND f.vendorId = #{vendorId}
		</if>
		<if test="clientNameZH != null and clientNameZH != ''">
			AND b.nameZH like CONCAT('%', '${clientNameZH}', '%') 
		</if>
		<if test="clientNameEN != null and clientNameEN != ''">
			AND b.nameEN like CONCAT('%', '${clientNameEN}', '%') 
		</if>
		<if test="orderId != null and orderId != ''">
			AND f.orderId = #{orderId}
		</if>
		<if test="contractId != null and contractId != ''">
			AND f.contractId = #{contractId}
		</if>
		<if test="monthly != null and monthly != ''">
			AND (f.monthly = #{monthly} or '0' = #{monthly})
		</if>
		<if test="status != null and status != ''">
			AND (f.status = #{status} or 0 = #{status})
		</if>
	</select>
	<!-- 主列表 -->
	<select id="getSettlementAdjustmentImportBatchVOsByCondition" parameterType="settlementAdjustmentImportBatch" resultMap="result">
	SELECT
		a.batchId,
		a.accountId,
		a.corpId,
		a.importExcelName,
		a.description,
		a.deleted,
		a. STATUS,
		a.remark1,
		a.remark2,
		a.remark3,
		a.remark4,
		a.remark5,
		a.createBy,
		a.createDate,
		a.modifyBy,
		a.modifyDate,
		COUNT(
			DISTINCT f.adjustmentHeaderId
		) AS countHeaderId,
		COUNT(DISTINCT f.contractId) AS countContractId,
		CASE
	WHEN (
		ISNULL(SUM(f.billAmountPersonal))
	) THEN
		0
	ELSE
		SUM(f.billAmountPersonal)
	END AS billAmountPersonal,
	 CASE
	WHEN (
		ISNULL(SUM(f.costAmountPersonal))
	) THEN
		0
	ELSE
		SUM(f.costAmountPersonal)
	END AS costAmountPersonal,
	 CASE
	WHEN (
		ISNULL(SUM(f.billAmountCompany))
	) THEN
		0
	ELSE
		SUM(f.billAmountCompany)
	END AS billAmountCompany,
	 CASE
	WHEN (
		ISNULL(SUM(f.costAmountCompany))
	) THEN
		0
	ELSE
		SUM(f.costAmountCompany)
	
	END AS costAmountCompany
	FROM
		hro_common_batch a
	INNER JOIN hro_settle_adjustment_header_temp f ON a.batchId = f.batchId
	AND f.deleted = 1
	LEFT JOIN HRO_BIZ_Client b ON f.clientId = b.clientId
	AND b.deleted = 1
	LEFT JOIN HRO_BIZ_Employee_Contract c ON f.contractId = c.contractId
	AND c.deleted = 1
	LEFT JOIN hro_biz_client_order_header d ON c.contractId = d.contractId
	AND d.deleted = 1
	WHERE
		a.deleted = 1
		<if test="corpId != null and corpId != ''">
			AND (f.corpId = #{corpId} OR 0 = #{corpId})
		</if>
		<if test="corpId == null or corpId == ''">
			AND f.corpId IS NULL
		</if>
		<if test="entityId != null and entityId != ''">
			AND (f.entityId = #{entityId} or 0 = #{entityId})
		</if>
		<if test="businessTypeId != null and businessTypeId != ''">
			AND (f.businessTypeId = #{businessTypeId} or 0 = #{businessTypeId})
		</if>
		<if test="employeeId != null and employeeId != ''">
			AND f.employeeId = #{employeeId}
		</if>
		<if test="employeeNameZH != null and employeeNameZH != ''">
			AND f.employeeNameZH like CONCAT('%', '${employeeNameZH}', '%') 
		</if>
		<if test="employeeNameEN != null and employeeNameEN != ''">
			AND f.employeeNameEN like CONCAT('%', '${employeeNameEN}', '%') 
		</if>
		<if test="clientId != null and clientId != ''">
			AND f.clientId = #{clientId}
		</if>
		<if test="vendorId != null and vendorId != ''">
			AND f.vendorId = #{vendorId}
		</if>
		<if test="clientNameZH != null and clientNameZH != ''">
			AND b.nameZH like CONCAT('%', '${clientNameZH}', '%') 
		</if>
		<if test="clientNameEN != null and clientNameEN != ''">
			AND b.nameEN like CONCAT('%', '${clientNameEN}', '%') 
		</if>
		<if test="orderId != null and orderId != ''">
			AND f.orderId = #{orderId}
		</if>
		<if test="contractId != null and contractId != ''">
			AND f.contractId = #{contractId}
		</if>
		<if test="monthly != null and monthly != ''">
			AND (f.monthly = #{monthly} or '0' = #{monthly})
		</if>
		<if test="status != null and status != ''">
			AND (f.status = #{status} or 0 = #{status})
		</if>
		GROUP BY a.batchId
		<if test="sortColumn != null and sortColumn != '' and sortOrder != null and sortOrder != ''">
			order by ${sortColumn} ${sortOrder}
		</if>
	</select>

	<select id="getSettlementAdjustmentImportBatchVOByBatchId" parameterType="int" resultMap="result">
		SELECT
			a.batchId,<include refid="settelmentAdjustmentBatchColumns-for-join" />,
			COUNT(
				DISTINCT b.adjustmentHeaderId
			) AS countHeaderId,
			COUNT(DISTINCT b.contractId) AS countContractId,
					
		CASE
		WHEN (
			ISNULL(SUM(b.billAmountPersonal))
		) THEN
			0
		ELSE
			SUM(b.billAmountPersonal)
		END AS billAmountPersonal,
		 CASE
		WHEN (
			ISNULL(SUM(b.costAmountPersonal))
		) THEN
			0
		ELSE
			SUM(b.costAmountPersonal)
		END AS costAmountPersonal,
		 CASE
		WHEN (
			ISNULL(SUM(b.billAmountCompany))
		) THEN
			0
		ELSE
			SUM(b.billAmountCompany)
		END AS billAmountCompany,
		 CASE
		WHEN (
			ISNULL(SUM(b.costAmountCompany))
		) THEN
			0
		ELSE
			SUM(b.costAmountCompany)
		
		END AS costAmountCompany
		FROM
			hro_common_batch a
		INNER JOIN hro_settle_adjustment_header_temp b ON a.batchId = b.batchId
		AND b.deleted = 1
		AND b.batchId = #{batchId}
		GROUP BY
			a.batchId,<include refid="settelmentAdjustmentBatchColumns-for-join" />
	</select>

	<update id="updateSettlementAdjustmentImportBatchStatus" parameterType="settlementAdjustmentImportBatch">
		UPDATE
		hro_common_batch SET status = 2 WHERE batchId = #{batchId}
	</update>

	<delete id="deleteSettlementAdjustmentCommonBatchById" parameterType="int">
		delete
		from hro_common_batch where batchId = #{value}
	</delete>
</mapper>