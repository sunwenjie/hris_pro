<?xml version="1.0" encoding="utf-8" ?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.kan.hro.domain.biz.payment.PaymentHeaderVO">

	<resultMap id="result" type="com.kan.hro.domain.biz.payment.PaymentHeaderVO">
		<result property="paymentHeaderId" column="paymentHeaderId" />
		<result property="orderContractId" column="orderContractId" />
		<result property="accountId" column="accountId" />
		<result property="clientId" column="clientId" />
		<result property="corpId" column="corpId" />
		<result property="entityId" column="entityId" />
		<result property="businessTypeId" column="businessTypeId" />
		<result property="batchId" column="batchId" ></result>
		<result property="orderId" column="orderId" />
		<result property="contractId" column="contractId" />
		<result property="employeeId" column="employeeId" />
		<result property="employeeNameZH" column="employeeNameZH" />
		<result property="employeeNameEN" column="employeeNameEN" />
		<result property="bankId" column="bankId" />
		<result property="bankNameZH" column="bankNameZH" />
		<result property="bankNameEN" column="bankNameEN" />
		<result property="bankAccount" column="bankAccount" />
		<result property="startDate" column="startDate" />
		<result property="endDate" column="endDate" />
		<result property="certificateType" column="certificateType" />
		<result property="certificateNumber" column="certificateNumber" />
		<result property="billAmountCompany" column="billAmountCompany" />
		<result property="billAmountPersonal" column="billAmountPersonal" />
		<result property="costAmountCompany" column="costAmountCompany" />
		<result property="costAmountPersonal" column="costAmountPersonal" />
		<result property="taxAmountPersonal" column="taxAmountPersonal" />
		<result property="addtionalBillAmountPersonal" column="addtionalBillAmountPersonal" />
		<result property="taxAgentAmountPersonal" column="taxAgentAmountPersonal" />
		<result property="annualBonus" column="annualBonus"/>
		<result property="annualBonusTax" column="annualBonusTax"/>
		<result property="monthly" column="monthly" />
		<result property="taxFlag" column="taxFlag" />
		<result property="vendorId" column="vendorId" />
		<result property="vendorNameZH" column="vendorNameZH" />
		<result property="vendorNameEN" column="vendorNameEN" />
		<result property="vendorServiceIds" column="vendorServiceIds" />
		<result property="vendorServiceFee" column="vendorServiceFee" />
		<result property="description" column="description" />
		<result property="itemGroupId" column="itemGroupId"/>
		<result property="deleted" column="deleted" />
		<result property="status" column="status" />
		<result property="remark1" column="remark1" />
		<result property="remark2" column="remark2" />
		<result property="remark3" column="remark3" />
		<result property="remark4" column="remark4" />
		<result property="remark5" column="remark5" />
		<result property="createBy" column="createBy" />
		<result property="createDate" column="createDate" />
		<result property="modifyBy" column="modifyBy" />
		<result property="modifyDate" column="modifyDate" />
		<!-- for app -->
		<result property="afterTaxSalary" column="afterTaxSalary" />
	</resultMap>
  	
	<sql id="paymentHeaderColumns">
		orderContractId, accountId, clientId, corpId, entityId, businessTypeId, batchId, orderId, contractId, employeeId, employeeNameZH, employeeNameEN, bankId, bankNameZH, bankNameEN, bankAccount, 
		startDate, endDate, certificateType, certificateNumber, billAmountCompany, billAmountPersonal, costAmountCompany, costAmountPersonal, taxAmountPersonal, annualBonus, annualBonusTax, addtionalBillAmountPersonal, taxAgentAmountPersonal, 
		monthly, taxFlag, vendorId, vendorNameZH, vendorNameEN, vendorServiceIds, vendorServiceFee, description, itemGroupId, deleted, status, remark1, remark2, remark3, remark4, remark5, createBy, createDate, 
		modifyBy, modifyDate
	</sql>
	
	<sql id="paymentBatchColumns-for-join">
		a.orderContractId, a.accountId, a.clientId, a.corpId, a.entityId, a.businessTypeId, a.batchId, a.orderId, a.contractId, a.employeeId, a.employeeNameZH, a.employeeNameEN, a.bankId, a.bankNameZH, 
		a.bankNameEN, a.bankAccount, a.startDate, a.endDate, a.certificateType, a.certificateNumber, 
		a.billAmountCompany - getIncrement(getPublicCode(a.employeeId), 'PRIVATE_CODE') as billAmountCompany, 
		a.billAmountPersonal - getIncrement(getPublicCode(a.employeeId), 'PRIVATE_CODE') as billAmountPersonal, 
		a.costAmountCompany - getIncrement(getPublicCode(a.employeeId), 'PRIVATE_CODE') as costAmountCompany, 
		a.costAmountPersonal - getIncrement(getPublicCode(a.employeeId), 'PRIVATE_CODE') as costAmountPersonal, 
		a.taxAmountPersonal - getIncrement(getPublicCode(a.employeeId), 'PRIVATE_CODE') as taxAmountPersonal, 
		a.addtionalBillAmountPersonal - getIncrement(getPublicCode(a.employeeId), 'PRIVATE_CODE') as addtionalBillAmountPersonal, 
		a.taxAgentAmountPersonal - getIncrement(getPublicCode(a.employeeId), 'PRIVATE_CODE') as taxAgentAmountPersonal,
		a.annualBonus - getIncrement(getPublicCode(a.employeeId), 'PRIVATE_CODE') as annualBonus,
		a.annualBonusTax - getIncrement(getPublicCode(a.employeeId), 'PRIVATE_CODE') as annualBonusTax,
		a.monthly, a.taxFlag, a.vendorId, a.vendorNameZH, a.vendorNameEN, a.vendorServiceIds, a.vendorServiceFee, a.description, a.itemGroupId, a.deleted, 
		a.status, a.remark1, a.remark2, a.remark3, a.remark4, 
		a.remark5 - getIncrement(getPublicCode(a.employeeId), 'PRIVATE_CODE') as remark5,
		a.createBy, a.createDate, a.modifyBy, a.modifyDate
	</sql>
	
	<sql id="paymentBatchColumns-for-join-encode">
		a.orderContractId, a.accountId, a.clientId, a.corpId, a.entityId, a.businessTypeId, a.batchId, a.orderId, a.contractId, a.employeeId, a.employeeNameZH, a.employeeNameEN, a.bankId, a.bankNameZH, 
		a.bankNameEN, a.bankAccount, a.startDate, a.endDate, a.certificateType, a.certificateNumber, a.billAmountCompany, a.billAmountPersonal, 
		a.costAmountCompany, a.costAmountPersonal, a.taxAmountPersonal, a.addtionalBillAmountPersonal, a.taxAgentAmountPersonal, a.annualBonus, a.annualBonusTax,
		a.monthly, a.taxFlag, a.vendorId, a.vendorNameZH, a.vendorNameEN, a.vendorServiceIds, a.vendorServiceFee, a.description, a.itemGroupId, a.deleted, 
		a.status, a.remark1, a.remark2, a.remark3, a.remark4, a.remark5, a.createBy, a.createDate, a.modifyBy, a.modifyDate
	</sql>

	<select id="countPaymentHeaderVOsByCondition" parameterType="paymentHeader" resultType="int">
		SELECT COUNT(1)
		FROM hro_payment_header a 
			LEFT JOIN hro_biz_employee e ON a.employeeId = e.employeeId AND e.deleted = 1
			LEFT JOIN hro_biz_employee_contract hbizemp ON a.contractId = hbizemp.contractId and hbizemp.deleted = 1
		WHERE a.deleted = 1 AND a.accountId = #{accountId}  
		<if test="batchId != null and batchId != ''">
			AND a.batchId = #{batchId}
		</if>
		<if test="corpId !=null and corpId!=''">
			AND a.corpId = #{corpId}
		</if>
		<if test="corpId == null or corpId == ''">
			AND a.corpId IS NULL
		</if>
		<if test="entityId != null and entityId != '0'">
			AND (a.entityId = #{entityId} or '0' = '${entityId}')
		</if>
		<if test="employeeId != null and employeeId != ''">
			AND a.employeeId = #{employeeId}
		</if>
		<if test="employeeNo != null and employeeNo != ''">
			AND e.employeeNo = #{employeeNo}
		</if>
		<if test="employeeNameZH != null and employeeNameZH != ''">
			AND a.employeeNameZH like CONCAT('%', '${employeeNameZH}', '%')
		</if>
		<if test="employeeNameEN != null and employeeNameEN != ''">
			AND a.employeeNameEN like CONCAT('%', '${employeeNameEN}', '%')
		</if>
		<if test="contractId != null and contractId != ''">
			AND a.contractId = #{contractId}
		</if>
		<if test="orderId != null and orderId != ''">
			AND (a.orderId = #{orderId} or '0' = #{orderId})
		</if>
		<if test="residencyType != null and residencyType != ''">
			AND (e.residencyType = #{residencyType} or '0' = '${residencyType}')
		</if>
		<if test="certificateNumber != null and certificateNumber != ''">
			AND a.certificateNumber = #{certificateNumber}
		</if>
		<if test="monthly != null and monthly != ''">
			AND (a.monthly = #{monthly} or '0' = '${monthly}')
		</if>
		<if test="status != null and status != ''">
			AND (a.status in (${status}) or '0' = '${status}')
		</if>
		
		<if test="rulePublic == 1">
			AND ( false 
			<if test="rulePrivateIds !=null">
				 OR hbizemp.employeeId in
				<foreach collection="rulePrivateIds" item="rulePrivateId"  open="(" separator="," close=")">  
	        		#{rulePrivateId}
	     		</foreach>
			</if>
			<if test="rulePositionIds !=null">
				OR hbizemp.owner in
				<foreach collection="rulePositionIds" item="rulePositionId"  open="(" separator="," close=")">  
	        		#{rulePositionId}
	     		</foreach>
			</if>
			<if test="ruleBranchIds !=null">
				OR e._tempBranchIds in
				<foreach collection="ruleBranchIds" item="ruleBranchId"  open="(" separator="," close=")">  
	        		#{ruleBranchId}
	     		</foreach>
			</if>
			<if test="ruleBusinessTypeIds !=null">
				OR e.businessTypeId in
				<foreach collection="ruleBusinessTypeIds" item="ruleBusinessTypeId"  open="(" separator="," close=")">  
	        		#{ruleBusinessTypeId}
	     		</foreach>
			</if>
			<if test="ruleEntityIds !=null">
				OR hbizemp.entityId in
				<foreach collection="ruleEntityIds" item="ruleEntityId"  open="(" separator="," close=")">  
	        		#{ruleEntityId}
	     		</foreach>
			</if>
			)
		</if>
		
	</select>
	
	<select id="summaryPaymentHeaderVOsByCondition" parameterType="paymentHeader" resultMap="result">
		SELECT a.accountId, a.corpId, a.batchId, a.monthly, 
			SUM(a.billAmountCompany - getIncrement(getPublicCode(a.employeeId), 'PRIVATE_CODE') ) as billAmountCompany, 
			SUM(a.billAmountPersonal - getIncrement(getPublicCode(a.employeeId), 'PRIVATE_CODE')) as billAmountPersonal, 
			SUM(a.costAmountCompany - getIncrement(getPublicCode(a.employeeId), 'PRIVATE_CODE')) as costAmountCompany,
			COUNT(DISTINCT a.clientId) AS countClientIds, COUNT(DISTINCT a.orderId) AS countOrderIds, 
			COUNT(DISTINCT a.contractId) AS countContractIds, COUNT(DISTINCT a.employeeId) AS countEmployeeIds, 
			SUM(a.taxAmountPersonal) AS taxAmountPersonal, 
			<!-- 个人支出添加个税数值 -->
			(SUM(a.costAmountPersonal - getIncrement(getPublicCode(a.employeeId), 'PRIVATE_CODE')) + 
			 SUM(a.taxAmountPersonal - getIncrement(getPublicCode(a.employeeId), 'PRIVATE_CODE'))) as costAmountPersonal
		FROM hro_payment_header a 
			LEFT JOIN hro_biz_employee e ON a.employeeId = e.employeeId AND e.deleted = 1
			LEFT JOIN hro_biz_employee_contract hbizemp ON a.contractId = hbizemp.contractId and hbizemp.deleted = 1
		WHERE a.deleted = 1 AND a.accountId = #{accountId}  
		<if test="batchId != null and batchId != ''">
			AND a.batchId = #{batchId}
		</if>
		<if test="corpId !=null and corpId!=''">
			AND a.corpId=#{corpId}
		</if>
		<if test="corpId == null or corpId == ''">
			AND a.corpId IS NULL
		</if>
		<if test="entityId != null and entityId != '0'">
			AND (a.entityId = #{entityId} or '0' = '${entityId}')
		</if>
		<if test="employeeId != null and employeeId != ''">
			AND a.employeeId = #{employeeId}
		</if>
		<if test="employeeNo != null and employeeNo != ''">
			AND e.employeeNo = #{employeeNo}
		</if>
		<if test="employeeNameZH != null and employeeNameZH != ''">
			AND a.employeeNameZH like CONCAT('%', '${employeeNameZH}', '%')
		</if>
		<if test="employeeNameEN != null and employeeNameEN != ''">
			AND a.employeeNameEN like CONCAT('%', '${employeeNameEN}', '%')
		</if>
		<if test="contractId != null and contractId != ''">
			AND a.contractId = #{contractId}
		</if>
		<if test="orderId != null and orderId != ''">
			AND (a.orderId = #{orderId} or '0' = #{orderId})
		</if>
		<if test="residencyType != null and residencyType != ''">
			AND (e.residencyType = #{residencyType} or '0' = '${residencyType}')
		</if>
		<if test="certificateNumber != null and certificateNumber != ''">
			AND e.certificateNumber = #{certificateNumber}
		</if>
		<if test="monthly != null and monthly != ''">
			AND (a.monthly = #{monthly} or '0' = '${monthly}')
		</if>
		<if test="status != null and status != ''">
			AND (a.status in (${status}) or '0' = '${status}')
		</if>
		
		<if test="rulePublic == 1">
			AND ( false 
			<if test="rulePrivateIds !=null">
				 OR hbizemp.employeeId in
				<foreach collection="rulePrivateIds" item="rulePrivateId"  open="(" separator="," close=")">  
	        		#{rulePrivateId}
	     		</foreach>
			</if>
			<if test="rulePositionIds !=null">
				OR hbizemp.owner in
				<foreach collection="rulePositionIds" item="rulePositionId"  open="(" separator="," close=")">  
	        		#{rulePositionId}
	     		</foreach>
			</if>
			<if test="ruleBranchIds !=null">
				OR e._tempBranchIds in
				<foreach collection="ruleBranchIds" item="ruleBranchId"  open="(" separator="," close=")">  
	        		#{ruleBranchId}
	     		</foreach>
			</if>
			<if test="ruleBusinessTypeIds !=null">
				OR e.businessTypeId in
				<foreach collection="ruleBusinessTypeIds" item="ruleBusinessTypeId"  open="(" separator="," close=")">  
	        		#{ruleBusinessTypeId}
	     		</foreach>
			</if>
			<if test="ruleEntityIds !=null">
				OR hbizemp.entityId in
				<foreach collection="ruleEntityIds" item="ruleEntityId"  open="(" separator="," close=")">  
	        		#{ruleEntityId}
	     		</foreach>
			</if>
			)
		</if>
		
		GROUP BY a.batchId
	</select>
	
	<select id="getPaymentHeaderVOsByCondition" parameterType="paymentHeader" resultMap="result">
		SELECT a.paymentHeaderId, <include refid="paymentBatchColumns-for-join" />
		FROM hro_payment_header a 
			LEFT JOIN hro_biz_employee e ON a.employeeId = e.employeeId AND e.deleted = 1
			LEFT JOIN hro_biz_employee_contract hbizemp ON a.contractId = hbizemp.contractId and hbizemp.deleted = 1
		WHERE a.deleted = 1 AND a.accountId = #{accountId}  
		<if test="batchId != null and batchId != ''">
			AND a.batchId = #{batchId}
		</if>
		<if test="corpId !=null and corpId!=''">
			AND a.corpId=#{corpId}
		</if>
		<if test="corpId == null or corpId == ''">
			AND a.corpId IS NULL
		</if>
		<if test="entityId != null and entityId != ''">
			AND (a.entityId = #{entityId} or '0' = '${entityId}')
		</if>
		<if test="employeeId != null and employeeId != ''">
			AND a.employeeId = #{employeeId}
		</if>
		<if test="employeeNo != null and employeeNo != ''">
			AND e.employeeNo = #{employeeNo}
		</if>
		<if test="employeeNameZH != null and employeeNameZH != ''">
			AND a.employeeNameZH like CONCAT('%', '${employeeNameZH}', '%')
		</if>
		<if test="employeeNameEN != null and employeeNameEN != ''">
			AND a.employeeNameEN like CONCAT('%', '${employeeNameEN}', '%')
		</if>
		<if test="contractId != null and contractId != ''">
			AND a.contractId = #{contractId}
		</if>
		<if test="orderId != null and orderId != ''">
			AND (a.orderId = #{orderId} or '0' = #{orderId})
		</if>
		<if test="residencyType != null and residencyType != ''">
			AND (e.residencyType = #{residencyType} or '0' = '${residencyType}')
		</if>
		<if test="certificateNumber != null and certificateNumber != ''">
			AND e.certificateNumber = #{certificateNumber}
		</if>
		<if test="monthly != null and monthly != ''">
			AND (a.monthly = #{monthly} or '0' = '${monthly}')
		</if>
		<if test="status != null and status != ''">
			AND (a.status in (${status}) or '0' = '${status}')
		</if>
		
		<if test="rulePublic == 1">
			AND ( false 
			<if test="rulePrivateIds !=null">
				 OR hbizemp.employeeId in
				<foreach collection="rulePrivateIds" item="rulePrivateId"  open="(" separator="," close=")">  
	        		#{rulePrivateId}
	     		</foreach>
			</if>
			<if test="rulePositionIds !=null">
				OR hbizemp.owner in
				<foreach collection="rulePositionIds" item="rulePositionId"  open="(" separator="," close=")">  
	        		#{rulePositionId}
	     		</foreach>
			</if>
			<if test="ruleBranchIds !=null">
				OR e._tempBranchIds in
				<foreach collection="ruleBranchIds" item="ruleBranchId"  open="(" separator="," close=")">  
	        		#{ruleBranchId}
	     		</foreach>
			</if>
			<if test="ruleBusinessTypeIds !=null">
				OR e.businessTypeId in
				<foreach collection="ruleBusinessTypeIds" item="ruleBusinessTypeId"  open="(" separator="," close=")">  
	        		#{ruleBusinessTypeId}
	     		</foreach>
			</if>
			<if test="ruleEntityIds !=null">
				OR hbizemp.entityId in
				<foreach collection="ruleEntityIds" item="ruleEntityId"  open="(" separator="," close=")">  
	        		#{ruleEntityId}
	     		</foreach>
			</if>
			)
		</if>
		
		<if	test="sortColumn != null and sortColumn != '' and sortOrder != null and sortOrder != ''">
			ORDER BY ${sortColumn} ${sortOrder}
		</if>
	</select>
	
	<select id="getPaymentHeaderVOByHeaderId" parameterType="int" resultMap="result">
		SELECT a.paymentHeaderId, <include refid="paymentBatchColumns-for-join" />
		FROM hro_payment_header a
		WHERE a.paymentHeaderId = #{value}
	</select>
	
	<select id="getPaymentHeaderVOsByBatchId" parameterType="int" resultMap="result">
		SELECT a.paymentHeaderId, <include refid="paymentBatchColumns-for-join" />
		FROM hro_payment_header a
		WHERE a.deleted = 1 AND a.batchId = #{value}
	</select>

	<update id="updatePaymentHeader" parameterType="paymentHeader">
		UPDATE hro_payment_header SET orderContractId = #{orderContractId}, accountId = #{accountId}, clientId = #{clientId}, corpId = #{corpId}, entityId = #{entityId}, businessTypeId = #{businessTypeId}, 
			batchId = #{batchId}, orderId = #{orderId}, contractId = #{contractId}, employeeId = #{employeeId}, employeeNameZH = #{employeeNameZH}, employeeNameEN = #{employeeNameEN}, bankId = #{bankId}, 
			bankNameZH = #{bankNameZH}, bankNameEN = #{bankNameEN}, bankAccount = #{bankAccount}, startDate = #{startDate}, endDate = #{endDate}, certificateType = #{certificateType}, 
			certificateNumber = #{certificateNumber}, billAmountCompany = #{billAmountCompany}, billAmountPersonal = #{billAmountPersonal}, costAmountCompany = #{costAmountCompany}, 
			costAmountPersonal = #{costAmountPersonal}, taxAmountPersonal = #{taxAmountPersonal}, annualBonus = #{annualBonus}, annualBonusTax = #{annualBonusTax}, addtionalBillAmountPersonal = #{addtionalBillAmountPersonal}, taxAgentAmountPersonal = #{taxAgentAmountPersonal}, 
			monthly = #{monthly}, taxFlag = #{taxFlag}, vendorId = #{vendorId}, vendorNameZH = #{vendorNameZH}, vendorNameEN = #{vendorNameEN}, vendorServiceIds = #{vendorServiceIds}, 
			vendorServiceFee = #{vendorServiceFee}, description = #{description}, itemGroupId = #{itemGroupId}, deleted = #{deleted}, status = #{status}, remark1 = #{remark1}, remark2 = #{remark2}, 
			remark3 = #{remark3}, remark4 = #{remark4}, remark5 = #{remark5}, createBy = #{createBy}, createDate = #{createDate}, modifyBy = #{modifyBy}, modifyDate = #{modifyDate}
		WHERE paymentHeaderId = #{paymentHeaderId} 
  	</update>

	<insert id="insertPaymentHeader" parameterType="paymentHeader" useGeneratedKeys="true" keyProperty="paymentHeaderId">
		INSERT INTO hro_payment_header( <include refid="paymentHeaderColumns" /> )
		VALUES (#{orderContractId}, #{accountId}, #{clientId}, #{corpId}, #{entityId}, #{businessTypeId}, #{batchId}, #{orderId}, #{contractId}, #{employeeId}, #{employeeNameZH}, #{employeeNameEN}, #{bankId}, 
			#{bankNameZH}, #{bankNameEN}, #{bankAccount}, #{startDate}, #{endDate}, #{certificateType}, #{certificateNumber}, #{billAmountCompany}, #{billAmountPersonal}, #{costAmountCompany}, #{costAmountPersonal}, 
			#{taxAmountPersonal}, #{annualBonus}, #{annualBonusTax}, #{addtionalBillAmountPersonal}, #{taxAgentAmountPersonal}, #{monthly}, #{taxFlag}, #{vendorId}, #{vendorNameZH}, #{vendorNameEN}, #{vendorServiceIds}, #{vendorServiceFee}, 
			#{description}, #{itemGroupId}, 1, 1, #{remark1}, #{remark2}, #{remark3}, #{remark4}, #{remark5}, #{createBy}, #{createDate}, #{modifyBy}, #{modifyDate})
	</insert>

	<delete id="deletePaymentHeader" parameterType="int">
		DELETE FROM hro_payment_header WHERE paymentHeaderId = #{value}
  	</delete>
  	
  	<select id="getPaymentMonthliesByPaymentHeaderVO" parameterType="paymentHeader" resultMap="result">
		SELECT b.accountId, b.monthly, 
		b.addtionalBillAmountPersonal - getIncrement(getPublicCode(b.employeeId), 'PRIVATE_CODE') as billAmountCompany, 
		b.taxAmountPersonal - getIncrement(getPublicCode(b.employeeId), 'PRIVATE_CODE') as taxAmountPersonal, 
		b.billAmountPersonal - getIncrement(getPublicCode(b.employeeId), 'PRIVATE_CODE') as billAmountPersonal, 
		b.costAmountPersonal - getIncrement(getPublicCode(b.employeeId), 'PRIVATE_CODE') as costAmountPersonal,
		b.annualBonusTax - getIncrement(getPublicCode(b.employeeId), 'PRIVATE_CODE') AS annualBonusTax, 
		b.annualBonus - getIncrement(getPublicCode(b.employeeId), 'PRIVATE_CODE')  AS annualBonus,
		b.remark5 - getIncrement(getPublicCode(b.employeeId), 'PRIVATE_CODE')  AS remark5
		FROM hro_payment_header b LEFT JOIN hro_payment_detail a on a.paymentHeaderId = b.paymentHeaderId and a.deleted = 1
		WHERE b.deleted = 1 AND b.employeeId = #{employeeId} AND b.status = 3
			<if test="monthly != null and monthly != ''">
				AND b.monthly like CONCAT('%', '${monthly}', '%')
			</if>
		GROUP BY b.monthly
		ORDER BY b.monthly DESC
	</select>
	
	<select id="getEncodePaymentHeaderVOsByCondition" parameterType="paymentHeader" resultMap="result">
		SELECT a.paymentHeaderId, <include refid="paymentBatchColumns-for-join-encode" />
		FROM hro_payment_header a 
			LEFT JOIN hro_biz_employee e ON a.employeeId = e.employeeId AND e.deleted = 1
			LEFT JOIN hro_biz_employee_contract hbizemp ON a.contractId = hbizemp.contractId and hbizemp.deleted = 1
		WHERE a.deleted = 1 AND a.accountId = #{accountId}  
		<if test="batchId != null and batchId != ''">
			AND a.batchId = #{batchId}
		</if>
		<if test="corpId !=null and corpId!=''">
			AND a.corpId=#{corpId}
		</if>
		<if test="corpId == null or corpId == ''">
			AND a.corpId IS NULL
		</if>
		<if test="entityId != null and entityId != ''">
			AND (a.entityId = #{entityId} or '0' = '${entityId}')
		</if>
		<if test="employeeId != null and employeeId != ''">
			AND a.employeeId = #{employeeId}
		</if>
		<if test="employeeNo != null and employeeNo != ''">
			AND e.employeeNo = #{employeeNo}
		</if>
		<if test="employeeNameZH != null and employeeNameZH != ''">
			AND a.employeeNameZH like CONCAT('%', '${employeeNameZH}', '%')
		</if>
		<if test="employeeNameEN != null and employeeNameEN != ''">
			AND a.employeeNameEN like CONCAT('%', '${employeeNameEN}', '%')
		</if>
		<if test="contractId != null and contractId != ''">
			AND a.contractId = #{contractId}
		</if>
		<if test="orderId != null and orderId != ''">
			AND (a.orderId = #{orderId} or '0' = #{orderId})
		</if>
		<if test="residencyType != null and residencyType != ''">
			AND (e.residencyType = #{residencyType} or '0' = '${residencyType}')
		</if>
		<if test="certificateNumber != null and certificateNumber != ''">
			AND e.certificateNumber = #{certificateNumber}
		</if>
		<if test="monthly != null and monthly != ''">
			AND (a.monthly = #{monthly} or '0' = '${monthly}')
		</if>
		<if test="status != null and status != ''">
			AND (a.status in (${status}) or '0' = '${status}')
		</if>
		
		<if test="rulePublic == 1">
			AND ( false 
			<if test="rulePrivateIds !=null">
				 OR hbizemp.employeeId in
				<foreach collection="rulePrivateIds" item="rulePrivateId"  open="(" separator="," close=")">  
	        		#{rulePrivateId}
	     		</foreach>
			</if>
			<if test="rulePositionIds !=null">
				OR hbizemp.owner in
				<foreach collection="rulePositionIds" item="rulePositionId"  open="(" separator="," close=")">  
	        		#{rulePositionId}
	     		</foreach>
			</if>
			<if test="ruleBranchIds !=null">
				OR e._tempBranchIds in
				<foreach collection="ruleBranchIds" item="ruleBranchId"  open="(" separator="," close=")">  
	        		#{ruleBranchId}
	     		</foreach>
			</if>
			<if test="ruleBusinessTypeIds !=null">
				OR e.businessTypeId in
				<foreach collection="ruleBusinessTypeIds" item="ruleBusinessTypeId"  open="(" separator="," close=")">  
	        		#{ruleBusinessTypeId}
	     		</foreach>
			</if>
			<if test="ruleEntityIds !=null">
				OR hbizemp.entityId in
				<foreach collection="ruleEntityIds" item="ruleEntityId"  open="(" separator="," close=")">  
	        		#{ruleEntityId}
	     		</foreach>
			</if>
			)
		</if>
		
		<if	test="sortColumn != null and sortColumn != '' and sortOrder != null and sortOrder != ''">
			ORDER BY ${sortColumn} ${sortOrder}
		</if>
	</select>
	
</mapper>