<?xml version="1.0" encoding="utf-8" ?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.kan.hro.domain.biz.sb.SBHeaderVO">

	<resultMap id="result" type="com.kan.hro.domain.biz.sb.SBHeaderVO">
		<result property="headerId" column="headerId" />
		<result property="accountId" column="accountId" />
		<result property="entityId" column="entityId" />
		<result property="businessTypeId" column="businessTypeId" />
		<result property="batchId" column="batchId" />
		<result property="clientId" column="clientId" />
		<result property="corpId" column="corpId" />
		<result property="clientNo" column="clientNo" />
		<result property="clientNameZH" column="clientNameZH" />
		<result property="clientNameEN" column="clientNameEN" />
		<result property="orderId" column="orderId" />
		<result property="contractId" column="contractId" />
		<result property="contractStartDate" column="contractStartDate" />
		<result property="contractEndDate" column="contractEndDate" />
		<result property="contractBranch" column="contractBranch" />
		<result property="contractOwner" column="contractOwner" />
		<result property="employeeId" column="employeeId" />
		<result property="employeeNameZH" column="employeeNameZH" />
		<result property="employeeNameEN" column="employeeNameEN" />
		<result property="employeeSBId" column="employeeSBId" />
		<result property="employeeSBNameZH" column="employeeSBNameZH" />
		<result property="employeeSBNameEN" column="employeeSBNameEN" />
		<result property="cityId" column="cityId" />
		<result property="vendorId" column="vendorId" />
		<result property="vendorNameZH" column="vendorNameZH" />
		<result property="vendorNameEN" column="vendorNameEN" />
		<result property="vendorServiceIds" column="vendorServiceIds" />
		<result property="vendorServiceFee" column="vendorServiceFee" />
		<result property="workPlace" column="workPlace" />
		<result property="gender" column="gender" />
		<result property="certificateType" column="certificateType" />
		<result property="certificateNumber" column="certificateNumber" />
		<result property="needMedicalCard" column="needMedicalCard" />
		<result property="needSBCard" column="needSBCard" />
		<result property="medicalNumber" column="medicalNumber" />
		<result property="sbNumber" column="sbNumber" />
		<result property="fundNumber" column="fundNumber" />
		<result property="personalSBBurden" column="personalSBBurden" />
		<result property="residencyType" column="residencyType" />
		<result property="residencyCityId" column="residencyCityId" />
		<result property="residencyAddress" column="residencyAddress" />
		<result property="highestEducation" column="highestEducation" />
		<result property="maritalStatus" column="maritalStatus" />
		<result property="employStatus" column="employStatus" />
		<result property="sbStatus" column="sbStatus" />
		<result property="startDate" column="startDate" />
		<result property="endDate" column="endDate" />
		<result property="onboardDate" column="onboardDate" />
		<result property="resignDate" column="resignDate" />
		<result property="monthly" column="monthly" />
		<result property="flag" column="flag" />
		<result property="description" column="description" />
		<result property="deleted" column="deleted" />
		<result property="status" column="status" />
		<result property="remark1" column="remark1" />
		<result property="remark2" column="remark2" />
		<result property="remark3" column="remark3" />
		<result property="remark4" column="remark4" />
		<result property="remark5" column="remark5" />
		<result property="createBy" column="createBy" />
		<result property="createDate" column="createDate" />
		<result property="modifyBy" column="modifyBy" />
		<result property="modifyDate" column="modifyDate" />
		<!-- For App -->
		<result property="amountCompany" column="amountCompany" />
		<result property="amountPersonal" column="amountPersonal" />
		<result property="countHeaderId" column="countHeaderId" />
		<result property="countItemId" column="countItemId" />
		<result property="contractStatus" column="contractStatus" />
		<result property="additionalStatus" column="additionalStatus" />
		<result property="sbSolutionId" column="sbSolutionId" />
		<result property="orderDescription" column="orderDescription" />
		<result property="countClientId" column="countClientId" />
	</resultMap>
  	
	<sql id="SBHeaderColumns">
		accountId, entityId, businessTypeId, batchId, clientId, corpId, clientNo, clientNameZH, clientNameEN, orderId, contractId, contractStartDate, 
		contractEndDate, contractBranch, contractOwner, employeeId, employeeNameZH, employeeNameEN, employeeSBId, employeeSBNameZH, employeeSBNameEN, 
		cityId, vendorId, vendorNameZH, vendorNameEN, vendorServiceIds, vendorServiceFee, workPlace, gender, certificateType, certificateNumber, 
		needMedicalCard, needSBCard, medicalNumber, sbNumber, fundNumber, personalSBBurden, residencyType, residencyCityId, residencyAddress, highestEducation, 
		maritalStatus, employStatus, sbStatus, startDate, endDate, onboardDate, resignDate, monthly,flag, description, deleted, status, remark1, remark2, 
		remark3, remark4, remark5, createBy, createDate, modifyBy, modifyDate 
	</sql>
  	
	<sql id="SBHeaderColumns-for-join">
		a.accountId, a.entityId, a.businessTypeId, a.batchId, a.clientId, a.corpId, a.clientNo, a.clientNameZH, a.clientNameEN, a.orderId, a.contractId, 
		a.contractStartDate, a.contractEndDate, a.contractBranch, a.contractOwner, a.employeeId, a.employeeNameZH, a.employeeNameEN, a.employeeSBId, 
		a.employeeSBNameZH, a.employeeSBNameEN, a.cityId, a.vendorId, a.vendorNameZH, a.vendorNameEN, a.vendorServiceIds, a.vendorServiceFee, 
		a.workPlace, a.gender, a.certificateType, a.certificateNumber, a.needMedicalCard, a.needSBCard, a.medicalNumber, a.sbNumber, a.fundNumber, a.personalSBBurden,  
		a.residencyType, a.residencyCityId, a.residencyAddress, a.highestEducation, a.maritalStatus, a.employStatus, a.sbStatus, a.startDate, a.endDate, 
		a.onboardDate, a.resignDate, a.monthly,a.flag, a.description, a.deleted, a.status, a.remark1, a.remark2, a.remark3, a.remark4, a.remark5, a.createBy, 
		a.createDate, a.modifyBy, a.modifyDate 
	</sql>
	
	<!-- Reviewed by Kevin Jin at 2014-04-27 -->
	<select id="countSBHeaderVOsByCondition" parameterType="sbHeader" resultType="int">
		SELECT COUNT( DISTINCT a.headerId )
		FROM hro_sb_header a LEFT JOIN hro_sb_batch b ON a.batchId = b.batchId AND b.deleted = 1
			LEFT JOIN hro_sb_detail c ON a.headerId = c.headerId AND c.deleted = 1
			LEFT JOIN hro_biz_employee_contract_sb d ON a.employeeSBId = d.employeeSBId AND d.deleted = 1
			LEFT JOIN hro_biz_employee e ON a.employeeId = e.employeeId AND e.deleted = 1
			LEFT JOIN hro_biz_employee_contract f ON d.contractId = f.contractId AND f.deleted = 1
			LEFT JOIN hro_biz_client_order_header g ON a.orderId = g.orderHeaderId AND g.deleted = 1
		WHERE a.deleted = 1 AND a.accountId = #{accountId}
		<if test="corpId != null and corpId != ''">
			AND (a.corpId = #{corpId} OR 0 = #{corpId}) 
		</if>
		<if test="corpId == null or corpId == ''">
			AND a.corpId IS NULL 
		</if>
		<if test="flag!=null and flag == 1 and flag != 0">
			AND a.flag = 1
		</if>
		<if test="flag!=null and flag != 1 and flag != 0">
			AND (a.flag IS NULL OR  a.flag != 1)
		</if>
		<if test="clientId != null and clientId != ''">
			AND a.clientId = #{clientId} 
		</if>
		<if test="batchId != null and batchId != ''">
			AND a.batchId = #{batchId} 
		</if>
		<if test="headerId != null and headerId != ''">
			AND a.headerId = #{headerId} 
		</if>
		<if test="contractId != null and contractId != ''">
			AND a.contractId = #{contractId}
		</if>
		<if test="employeeId != null and employeeId != ''">
			AND a.employeeId = #{employeeId}
		</if>
		<if test="employeeNo != null and employeeNo != ''">
			AND e.employeeNo = #{employeeNo}
		</if>
		<if test="employeeNameZH != null and employeeNameZH != ''">
			AND a.employeeNameZH like CONCAT('%', '${employeeNameZH}', '%')
		</if>
		<if test="employeeNameEN != null and employeeNameEN != ''">
			AND a.employeeNameEN like CONCAT('%', '${employeeNameEN}', '%')
		</if>
		<if test="employeeSBId != null and employeeSBId != ''">
			AND (a.employeeSBId = #{employeeSBId} or '0' = #{employeeSBId})
		</if>
		<if test="orderDescription != null and orderDescription != ''">
			AND f.description like CONCAT('%', '${orderDescription}', '%')
		</if>
		<if test="residencyType != null and residencyType != ''">
			AND (a.residencyType = #{residencyType} OR '0' = #{residencyType})
		</if>
		<if test="certificateNumber != null and certificateNumber != ''">
			AND a.certificateNumber = #{certificateNumber}
		</if>
		<if test="vendorId != null and vendorId != ''">
			AND (a.vendorId = #{vendorId} or '0' = #{vendorId} )
		</if>
		<if test="monthly != null and monthly != ''">
			AND (a.monthly = #{monthly} or '0' = #{monthly})
		</if>
		<if test="sbSolutionId != null and sbSolutionId != ''">
			AND (d.sbSolutionId = #{sbSolutionId} or '0' = #{sbSolutionId})
		</if>
		<if test="orderId != null and orderId != ''">
			AND (a.orderId = #{orderId} or '0' = #{orderId})
		</if>
		<if test="employStatus != null and employStatus != ''">
			AND (a.employStatus = #{employStatus} or '0' = #{employStatus})
		</if>
		<if test="sbStatus != null and sbStatus != ''">
			AND a.sbStatus IN (${sbStatus})
		</if>
		<if test="contractStatus != null and contractStatus != ''">
			AND ( f.status = #{contractStatus} or 0 = #{contractStatus} )
		</if>
		<if test="startDate != null and startDate != ''">
			AND ( a.startDate = #{startDate} )
		</if>
		<if test="monthlyLimit != null and monthlyLimit != ''">
			AND <![CDATA[ b.monthly <= #{monthlyLimit} ]]>
		</if>
		<if test="status != null and status != ''">
			AND (c.status in (${status}) or '0' = '${status}')
		</if>
		
		<if test="rulePublic == 1">
			AND ( false 
			<if test="rulePrivateIds !=null">
				 OR f.employeeId in
				<foreach collection="rulePrivateIds" item="rulePrivateId"  open="(" separator="," close=")">  
	        		#{rulePrivateId}
	     		</foreach>
			</if>
			<if test="rulePositionIds !=null">
				OR f.owner in
				<foreach collection="rulePositionIds" item="rulePositionId"  open="(" separator="," close=")">  
	        		#{rulePositionId}
	     		</foreach>
			</if>
			<if test="ruleBranchIds !=null">
				OR e._tempBranchIds in
				<foreach collection="ruleBranchIds" item="ruleBranchId"  open="(" separator="," close=")">  
	        		#{ruleBranchId}
	     		</foreach>
			</if>
			<if test="ruleBusinessTypeIds !=null">
				OR e.businessTypeId in
				<foreach collection="ruleBusinessTypeIds" item="ruleBusinessTypeId"  open="(" separator="," close=")">  
	        		#{ruleBusinessTypeId}
	     		</foreach>
			</if>
			<if test="ruleEntityIds !=null">
				OR f.entityId in
				<foreach collection="ruleEntityIds" item="ruleEntityId"  open="(" separator="," close=")">  
	        		#{ruleEntityId}
	     		</foreach>
			</if>
			)
		</if>
		
	</select>
	
	<select id="countAmountVendorSBHeaderVOsByCondition" parameterType="sbHeader" resultType="int">
		SELECT COUNT(1) 
		FROM
			(SELECT a.vendorId, a.monthly
			FROM hro_sb_header a
				LEFT JOIN hro_sb_detail b ON a.headerId = b.headerId AND b.deleted = 1
				LEFT JOIN hro_biz_employee_contract hbizemp ON a.contractId = hbizemp.contractId and hbizemp.deleted = 1
				LEFT JOIN Hro_Biz_Employee hbe ON hbe.employeeId = a.employeeId and hbe.deleted = 1
			WHERE a.vendorId IS NOT NULL AND a.vendorId != '' AND a.deleted = 1 AND a.accountId = #{accountId}
			<if test="clientId != null and clientId != ''">
				AND a.clientId = #{clientId} 
			</if>
			<if test="vendorId != null and vendorId != ''">
				AND (a.vendorId = #{vendorId} or '0' = #{vendorId})
			</if>
			<if test="vendorNameZH != null and vendorNameZH != ''">
				AND a.vendorNameZH like CONCAT('%', '${vendorNameZH}', '%')
			</if>
			<if test="vendorNameEN != null and vendorNameEN != ''">
				AND a.vendorNameEN like CONCAT('%', '${vendorNameEN}', '%')
			</if>
			<if test="monthly != null and monthly != ''">
				AND (a.monthly = #{monthly} or '0' = #{monthly})
			</if>
			
			<if test="rulePublic == 1">
			AND ( false 
			<if test="rulePrivateIds !=null">
				 OR hbizemp.employeeId in
				<foreach collection="rulePrivateIds" item="rulePrivateId"  open="(" separator="," close=")">  
	        		#{rulePrivateId}
	     		</foreach>
			</if>
			<if test="rulePositionIds !=null">
				OR hbizemp.owner in
				<foreach collection="rulePositionIds" item="rulePositionId"  open="(" separator="," close=")">  
	        		#{rulePositionId}
	     		</foreach>
			</if>
			<if test="ruleBranchIds !=null">
				OR hbe._tempBranchIds in
				<foreach collection="ruleBranchIds" item="ruleBranchId"  open="(" separator="," close=")">  
	        		#{ruleBranchId}
	     		</foreach>
			</if>
			<if test="ruleBusinessTypeIds !=null">
				OR hbe.businessTypeId in
				<foreach collection="ruleBusinessTypeIds" item="ruleBusinessTypeId"  open="(" separator="," close=")">  
	        		#{ruleBusinessTypeId}
	     		</foreach>
			</if>
			<if test="ruleEntityIds !=null">
				OR hbizemp.entityId in
				<foreach collection="ruleEntityIds" item="ruleEntityId"  open="(" separator="," close=")">  
	        		#{ruleEntityId}
	     		</foreach>
			</if>
			)
		</if>
			
			GROUP BY a.vendorId, a.monthly) c
	</select>
	
	<select id="countVendorSBHeaderVOsByCondition" parameterType="sbHeader" resultType="int">
		SELECT COUNT(1) FROM
			(SELECT b.`status`, b.headerId FROM hro_sb_header a
			RIGHT JOIN hro_sb_detail b ON a.headerId = b.headerId AND a.deleted = 1
			LEFT JOIN hro_biz_employee_contract_sb c ON a.employeeSBId = c.employeeSBId AND c.deleted = 1
			LEFT JOIN hro_biz_employee_contract hbizemp ON a.contractId = hbizemp.contractId and hbizemp.deleted = 1
			LEFT JOIN Hro_Biz_Employee hbe ON hbe.employeeId = a.employeeId and hbe.deleted = 1
		WHERE a.vendorId = #{vendorId} AND a.deleted = 1 AND a.accountId = #{accountId}
		<if test="clientId != null and clientId != ''">
			AND a.clientId = #{clientId} 
		</if>
		<if test="batchId != null and batchId != ''">
			AND a.batchId = #{batchId} 
		</if>
		<if test="headerId != null and headerId != ''">
			AND a.headerId = #{headerId} 
		</if>
		<if test="contractId != null and contractId != ''">
			AND a.contractId = #{contractId}
		</if>
		<if test="employeeId != null and employeeId != ''">
			AND a.employeeId = #{employeeId}
		</if>
		<if test="employeeNameZH != null and employeeNameZH != ''">
			AND a.employeeNameZH like CONCAT('%', '${employeeNameZH}', '%')
		</if>
		<if test="employeeNameEN != null and employeeNameEN != ''">
			AND a.employeeNameEN like CONCAT('%', '${employeeNameEN}', '%')
		</if>
		<if test="monthly != null and monthly != ''">
			AND (a.monthly = #{monthly} or '0' = #{monthly})
		</if>
		<if test="sbSolutionId != null and sbSolutionId != ''">
			AND (c.sbSolutionId = #{sbSolutionId} or '0' = #{sbSolutionId})
		</if>
		<if test="orderId != null and orderId != ''">
			AND (a.orderId = #{orderId} or '0' = #{orderId})
		</if>
		<if test="employStatus != null and employStatus != ''">
			AND (a.employStatus = #{employStatus} or '0' = #{employStatus})
		</if>
		<if test="sbStatus != null and sbStatus != ''">
			AND (a.sbStatus = #{sbStatus} or '0' = #{sbStatus})
		</if>
		<if test="monthlyLimit != null and monthlyLimit != ''">
			AND <![CDATA[ CASE WHEN LENGTH(b.monthly) < 7 THEN CONCAT(LEFT(b.monthly, 5), LPAD(RIGHT(b.monthly, 1), 2, '0')) ELSE b.monthly END <= 
				CASE WHEN LENGTH(#{monthlyLimit}) < 7 THEN CONCAT(LEFT(#{monthlyLimit}, 5), LPAD(RIGHT(#{monthlyLimit}, 1), 2, '0')) 
					ELSE #{monthlyLimit} END ]]>
		</if>
		<if test="additionalStatus != null and additionalStatus != ''">
			AND (b.status in (${additionalStatus}) or '0' = '${additionalStatus}')
		</if>
		
		<if test="rulePublic == 1">
			AND ( false 
			<if test="rulePrivateIds !=null">
				 OR hbizemp.employeeId in
				<foreach collection="rulePrivateIds" item="rulePrivateId"  open="(" separator="," close=")">  
	        		#{rulePrivateId}
	     		</foreach>
			</if>
			<if test="rulePositionIds !=null">
				OR hbizemp.owner in
				<foreach collection="rulePositionIds" item="rulePositionId"  open="(" separator="," close=")">  
	        		#{rulePositionId}
	     		</foreach>
			</if>
			<if test="ruleBranchIds !=null">
				OR hbe._tempBranchIds in
				<foreach collection="ruleBranchIds" item="ruleBranchId"  open="(" separator="," close=")">  
	        		#{ruleBranchId}
	     		</foreach>
			</if>
			<if test="ruleBusinessTypeIds !=null">
				OR hbe.businessTypeId in
				<foreach collection="ruleBusinessTypeIds" item="ruleBusinessTypeId"  open="(" separator="," close=")">  
	        		#{ruleBusinessTypeId}
	     		</foreach>
			</if>
			<if test="ruleEntityIds !=null">
				OR hbizemp.entityId in
				<foreach collection="ruleEntityIds" item="ruleEntityId"  open="(" separator="," close=")">  
	        		#{ruleEntityId}
	     		</foreach>
			</if>
			)
		</if>
		
		GROUP BY b.`status`, b.headerId)d
	</select>

	<!-- Reviewed by Kevin Jin at 2014-04-27 -->
	<select id="getSBHeaderVOsByCondition" parameterType="sbHeader" resultMap="result">
		SELECT a.headerId, <include refid="SBHeaderColumns-for-join"/>, d.sbSolutionId, COUNT(1) AS countItemId, min(c.status) AS additionalStatus, e.branch,
			g.description AS orderDescription, f.status AS contractStatus ,
			(SELECT
				MAX(h.workflowId)
			FROM
				hro_history h
			WHERE
				(
					(
						h.accessAction = 'HRO_SB_BATCH_PREVIEW'
					)
					OR (
						h.accessAction = 'HRO_SB_BATCH_CONFIRM'
					)
					OR (
						h.accessAction = 'HRO_SB_BATCH_SUBMIT'
					)
				)
			AND h.objectType = 3
			AND (
			(CONCAT(',',a.batchId,',') like  CONCAT('%,',h.objectId,',%') 
				and h.remark4 = 'sbBatch')
			or 
			(CONCAT(',',a.headerId,',') like  CONCAT('%,',h.objectId,',%'))
				and h.remark4 = 'sbHeader'
			)
		) AS workflowId
			
			
		FROM hro_sb_header a LEFT JOIN hro_sb_batch b ON a.batchId = b.batchId AND b.deleted = 1
			LEFT JOIN hro_sb_detail c ON a.headerId = c.headerId AND c.deleted = 1
			LEFT JOIN hro_biz_employee_contract_sb d ON a.employeeSBId = d.employeeSBId AND d.deleted = 1
			LEFT JOIN hro_biz_employee e ON a.employeeId = e.employeeId AND e.deleted = 1
			LEFT JOIN hro_biz_employee_contract f ON d.contractId = f.contractId AND f.deleted = 1
			LEFT JOIN hro_biz_client_order_header g ON a.orderId = g.orderHeaderId AND g.deleted = 1
		WHERE a.deleted = 1 AND a.accountId = #{accountId}
		
		<if test="corpId != null and corpId != ''">
			AND (a.corpId = #{corpId} OR 0 = #{corpId}) 
		</if>
		<if test="corpId == null or corpId == ''">
			AND a.corpId IS NULL 
		</if>
		<if test="flag != null and flag == 1 and flag != 0 ">
			AND a.flag = 1
		</if>
		<if test="flag != null and flag != 1 and flag != 0 ">
			AND (a.flag IS NULL OR  a.flag != 1)
		</if>
		<if test="clientId != null and clientId != ''">
			AND a.clientId = #{clientId} 
		</if>
		<if test="batchId != null and batchId != ''">
			AND a.batchId = #{batchId} 
		</if>
		<if test="headerId != null and headerId != ''">
			AND a.headerId = #{headerId} 
		</if>
		<if test="contractId != null and contractId != ''">
			AND a.contractId = #{contractId}
		</if>
		<if test="employeeId != null and employeeId != ''">
			AND a.employeeId = #{employeeId}
		</if>
		<if test="employeeNo != null and employeeNo != ''">
			AND e.employeeNo = #{employeeNo}
		</if>
		<if test="employeeNameZH != null and employeeNameZH != ''">
			AND a.employeeNameZH like CONCAT('%', '${employeeNameZH}', '%')
		</if>
		<if test="employeeNameEN != null and employeeNameEN != ''">
			AND a.employeeNameEN like CONCAT('%', '${employeeNameEN}', '%')
		</if>
		<if test="employeeSBId != null and employeeSBId != ''">
			AND (a.employeeSBId = #{employeeSBId} or '0' = #{employeeSBId})
		</if>
		<if test="orderDescription != null and orderDescription != ''">
			AND f.description like CONCAT('%', '${orderDescription}', '%')
		</if>
		<if test="residencyType != null and residencyType != ''">
			AND (a.residencyType = #{residencyType} OR '0' = #{residencyType})
		</if>
		<if test="certificateNumber != null and certificateNumber != ''">
			AND a.certificateNumber = #{certificateNumber}
		</if>
		<if test="vendorId != null and vendorId != ''">
			AND (a.vendorId = #{vendorId} or '0' = #{vendorId} )
		</if>
		<if test="monthly != null and monthly != ''">
			AND (a.monthly = #{monthly} or '0' = #{monthly})
		</if>
		<if test="sbSolutionId != null and sbSolutionId != ''">
			AND (d.sbSolutionId = #{sbSolutionId} or '0' = #{sbSolutionId})
		</if>
		<if test="orderId != null and orderId != ''">
			AND (a.orderId = #{orderId} or '0' = #{orderId})
		</if>
		<if test="employStatus != null and employStatus != ''">
			AND (a.employStatus = #{employStatus} or '0' = #{employStatus})
		</if>
		<if test="sbStatus != null and sbStatus != ''">
			AND a.sbStatus IN (${sbStatus})
		</if>
		<if test="contractStatus != null and contractStatus != ''">
			AND ( f.status = #{contractStatus} or 0 = #{contractStatus} )
		</if>
		<if test="startDate != null and startDate != ''">
			AND ( a.startDate = #{startDate} )
		</if>
		<if test="monthlyLimit != null and monthlyLimit != ''">
			AND <![CDATA[ b.monthly <= #{monthlyLimit} ]]>
		</if>
		<if test="status != null and status != ''">
			AND (c.status in (${status}) or '0' = '${status}')
		</if>
		
		<if test="rulePublic == 1">
			AND ( false 
			<if test="rulePrivateIds !=null">
				 OR f.employeeId in
				<foreach collection="rulePrivateIds" item="rulePrivateId"  open="(" separator="," close=")">  
	        		#{rulePrivateId}
	     		</foreach>
			</if>
			<if test="rulePositionIds !=null">
				OR f.owner in
				<foreach collection="rulePositionIds" item="rulePositionId"  open="(" separator="," close=")">  
	        		#{rulePositionId}
	     		</foreach>
			</if>
			<if test="ruleBranchIds !=null">
				OR e._tempBranchIds in
				<foreach collection="ruleBranchIds" item="ruleBranchId"  open="(" separator="," close=")">  
	        		#{ruleBranchId}
	     		</foreach>
			</if>
			<if test="ruleBusinessTypeIds !=null">
				OR e.businessTypeId in
				<foreach collection="ruleBusinessTypeIds" item="ruleBusinessTypeId"  open="(" separator="," close=")">  
	        		#{ruleBusinessTypeId}
	     		</foreach>
			</if>
			<if test="ruleEntityIds !=null">
				OR f.entityId in
				<foreach collection="ruleEntityIds" item="ruleEntityId"  open="(" separator="," close=")">  
	        		#{ruleEntityId}
	     		</foreach>
			</if>
			)
		</if>
		
		GROUP BY a.headerId
		<if test="sortColumn != null and sortColumn != '' and sortOrder != null and sortOrder != ''">
			ORDER BY ${sortColumn} ${sortOrder}
		</if>
	</select>
	
	<select id="getAmountVendorSBHeaderVOsByCondition" parameterType="sbHeader" resultMap="result">
		SELECT COUNT(DISTINCT a.orderId) AS countOrderId, COUNT(DISTINCT a.contractId) AS countContractId, COUNT(DISTINCT a.clientId) AS countClientId,
			COUNT(DISTINCT a.employeeSBId) AS countEmployeeSBId, COUNT(DISTINCT b.itemId) AS countItemId, a.monthly, MIN(b.`status`) AS additionalStatus,
			a.vendorId, a.vendorNameEN, a.vendorNameZH, a.clientId, a.accountId,a.corpId
		FROM hro_sb_header a
		LEFT JOIN hro_sb_detail b ON a.headerId = b.headerId AND b.deleted = 1
		LEFT JOIN hro_biz_employee_contract hbizemp ON a.contractId = hbizemp.contractId and hbizemp.deleted = 1
		LEFT JOIN Hro_Biz_Employee hbe ON hbe.employeeId = a.employeeId and hbe.deleted = 1
		WHERE a.vendorId IS NOT NULL AND a.vendorId != '' AND a.deleted = 1 AND a.accountId = #{accountId}
		<if test="clientId != null and clientId != ''">
			AND a.clientId = #{clientId} 
		</if>
		<if test="vendorId != null and vendorId != ''">
			AND (a.vendorId = #{vendorId} or '0' = #{vendorId})
		</if>
		<if test="vendorNameZH != null and vendorNameZH != ''">
			AND a.vendorNameZH like CONCAT('%', '${vendorNameZH}', '%')
		</if>
		<if test="vendorNameEN != null and vendorNameEN != ''">
			AND a.vendorNameEN like CONCAT('%', '${vendorNameEN}', '%')
		</if>
		<if test="monthly != null and monthly != ''">
			AND (a.monthly = #{monthly} or '0' = #{monthly})
		</if>
		
		<if test="rulePublic == 1">
			AND ( false 
			<if test="rulePrivateIds !=null">
				 OR hbizemp.employeeId in
				<foreach collection="rulePrivateIds" item="rulePrivateId"  open="(" separator="," close=")">  
	        		#{rulePrivateId}
	     		</foreach>
			</if>
			<if test="rulePositionIds !=null">
				OR hbizemp.owner in
				<foreach collection="rulePositionIds" item="rulePositionId"  open="(" separator="," close=")">  
	        		#{rulePositionId}
	     		</foreach>
			</if>
			<if test="ruleBranchIds !=null">
				OR hbe._tempBranchIds in
				<foreach collection="ruleBranchIds" item="ruleBranchId"  open="(" separator="," close=")">  
	        		#{ruleBranchId}
	     		</foreach>
			</if>
			<if test="ruleBusinessTypeIds !=null">
				OR hbe.businessTypeId in
				<foreach collection="ruleBusinessTypeIds" item="ruleBusinessTypeId"  open="(" separator="," close=")">  
	        		#{ruleBusinessTypeId}
	     		</foreach>
			</if>
			<if test="ruleEntityIds !=null">
				OR hbizemp.entityId in
				<foreach collection="ruleEntityIds" item="ruleEntityId"  open="(" separator="," close=")">  
	        		#{ruleEntityId}
	     		</foreach>
			</if>
			)
		</if>
		
		GROUP BY a.vendorId, a.monthly
		<if test="sortColumn != null and sortColumn != '' and sortOrder != null and sortOrder != ''">
			ORDER BY ${sortColumn} ${sortOrder}
		</if>
	</select>
	
	<select id="getSBHeaderVOByHeaderId" parameterType="int" resultMap="result">
		SELECT a.headerId, <include refid="SBHeaderColumns-for-join"/>,
			COUNT(1) AS countItemId, min(c.status) as additionalStatus 
		FROM hro_sb_header a LEFT JOIN hro_sb_batch b ON a.batchId = b.batchId AND b.deleted = 1
			LEFT JOIN hro_sb_detail c ON a.headerId = c.headerId AND c.deleted = 1
		WHERE a.deleted = 1 AND a.headerId = #{headerId}
		GROUP BY a.headerId
	</select>

	<select id="getVendorSBHeaderVOsByCondition" parameterType="sbHeader" resultMap="result">
		SELECT b.headerId, <include refid="SBHeaderColumns-for-join"/>, c.sbSolutionId, b.`status` AS additionalStatus, COUNT(DISTINCT b.itemId) AS countItemId
		FROM hro_sb_header a 
			RIGHT JOIN hro_sb_detail b ON a.headerId = b.headerId AND a.deleted = 1
			LEFT JOIN hro_biz_employee_contract_sb c ON a.employeeSBId = c.employeeSBId AND c.deleted = 1
			LEFT JOIN hro_biz_employee_contract hbizemp ON a.contractId = hbizemp.contractId and hbizemp.deleted = 1
			LEFT JOIN Hro_Biz_Employee hbe ON hbe.employeeId = a.employeeId and hbe.deleted = 1
		WHERE a.deleted = 1 AND a.accountId = #{accountId}
		<if test="clientId != null and clientId != ''">
			AND a.clientId = #{clientId} 
		</if>
		<if test="vendorId != null and vendorId != ''">
			AND  (a.vendorId = #{vendorId} or '0' = #{vendorId})
		</if>
		<if test="batchId != null and batchId != ''">
			AND a.batchId = #{batchId} 
		</if>
		<if test="headerId != null and headerId != ''">
			AND a.headerId  in (${headerId}) 
		</if>
		<if test="contractId != null and contractId != ''">
			AND a.contractId = #{contractId}
		</if>
		<if test="employeeId != null and employeeId != ''">
			AND a.employeeId = #{employeeId}
		</if>
		<if test="employeeNameZH != null and employeeNameZH != ''">
			AND a.employeeNameZH like CONCAT('%', '${employeeNameZH}', '%')
		</if>
		<if test="employeeNameEN != null and employeeNameEN != ''">
			AND a.employeeNameEN like CONCAT('%', '${employeeNameEN}', '%')
		</if>
		<if test="monthly != null and monthly != ''">
			AND (a.monthly = #{monthly} or '0' = #{monthly})
		</if>
		<if test="sbSolutionId != null and sbSolutionId != ''">
			AND (c.sbSolutionId = #{sbSolutionId} or '0' = #{sbSolutionId})
		</if>
		<if test="orderId != null and orderId != ''">
			AND (a.orderId = #{orderId} or '0' = #{orderId})
		</if>
		<if test="employStatus != null and employStatus != ''">
			AND (a.employStatus = #{employStatus} or '0' = #{employStatus})
		</if>
		<if test="sbStatus != null and sbStatus != ''">
			AND a.sbStatus in (${sbStatus})
		</if>
		<if test="monthlyLimit != null and monthlyLimit != ''">
			AND <![CDATA[ 
			CASE WHEN LENGTH(b.monthly) < 7 THEN CONCAT(LEFT(b.monthly, 5), LPAD(RIGHT(b.monthly, 1), 2, '0')) ELSE b.monthly END <= 
				CASE WHEN LENGTH(#{monthlyLimit}) < 7 THEN CONCAT(LEFT(#{monthlyLimit}, 5), LPAD(RIGHT(#{monthlyLimit}, 1), 2, '0')) ELSE #{monthlyLimit} END 
				]]>
		</if>
		<if test="additionalStatus != null and additionalStatus != ''">
			AND (b.status in (${additionalStatus}) or '0' = '${additionalStatus}')
		</if>
		
		<if test="rulePublic == 1">
			AND ( false 
			<if test="rulePrivateIds !=null">
				 OR hbizemp.employeeId in
				<foreach collection="rulePrivateIds" item="rulePrivateId"  open="(" separator="," close=")">  
	        		#{rulePrivateId}
	     		</foreach>
			</if>
			<if test="rulePositionIds !=null">
				OR hbizemp.owner in
				<foreach collection="rulePositionIds" item="rulePositionId"  open="(" separator="," close=")">  
	        		#{rulePositionId}
	     		</foreach>
			</if>
			<if test="ruleBranchIds !=null">
				OR hbe._tempBranchIds in
				<foreach collection="ruleBranchIds" item="ruleBranchId"  open="(" separator="," close=")">  
	        		#{ruleBranchId}
	     		</foreach>
			</if>
			<if test="ruleBusinessTypeIds !=null">
				OR hbe.businessTypeId in
				<foreach collection="ruleBusinessTypeIds" item="ruleBusinessTypeId"  open="(" separator="," close=")">  
	        		#{ruleBusinessTypeId}
	     		</foreach>
			</if>
			<if test="ruleEntityIds !=null">
				OR hbizemp.entityId in
				<foreach collection="ruleEntityIds" item="ruleEntityId"  open="(" separator="," close=")">  
	        		#{ruleEntityId}
	     		</foreach>
			</if>
			)
		</if>
		
		GROUP BY b.`status`, b.headerId
		<if test="sortColumn != null and sortColumn != '' and sortOrder != null and sortOrder != ''">
			ORDER BY ${sortColumn} ${sortOrder}
		</if>
	</select>
	
	<select id="countSBContractVOsByCondition" parameterType="sbHeader" resultType="int">
		SELECT COUNT(DISTINCT a.contractId)
		FROM hro_sb_header a LEFT JOIN hro_sb_batch b ON a.batchId = b.batchId AND b.deleted = 1
			LEFT JOIN hro_sb_detail c ON a.headerId = c.headerId AND c.deleted = 1
		WHERE a.deleted = 1 AND a.accountId = #{accountId} AND a.batchId = #{batchId}
		<if test="corpId != null and corpId != ''">
			AND (a.corpId = #{corpId} OR 0 = #{corpId}) 
		</if>
		<if test="corpId == null or corpId == ''">
			AND a.corpId IS NULL 
		</if>
		<if test="contractId != null and contractId != ''">
			AND a.contractId = #{contractId} 
		</if>
		<if test="status != null and status != ''">
			AND (c.status in (${status}) or '0' = '${status}')
		</if>
	</select>
	
	<select id="getSBContractVOsByCondition" parameterType="sbHeader" resultMap="result">
		SELECT <include refid="SBHeaderColumns-for-join"/>, COUNT(DISTINCT a.headerId) AS countHeaderId, COUNT(1) AS countItemId, min(c.status) as additionalStatus 
		FROM hro_sb_header a LEFT JOIN hro_sb_batch b ON a.batchId = b.batchId AND b.deleted = 1
			LEFT JOIN hro_sb_detail c ON a.headerId = c.headerId AND c.deleted = 1
		WHERE a.deleted = 1 AND a.accountId = #{accountId} AND a.batchId = #{batchId}
		<if test="corpId != null and corpId != ''">
			AND (a.corpId = #{corpId} OR 0 = #{corpId}) 
		</if>
		<if test="corpId == null or corpId == ''">
			AND a.corpId IS NULL 
		</if>
		<if test="contractId != null and contractId != ''">
			AND a.contractId = #{contractId} 
		</if>
		<if test="status != null and status != ''">
			AND (c.status in (${status}) or '0' = '${status}')
		</if>
		GROUP BY a.contractId
	</select>
	
	<select id="getSBHeaderVOsByBatchId" parameterType="int" resultMap="result">
		SELECT headerId, <include refid="SBHeaderColumns" />
		FROM hro_sb_header
		WHERE deleted = 1 AND batchId = #{value} 
	</select>
	
	<select id="getSBMonthliesBySBHeaderVO4Mobile" parameterType="sbHeader" resultMap="result">
		SELECT a.monthly as monthly, SUM(b.amountPersonal) as amountPersonal, SUM(b.amountCompany) as amountCompany
		FROM hro_sb_header a LEFT JOIN hro_sb_detail b on a.headerId = b.headerId and b.deleted = 1
		WHERE a.deleted = 1 AND a.employeeId = #{employeeId} AND (a.status = 3 OR a.status = 4 OR a.status = 5)
		<if test="monthly != null and monthly != ''">
			AND a.monthly like CONCAT('%', '${monthly}', '%')
		</if>
		GROUP BY a.monthly
		ORDER BY a.monthly DESC
	</select>

	<update id="updateSBHeader" parameterType="sbHeader">
		UPDATE hro_sb_header SET accountId = #{accountId}, entityId = #{entityId}, businessTypeId = #{businessTypeId}, batchId = #{batchId}, 
			clientId = #{clientId}, corpId = #{corpId}, clientNo = #{clientNo}, clientNameZH = #{clientNameZH}, clientNameEN = #{clientNameEN}, orderId = #{orderId}, 
			contractId = #{contractId}, contractStartDate = #{contractStartDate}, contractEndDate = #{contractEndDate}, 
			contractBranch = #{contractBranch}, contractOwner = #{contractOwner}, employeeId = #{employeeId}, employeeNameZH = #{employeeNameZH}, 
			employeeNameEN = #{employeeNameEN}, employeeSBId= #{employeeSBId}, employeeSBNameZH = #{employeeSBNameZH}, 
			employeeSBNameEN = #{employeeSBNameEN}, cityId = #{cityId}, vendorId = #{vendorId}, vendorNameZH = #{vendorNameZH}, 
			vendorNameEN = #{vendorNameEN}, vendorServiceIds = #{vendorServiceIds}, vendorServiceFee = #{vendorServiceFee}, workPlace = #{workPlace}, 
			gender = #{gender}, certificateType = #{certificateType}, certificateNumber = #{certificateNumber}, needMedicalCard = #{needMedicalCard}, 
			needSBCard = #{needSBCard}, medicalNumber = #{medicalNumber}, sbNumber = #{sbNumber}, fundNumber = #{fundNumber}, personalSBBurden = #{personalSBBurden}, 
			residencyType = #{residencyType}, residencyCityId = #{residencyCityId}, residencyAddress = #{residencyAddress}, 
			highestEducation = #{highestEducation}, maritalStatus = #{maritalStatus}, employStatus = #{employStatus}, sbStatus = #{sbStatus}, 
			startDate = #{startDate}, endDate = #{endDate}, onboardDate = #{onboardDate}, resignDate = #{resignDate}, monthly = #{monthly}, flag=#{flag},
			description = #{description}, deleted = #{deleted}, status = #{status}, remark1 = #{remark1}, remark2 = #{remark2}, remark3 = #{remark3}, 
			remark4 = #{remark4}, remark5 = #{remark5}, modifyBy = #{modifyBy}, modifyDate = #{modifyDate}
		WHERE headerId = #{headerId} 
  	</update>

	<insert id="insertSBHeader" parameterType="sbHeader" useGeneratedKeys="true" keyProperty="headerId">
		INSERT INTO hro_sb_header( <include refid="SBHeaderColumns" /> )
		VALUES(#{accountId}, #{entityId}, #{businessTypeId}, #{batchId}, #{clientId}, #{corpId}, #{clientNo}, #{clientNameZH}, #{clientNameEN}, #{orderId}, 
			#{contractId}, #{contractStartDate}, #{contractEndDate}, #{contractBranch}, #{contractOwner}, #{employeeId}, #{employeeNameZH}, 
			#{employeeNameEN}, #{employeeSBId}, #{employeeSBNameZH}, #{employeeSBNameEN}, #{cityId}, #{vendorId}, #{vendorNameZH}, #{vendorNameEN}, 
			#{vendorServiceIds}, #{vendorServiceFee}, #{workPlace}, #{gender}, #{certificateType}, #{certificateNumber}, #{needMedicalCard}, 
			#{needSBCard}, #{medicalNumber}, #{sbNumber}, #{fundNumber}, #{personalSBBurden}, #{residencyType}, #{residencyCityId}, #{residencyAddress}, #{highestEducation}, 
			#{maritalStatus}, #{employStatus}, #{sbStatus}, #{startDate}, #{endDate}, #{onboardDate}, #{resignDate}, #{monthly},#{flag}, #{description}, 1, 
			#{status}, #{remark1}, #{remark2}, #{remark3}, #{remark4}, #{remark5}, #{createBy}, #{createDate}, #{modifyBy}, #{modifyDate})
	</insert>

	<delete id="deleteSBHeader" parameterType="int" >
		DELETE FROM hro_sb_header WHERE headerId = #{value}
  	</delete>
  	
  	<update id="updateSBHeaderPaid" parameterType="sbHeader">
		update hro_sb_header SET flag = 1 WHERE batchId = #{batchId} 
		AND accountId = #{accountId}
		AND certificateNumber IN
		<foreach collection="certificateNumbers" index="index" item="item" open="(" separator="," close=")" >  
            #{item}  
        </foreach> 
  	</update>
  	
  	<select id="getSBToApplyForMoreStatusCountByHeaderIds" resultType="int">
		SELECT
			count(1) AS count
		FROM
			hro_sb_header b
		INNER JOIN hro_sb_detail c ON b.headerId = c.headerId
			AND c.deleted = 1
		INNER JOIN hro_biz_employee_contract_sb d ON d.contractId = b.contractId
			AND d.employeeSBId = b.employeeSBId
			AND d.deleted = 1
		WHERE
			d. STATUS = 2
			AND b.headerId IN 
		<foreach collection="array" item="headerId"  open="(" separator="," close=")">  
        	#{headerId}
     	</foreach>  
	</select>
  	
  	<select id="getSBToApplyForResigningStatusCountByByHeaderIds" resultType="int">
		SELECT
			count(1) AS count
		FROM
			hro_sb_header b
		INNER JOIN hro_sb_detail c ON b.headerId = c.headerId
			AND c.deleted = 1
		INNER JOIN hro_biz_employee_contract_sb d ON d.contractId = b.contractId
			AND d.employeeSBId = b.employeeSBId
			AND d.deleted = 1
		WHERE
			d. STATUS = 5
			AND b.headerId IN 
		<foreach collection="array" item="headerId"  open="(" separator="," close=")">  
        	#{headerId}
     	</foreach>  
	</select>

	<update id="updateSBStatusTONoSocialBenefitByHeaderId">
		UPDATE hro_biz_employee_contract_sb a
			INNER JOIN hro_sb_header b ON a.contractId = b.contractId AND a.employeeSBId = b.employeeSBId
			AND a.deleted = 1
		SET a. STATUS = 0
		WHERE
			b.deleted = 1
			AND a. STATUS = 2
			AND b.headerId IN 
		<foreach collection="array" item="headerId"  open="(" separator="," close=")">  
        	#{headerId}
     	</foreach>  
  	</update>
  	
  	<update id="updateSBStatusTONormalByHeaderId">
		UPDATE hro_biz_employee_contract_sb a
			INNER JOIN hro_sb_header b ON a.contractId = b.contractId AND a.employeeSBId = b.employeeSBId
			AND a.deleted = 1
		SET a. STATUS = 3
		WHERE
			b.deleted = 1
			AND a. STATUS = 5
			AND b.headerId IN 
		<foreach collection="array" item="headerId"  open="(" separator="," close=")">  
        	#{headerId}
     	</foreach>  
  	</update>
</mapper>