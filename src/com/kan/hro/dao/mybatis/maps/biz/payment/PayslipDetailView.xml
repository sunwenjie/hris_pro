<?xml version="1.0" encoding="utf-8" ?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.kan.hro.domain.biz.payment.PayslipDetailView">

	<resultMap id="result" type="com.kan.hro.domain.biz.payment.PayslipDetailView">
		<result property="headerId" column="headerId" />
		<result property="itemId" column="itemId" />
		<result property="itemNo" column="itemNo" />
		<result property="nameZH" column="nameZH" />
		<result property="nameEN" column="nameEN" />
		<result property="itemType" column="itemType" />
		<result property="accountId" column="accountId" />
		<result property="corpId" column="corpId" />
		<result property="entityId" column="entityId" />
		<result property="businessTypeId" column="businessTypeId" />
		<result property="orderId" column="orderId" />
		<result property="vendorId" column="vendorId" />
		<result property="vendorNameZH" column="vendorNameZH" />
		<result property="vendorNameEN" column="vendorNameEN" />
		<result property="orderDetailId" column="orderDetailId" />
		<result property="contractId" column="contractId" />
		<result property="employeeId" column="employeeId" />
		<result property="employeeNameZH" column="employeeNameZH" />
		<result property="employeeNameEN" column="employeeNameEN" />
		<result property="bankId" column="bankId" />
		<result property="bankNameZH" column="bankNameZH" />
		<result property="bankNameEN" column="bankNameEN" />
		<result property="bankAccount" column="bankAccount" />
		<result property="startDate" column="startDate" />
		<result property="endDate" column="endDate" />
		<result property="certificateType" column="certificateType" />
		<result property="certificateNumber" column="certificateNumber" />
		<result property="monthly" column="monthly" />
		<result property="billAmountCompany" column="billAmountCompany" />
		<result property="billAmountPersonal" column="billAmountPersonal" />
		<result property="costAmountCompany" column="costAmountCompany" />
		<result property="costAmountPersonal" column="costAmountPersonal" />
		<result property="salaryTax" column="salaryTax" />
		<result property="annualBonusTax" column="annualBonusTax"/>
		<result property="annualBonus" column="annualBonus"/>
		<result property="addtionalBillAmountPersonal" column="addtionalBillAmountPersonal" />
		<result property="taxAgentAmountPersonal" column="taxAgentAmountPersonal" />
		<result property="status" column="status" />
		<result property="clientId" column="clientId" />
		<result property="clientNameZH" column="clientNameZH" />
		<result property="clientNameEN" column="clientNameEN" />
		<result property="salaryBase" column="salaryBase" />
		<result property="remark5" column="remark5" />
		<!-- For Application -->
		<result property="tempPositionIds" column="tempPositionIds" />
		<result property="tempBranchIds" column="tempBranchIds" />
		<result property="tempParentBranchIds" column="tempParentBranchIds" />
		<result property="clientNO" column="clientNO" />
		<result property="templateId" column="templateId" />
		<result property="employeeRemark1" column="employeeRemark1" />
		<result property="contractRemark1" column="contractRemark1" />
		<result property="contractStartDate" column="contractStartDate" />
		<result property="circleStartDay" column="circleStartDay" />
		<result property="circleEndDay" column="circleEndDay" />
		<result property="currency" column="currency" />
		<result property="startWorkDate" column="startWorkDate" />
		<result property="lastWorkDate" column="lastWorkDate" />
		<result property="settlementBranch" column="settlementBranch" />
		<!-- iClick -->
	</resultMap>
		
	<select id="getPayslipDetailViewsByCondition" parameterType="payslipDetailView" resultMap="result">
		SELECT concat('P', a.paymentHeaderId) as headerId, a.itemId, a.itemNo, a.nameZH, a.nameEN, c.itemType, b.accountId, b.corpId, b.entityId, b.businessTypeId, b.orderId, b.vendorId, b.vendorNameZH, b.vendorNameEN, a.orderDetailId, b.contractId, 
			b.employeeId, b.employeeNameZH, b.employeeNameEN, b.bankId, b.bankNameZH, b.bankNameEN, b.bankAccount, b.startDate, b.endDate, b.certificateType, b.certificateNumber, b.monthly, 
			a.billAmountCompany - getIncrement(getPublicCode(b.employeeId), 'PRIVATE_CODE') AS billAmountCompany, 
			a.billAmountPersonal - getIncrement(getPublicCode(b.employeeId), 'PRIVATE_CODE') AS billAmountPersonal, 
			a.costAmountCompany - getIncrement(getPublicCode(b.employeeId), 'PRIVATE_CODE') AS costAmountCompany, 
			a.costAmountPersonal - getIncrement(getPublicCode(b.employeeId), 'PRIVATE_CODE') AS costAmountPersonal, 
			b.taxAmountPersonal - getIncrement(getPublicCode(b.employeeId), 'PRIVATE_CODE')  AS salaryTax,
			b.annualBonusTax - getIncrement(getPublicCode(b.employeeId), 'PRIVATE_CODE') AS annualBonusTax, 
			b.annualBonus - getIncrement(getPublicCode(b.employeeId), 'PRIVATE_CODE')  AS annualBonus,
			b.addtionalBillAmountPersonal - getIncrement(getPublicCode(b.employeeId), 'PRIVATE_CODE') AS addtionalBillAmountPersonal, 
			b.taxAgentAmountPersonal - getIncrement(getPublicCode(b.employeeId), 'PRIVATE_CODE') AS taxAgentAmountPersonal, 
			b.status,
			d._tempPositionIds as tempPositionIds, d._tempBranchIds as tempBranchIds, d._tempParentBranchIds as tempParentBranchIds, e.number as clientNO, f.templateId as templateId,
			d.remark1 AS employeeRemark1, f.startDate AS contractStartDate, g.circleStartDay AS circleStartDay, g.circleEndDay AS circleEndDay,
			f.remark1 AS contractRemark1,f.currency, d.startWorkDate AS startWorkDate, f.lastWorkDate AS lastWorkDate,f.settlementBranch as settlementBranch,
			b.remark5 - getIncrement(getPublicCode(b.employeeId), 'PRIVATE_CODE') as remark5,
			(
				SELECT sum(s.base- getIncrement(getPublicCode(b.employeeId), 'PRIVATE_CODE')) 
				from hro_biz_employee_contract_salary s where s.contractId = b.contractId AND s.deleted = 1  
			) AS salaryBase 
			
		FROM hro_payment_detail a LEFT JOIN hro_payment_header b ON a.paymentHeaderId = b.paymentHeaderId AND b.deleted = 1
			LEFT JOIN hro_mgt_item c ON a.itemId = c.itemId AND c.deleted = 1
			LEFT JOIN hro_biz_employee d ON b.employeeId = d.employeeId AND d.deleted = 1
			LEFT JOIN hro_biz_client e ON b.clientId = e.clientId AND e.deleted = 1
			LEFT JOIN hro_biz_employee_contract f ON f.contractId = b.contractId AND f.deleted = 1
			LEFT JOIN hro_biz_client_order_header g ON b.orderId = g.orderHeaderId AND g.deleted = 1
		WHERE a.deleted = 1 AND b.accountId = #{accountId}
		AND (b.monthly between #{monthlyBegin} AND #{monthlyEnd})
		<if test="itemId != null and itemId != ''">
			AND (a.itemId = #{itemId} or 0 = #{itemId})
		</if>
		<if test="itemNo != null and itemNo != ''">
			AND a.itemNo like CONCAT('%', '${itemNo}', '%')
		</if>
		<if test="corpId != null and corpId != ''">
			AND (b.corpId = #{corpId} OR 0 = #{corpId})
		</if>
		<if test="corpId == null or corpId == ''">
			AND b.corpId IS NULL
		</if>
		<if test="entityId != null and entityId != ''">
			AND (b.entityId = #{entityId} OR 0 = #{entityId})
		</if>
		<if test="businessTypeId != null and businessTypeId != ''">
			AND (b.businessTypeId = #{businessTypeId} OR 0 = #{businessTypeId})
		</if>
		<if test="orderId != null and orderId != ''">
			AND (b.orderId = #{orderId} OR 0 = #{orderId})
		</if>
		<if test="clientId != null and clientId != ''">
			AND (b.clientId = #{clientId} OR 0=#{clientId})
		</if>
		<if test="clientNameZH != null and clientNameZH != ''">
			AND e.nameZH like CONCAT('%', '${clientNameZH}', '%') 
		</if>
		<if test="clientNameEN != null and clientNameEN != ''">
			AND e.nameEN like CONCAT('%', '${clientNameEN}', '%') 
		</if>
		<if test="contractId != null and contractId != ''">
			AND b.contractId = #{contractId}
		</if>
		<if test="employeeId != null and employeeId != ''">
			AND b.employeeId = #{employeeId}
		</if>
		<if test="employeeNameZH != null and employeeNameZH != ''">
			AND b.employeeNameZH like CONCAT('%', '${employeeNameZH}', '%')
		</if>
		<if test="employeeNameEN != null and employeeNameEN != ''">
			AND b.employeeNameEN like CONCAT('%', '${employeeNameEN}', '%')
		</if>
		<if test="bankId != null and bankId != ''">
			AND (b.bankId = #{bankId} OR 0=#{bankId})
		</if>
		<!-- 
		<if test="monthly != null and monthly != ''">
			AND (b.monthly = #{monthly} or 0 = #{monthly})
		</if>
		 -->
		<if test="tempPositionIds != null and tempPositionIds != ''">
			AND (d._tempPositionIds IN (${tempPositionIds}) or 0 = #{tempPositionIds})
		</if>
		<if test="tempBranchIds != null and tempBranchIds != ''">
			AND (d._tempBranchIds IN (${tempBranchIds}) or 0 = #{tempBranchIds})
		</if>
		<if test="tempParentBranchIds != null and tempParentBranchIds != ''">
			AND (d._tempParentBranchIds IN (${tempParentBranchIds}) or 0 = #{tempParentBranchIds})
		</if>
		<if test="status != null and status != ''">
			AND (b.status = ${status} or 0 = #{status})
		</if>
		<if test="clientNO != null and clientNO != ''">
			AND e.number = #{clientNO}
		</if>
		<if test="role == 4">
			AND b.status in (2, 3)
		</if>
		<if test="rulePublic == 1">
			AND ( false 
			<if test="rulePrivateIds !=null">
				 OR f.employeeId in
				<foreach collection="rulePrivateIds" item="rulePrivateId"  open="(" separator="," close=")">  
	        		#{rulePrivateId}
	     		</foreach>
			</if>
			<if test="rulePositionIds !=null">
				OR f.owner in
				<foreach collection="rulePositionIds" item="rulePositionId"  open="(" separator="," close=")">  
	        		#{rulePositionId}
	     		</foreach>
			</if>
			<if test="ruleBranchIds !=null">
				OR d._tempBranchIds in
				<foreach collection="ruleBranchIds" item="ruleBranchId"  open="(" separator="," close=")">  
	        		#{ruleBranchId}
	     		</foreach>
			</if>
			<if test="ruleBusinessTypeIds !=null">
				OR d.businessTypeId in
				<foreach collection="ruleBusinessTypeIds" item="ruleBusinessTypeId"  open="(" separator="," close=")">  
	        		#{ruleBusinessTypeId}
	     		</foreach>
			</if>
			<if test="ruleEntityIds !=null">
				OR f.entityId in
				<foreach collection="ruleEntityIds" item="ruleEntityId"  open="(" separator="," close=")">  
	        		#{ruleEntityId}
	     		</foreach>
			</if>
			)
		</if>
		
		UNION ALL
		
		SELECT concat('A', a.adjustmentHeaderId) as headerId, a.itemId, a.itemNo, a.nameZH, a.nameEN, c.itemType, b.accountId, b.corpId, b.entityId, b.businessTypeId, b.orderId, b.vendorId, b.vendorNameZH, b.vendorNameEN, "" as orderDetailId, b.contractId, 
			b.employeeId, b.employeeNameZH, b.employeeNameEN, "" AS bankId, "" AS bankNameZH, "" AS bankNameEN, "" AS bankAccount, "" AS startDate, "" AS endDate, "" AS certificateType, 
			"" AS certificateNumber, b.monthly, 
			0 AS billAmountCompany, 
			a.billAmountPersonal - getIncrement(getPublicCode(b.employeeId), 'PRIVATE_CODE') , 
			0 AS costAmountCompany, 
			a.costAmountPersonal - getIncrement(getPublicCode(b.employeeId), 'PRIVATE_CODE') , 
			b.taxAmountPersonal - getIncrement(getPublicCode(b.employeeId), 'PRIVATE_CODE')  AS salaryTax,
			"" as annualBonusTax, 
			"" as annualBonus,
			b.addtionalBillAmountPersonal - getIncrement(getPublicCode(b.employeeId), 'PRIVATE_CODE') , 
			0 AS taxAgentAmountPersonal, 
			CASE WHEN b.status = 3 THEN 2 WHEN b.status = 5 THEN 3 ELSE b.status END AS status,
			d._tempPositionIds as tempPositionIds, d._tempBranchIds as tempBranchIds, d._tempParentBranchIds as tempParentBranchIds, e.number as clientNO, f.templateId as templateId,
			d.remark1 AS employeeRemark1, f.startDate AS contractStartDate, g.circleStartDay AS circleStartDay, g.circleEndDay AS circleEndDay,
			f.remark1 AS contractRemark1,f.currency, d.startWorkDate AS startWorkDate, f.lastWorkDate AS lastWorkDate,f.settlementBranch as settlementBranch,
			"" as remark5,
			(
				SELECT sum(s.base - getIncrement(getPublicCode(b.employeeId), 'PRIVATE_CODE') ) from hro_biz_employee_contract_salary s where s.contractId = f.contractId AND s.deleted = 1  ) AS salaryBase 
			
		FROM hro_payment_adjustment_detail a LEFT JOIN hro_payment_adjustment_header b ON a.adjustmentHeaderId = b.adjustmentHeaderId AND b.deleted = 1
			LEFT JOIN hro_mgt_item c ON a.itemId = c.itemId AND c.deleted = 1
			LEFT JOIN hro_biz_employee d ON b.employeeId = d.employeeId AND d.deleted = 1
			LEFT JOIN hro_biz_client e ON b.clientId = e.clientId AND e.deleted = 1
			LEFT JOIN hro_biz_employee_contract f ON f.contractId = b.contractId AND f.deleted = 1
			LEFT JOIN hro_biz_client_order_header g ON b.orderId = g.orderHeaderId AND g.deleted = 1
		WHERE a.deleted = 1 AND b.accountId = #{accountId}
		AND (b.monthly between #{monthlyBegin} AND #{monthlyEnd})
		<if test="itemId != null and itemId != ''">
			AND a.itemId = #{itemId}
		</if>
		<if test="itemNo != null and itemNo != ''">
			AND a.itemNo like CONCAT('%', '${itemNo}', '%')
		</if>
		<if test="corpId != null and corpId != ''">
			AND (b.corpId = #{corpId} OR 0 = #{corpId})
		</if>
		<if test="corpId == null or corpId == ''">
			AND b.corpId IS NULL 
		</if>
		<if test="entityId != null and entityId != ''">
			AND (b.entityId = #{entityId} or 0 = #{entityId})
		</if>
		<if test="businessTypeId != null and businessTypeId != ''">
			AND (b.businessTypeId = #{businessTypeId} OR 0 = #{businessTypeId})
		</if>
		<if test="orderId != null and orderId != ''">
			AND (b.orderId = #{orderId} OR 0 = #{orderId})
		</if>
		<if test="clientId != null and clientId != ''">
			AND (b.clientId = #{clientId} OR 0=#{clientId})
		</if>
		<if test="clientNameZH != null and clientNameZH != ''">
			AND e.nameZH like CONCAT('%', '${clientNameZH}', '%') 
		</if>
		<if test="clientNameEN != null and clientNameEN != ''">
			AND e.nameEN like CONCAT('%', '${clientNameEN}', '%') 
		</if>
		<if test="contractId != null and contractId != ''">
			AND b.contractId = #{contractId}
		</if>
		<if test="employeeId != null and employeeId != ''">
			AND b.employeeId = #{employeeId}
		</if>
		<if test="employeeNameZH != null and employeeNameZH != ''">
			AND b.employeeNameZH like CONCAT('%', '${employeeNameZH}', '%')
		</if>
		<if test="employeeNameEN != null and employeeNameEN != ''">
			AND b.employeeNameEN like CONCAT('%', '${employeeNameEN}', '%')
		</if>
		<if test="bankId != null and bankId != ''">
			AND (b.bankId = #{bankId} OR 0 = #{bankId})
		</if>
		<!-- 
		<if test="monthly != null and monthly != ''">
			AND (b.monthly = #{monthly} or 0 = #{monthly})
		</if>
		-->
		<if test="tempPositionIds != null and tempPositionIds != ''">
			AND (d._tempPositionIds IN (${tempPositionIds}) or 0 = #{tempPositionIds})
		</if>
		<if test="tempBranchIds != null and tempBranchIds != ''">
			AND (d._tempBranchIds IN (${tempBranchIds}) or 0 = #{tempBranchIds})
		</if>
		<if test="tempParentBranchIds != null and tempParentBranchIds != ''">
			AND (d._tempParentBranchIds IN (${tempParentBranchIds}) or 0 = #{tempParentBranchIds})
		</if>
		<if test="status != null and status != ''">
			<if test="status == 1">
				AND (b.status in (1, 2))
			</if>
			<if test="status == 2">
				AND (b.status = 3)
			</if>
			<if test="status == 3">
				AND (b.status = 5)
			</if>
		</if>
		<if test="clientNO != null and clientNO != ''">
			AND e.number = #{clientNO}
		</if>
		<if test="role == 4">
			AND b.status in (3 ,5)
		</if>
		<if test="rulePublic == 1">
			AND ( false 
			<if test="rulePrivateIds !=null">
				 OR f.employeeId in
				<foreach collection="rulePrivateIds" item="rulePrivateId"  open="(" separator="," close=")">  
	        		#{rulePrivateId}
	     		</foreach>
			</if>
			<if test="rulePositionIds !=null">
				OR f.owner in
				<foreach collection="rulePositionIds" item="rulePositionId"  open="(" separator="," close=")">  
	        		#{rulePositionId}
	     		</foreach>
			</if>
			<if test="ruleBranchIds !=null">
				OR d._tempBranchIds in
				<foreach collection="ruleBranchIds" item="ruleBranchId"  open="(" separator="," close=")">  
	        		#{ruleBranchId}
	     		</foreach>
			</if>
			<if test="ruleBusinessTypeIds !=null">
				OR d.businessTypeId in
				<foreach collection="ruleBusinessTypeIds" item="ruleBusinessTypeId"  open="(" separator="," close=")">  
	        		#{ruleBusinessTypeId}
	     		</foreach>
			</if>
			<if test="ruleEntityIds !=null">
				OR f.entityId in
				<foreach collection="ruleEntityIds" item="ruleEntityId"  open="(" separator="," close=")">  
	        		#{ruleEntityId}
	     		</foreach>
			</if>
			)
		</if>
		ORDER BY
		<if	test="sortColumn != null and sortColumn != '' and sortOrder != null and sortOrder != ''">
			${sortColumn} ${sortOrder},
		</if>
		itemId, itemType
	</select>
	
</mapper>