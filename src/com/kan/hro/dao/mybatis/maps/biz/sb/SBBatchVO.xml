<?xml version="1.0" encoding="utf-8" ?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.kan.hro.domain.biz.sb.SBBatchVO">

	<resultMap id="result" type="com.kan.hro.domain.biz.sb.SBBatchVO">
		<result property="batchId" column="batchId" />
		<result property="accountId" column="accountId" />
		<result property="entityId" column="entityId" />
		<result property="businessTypeId" column="businessTypeId" />
		<result property="cityId" column="cityId" />
		<result property="clientId" column="clientId" />
		<result property="corpId" column="corpId" />
		<result property="orderId" column="orderId" />
		<result property="contractId" column="contractId" />
		<result property="monthly" column="monthly" />
		<result property="startDate" column="startDate" />
		<result property="endDate" column="endDate" />
		<result property="description" column="description" />
		<result property="deleted" column="deleted" />
		<result property="status" column="status" />
		<result property="remark1" column="remark1" />
		<result property="remark2" column="remark2" />
		<result property="remark3" column="remark3" />
		<result property="remark4" column="remark4" />
		<result property="remark5" column="remark5" />
		<result property="createBy" column="createBy" />
		<result property="createDate" column="createDate" />
		<result property="modifyBy" column="modifyBy" />
		<result property="modifyDate" column="modifyDate" />
		<!-- For App -->
		<result property="countClientId" column="countClientId" />
		<result property="countOrderId" column="countOrderId" />
		<result property="countContractId" column="countContractId" />
		<result property="countHeaderId" column="countHeaderId" />
		<result property="countItemId" column="countItemId" />
		<result property="amountCompany" column="amountCompany" />
		<result property="amountPersonal" column="amountPersonal" />
		<result property="additionalStatus" column="additionalStatus" />
		<result property="flag" column="flag" />
	</resultMap>
  	
	<sql id="sbBatchColumns">
		accountId, entityId, businessTypeId, cityId, clientId,corpId, orderId, contractId, monthly, startDate, endDate, description, deleted, status,
		remark1, remark2, remark3, remark4, remark5, createBy, createDate, modifyBy, modifyDate ,sbType 
	</sql>
	
	<sql id="sbBatchColumns-for-join">
		a.accountId, a.entityId, a.businessTypeId, a.cityId, a.clientId,a.corpId, a.orderId, a.contractId, a.monthly, a.startDate, a.endDate, 
		a.description, a.deleted, a.status, a.remark1, a.remark2, a.remark3, a.remark4, a.remark5, a.createBy, a.createDate, a.modifyBy, 
		a.modifyDate , a.sbType
	</sql>

	<select id="countSBBatchVOsByCondition" parameterType="sbBatch" resultType="int">
		SELECT COUNT(DISTINCT a.batchId)
		FROM hro_sb_batch a 
			LEFT JOIN hro_sb_header b ON a.batchId = b.batchId AND b.deleted = 1
			LEFT JOIN hro_sb_detail c ON b.headerId = c.headerId AND c.deleted = 1
			LEFT JOIN hro_biz_employee_contract hbizemp ON b.contractId = hbizemp.contractId and hbizemp.deleted = 1
			LEFT JOIN Hro_Biz_Employee hbe ON hbe.employeeId = b.employeeId and hbe.deleted = 1
		WHERE a.deleted = 1 AND a.accountId = #{accountId}
		<if test="batchId != null and batchId != ''">
			AND a.batchId = #{batchId} 
		</if>
		<if test="entityId != null and entityId != ''">
			AND (b.entityId = #{entityId} or 0 = #{entityId})
		</if>
		<if test="businessTypeId != null and businessTypeId != ''">
			AND (b.businessTypeId = #{businessTypeId} or 0 = #{businessTypeId})
		</if>
		<if test="cityId != null and cityId != ''">
			AND (b.cityId = #{cityId} or 0 = #{cityId})
		</if>
		<if test="clientId != null and clientId != ''">
			AND b.clientId = #{clientId} 
		</if>
		<if test="corpId != null and corpId != ''">
			AND (a.corpId = #{corpId} OR 0 = #{corpId}) 
		</if>
		<if test="corpId == null or corpId == ''">
			AND a.corpId IS NULL
		</if>
		<if test="orderId != null and orderId != ''">
			AND (b.orderId = #{orderId} or 0 = #{orderId})
		</if>
		<if test="contractId != null and contractId != ''">
			AND b.contractId = #{contractId} 
		</if>
		<if test="monthly != null and monthly != ''">
			AND (a.monthly = #{monthly} or 0 = #{monthly})
		</if>
		<if test="status != null and status != ''">
			AND (c.status in (${status}) or '0' = '${status}')
		</if>
		<if test="flag !=null and flag == 1 and flag != 0">
			AND b.flag = 1
		</if>
		<if test="flag !=null and flag != 1 and flag != 0">
			AND (b.flag IS NULL OR  b.flag != 1)
		</if>
		<if test="sbType != null and sbType != ''">
			AND (a.sbType = #{sbType} or 0 = #{sbType})
		</if>
		
		<if test="rulePublic == 1">
			AND ( false 
			<if test="rulePrivateIds !=null">
				 OR hbizemp.employeeId in
				<foreach collection="rulePrivateIds" item="rulePrivateId"  open="(" separator="," close=")">  
	        		#{rulePrivateId}
	     		</foreach>
			</if>
			<if test="rulePositionIds !=null">
				OR hbizemp.owner in
				<foreach collection="rulePositionIds" item="rulePositionId"  open="(" separator="," close=")">  
	        		#{rulePositionId}
	     		</foreach>
			</if>
			<if test="ruleBranchIds !=null">
				OR hbe._tempBranchIds in
				<foreach collection="ruleBranchIds" item="ruleBranchId"  open="(" separator="," close=")">  
	        		#{ruleBranchId}
	     		</foreach>
			</if>
			<if test="ruleBusinessTypeIds !=null">
				OR hbe.businessTypeId in
				<foreach collection="ruleBusinessTypeIds" item="ruleBusinessTypeId"  open="(" separator="," close=")">  
	        		#{ruleBusinessTypeId}
	     		</foreach>
			</if>
			<if test="ruleEntityIds !=null">
				OR hbizemp.entityId in
				<foreach collection="ruleEntityIds" item="ruleEntityId"  open="(" separator="," close=")">  
	        		#{ruleEntityId}
	     		</foreach>
			</if>
			)
		</if>
		
	</select>

	<select id="getSBBatchVOsByCondition" parameterType="sbBatch" resultMap="result">
		SELECT a.batchId, <include refid="sbBatchColumns-for-join" />, COUNT(DISTINCT b.clientId) AS countClientId, 
			COUNT(DISTINCT b.orderId) AS countOrderId, COUNT(DISTINCT b.contractId) AS countContractId, COUNT(DISTINCT b.headerId) AS countHeaderId, 
			COUNT(1) AS countItemId, min(c.status) as additionalStatus,
			(SELECT
				MAX(h.workflowId)
			FROM
				hro_history h
			WHERE
				(
					(
						h.accessAction = 'HRO_SB_BATCH_PREVIEW'
					)
					OR (
						h.accessAction = 'HRO_SB_BATCH_CONFIRM'
					)
					OR (
						h.accessAction = 'HRO_SB_BATCH_SUBMIT'
					)
				)
			AND h.objectType = 3
			AND CONCAT(',', a.batchId, ',') LIKE CONCAT('%,', h.objectId, ',%')
			AND h.remark4 = 'sbBatch'	
		) AS workflowId
		FROM hro_sb_batch a 
			LEFT JOIN hro_sb_header b ON a.batchId = b.batchId AND b.deleted = 1
			LEFT JOIN hro_sb_detail c ON b.headerId = c.headerId AND c.deleted = 1
			LEFT JOIN hro_biz_employee_contract hbizemp ON b.contractId = hbizemp.contractId and hbizemp.deleted = 1
			LEFT JOIN Hro_Biz_Employee hbe ON hbe.employeeId = b.employeeId and hbe.deleted = 1
			
		WHERE a.deleted = 1 AND a.accountId = #{accountId}
		<if test="batchId != null and batchId != ''">
			AND a.batchId = #{batchId} 
		</if>
		<if test="entityId != null and entityId != ''">
			AND (b.entityId = #{entityId} or 0 = #{entityId})
		</if>
		<if test="businessTypeId != null and businessTypeId != ''">
			AND (b.businessTypeId = #{businessTypeId} or 0 = #{businessTypeId})
		</if>
		<if test="cityId != null and cityId != ''">
			AND (b.cityId = #{cityId} or 0 = #{cityId})
		</if>
		<if test="clientId != null and clientId != ''">
			AND b.clientId = #{clientId} 
		</if>
		<if test="corpId != null and corpId != ''">
			AND (a.corpId = #{corpId} OR 0 = #{corpId}) 
		</if>
		<if test="corpId == null or corpId == ''">
			AND a.corpId IS NULL
		</if>
		<if test="orderId != null and orderId != ''">
			AND (b.orderId = #{orderId} or 0 = #{orderId})
		</if>
		<if test="contractId != null and contractId != ''">
			AND b.contractId = #{contractId} 
		</if>
		<if test="monthly != null and monthly != ''">
			AND (a.monthly = #{monthly} or 0 = #{monthly})
		</if>
		<if test="status != null and status != ''">
			AND (c.status in (${status}) or '0' = '${status}')
		</if>
		<if test="flag !=null and flag == 1 and flag != 0">
			AND b.flag = 1
		</if>
		<if test="flag !=null and flag != 1 and flag != 0">
			AND (b.flag IS NULL OR  b.flag != 1)
		</if>
		<if test="sbType != null and sbType != ''">
			AND (a.sbType = #{sbType} or 0 = #{sbType})
		</if>
		
		<if test="rulePublic == 1">
			AND ( false 
			<if test="rulePrivateIds !=null">
				 OR hbizemp.employeeId in
				<foreach collection="rulePrivateIds" item="rulePrivateId"  open="(" separator="," close=")">  
	        		#{rulePrivateId}
	     		</foreach>
			</if>
			<if test="rulePositionIds !=null">
				OR hbizemp.owner in
				<foreach collection="rulePositionIds" item="rulePositionId"  open="(" separator="," close=")">  
	        		#{rulePositionId}
	     		</foreach>
			</if>
			<if test="ruleBranchIds !=null">
				OR hbe._tempBranchIds in
				<foreach collection="ruleBranchIds" item="ruleBranchId"  open="(" separator="," close=")">  
	        		#{ruleBranchId}
	     		</foreach>
			</if>
			<if test="ruleBusinessTypeIds !=null">
				OR hbe.businessTypeId in
				<foreach collection="ruleBusinessTypeIds" item="ruleBusinessTypeId"  open="(" separator="," close=")">  
	        		#{ruleBusinessTypeId}
	     		</foreach>
			</if>
			<if test="ruleEntityIds !=null">
				OR hbizemp.entityId in
				<foreach collection="ruleEntityIds" item="ruleEntityId"  open="(" separator="," close=")">  
	        		#{ruleEntityId}
	     		</foreach>
			</if>
			)
		</if>
		
		GROUP BY a.batchId
		<if test="sortColumn != null and sortColumn != '' and sortOrder != null and sortOrder != ''">
			order by ${sortColumn} ${sortOrder}
		</if>
	</select>

	<select id="getSBBatchVOByBatchId" parameterType="int" resultMap="result">
		SELECT a.batchId, <include refid="sbBatchColumns-for-join" />, COUNT(DISTINCT b.clientId) AS countClientId, 
			COUNT(DISTINCT b.orderId) AS countOrderId, COUNT(DISTINCT b.contractId) AS countContractId, COUNT(DISTINCT b.headerId) AS countHeaderId, 
			COUNT(1) AS countItemId, min(c.status) as additionalStatus
		FROM hro_sb_batch a LEFT JOIN hro_sb_header b ON a.batchId = b.batchId AND b.deleted = 1
			LEFT JOIN hro_sb_detail c ON b.headerId = c.headerId AND c.deleted = 1
		WHERE a.batchId = #{value}
	</select>

	<update id="updateSBBatch" parameterType="sbBatch">
		update hro_sb_batch set accountId = #{accountId}, entityId = #{entityId}, businessTypeId = #{businessTypeId}, cityId = #{cityId}, 
			clientId = #{clientId}, orderId = #{orderId}, contractId = #{contractId}, monthly = #{monthly}, startDate = #{startDate}, endDate = #{endDate}, 
			description = #{description}, deleted = #{deleted}, status = #{status}, remark1 = #{remark1}, remark2 = #{remark2}, remark3 = #{remark3}, 
			remark4 = #{remark4}, remark5 = #{remark5}, modifyBy = #{modifyBy}, modifyDate = #{modifyDate},sbType = #{sbType}
		where batchId = #{batchId} 
  	</update>

	<insert id="insertSBBatch" parameterType="sbBatch" useGeneratedKeys="true" keyProperty="batchId">
		insert into hro_sb_batch( <include refid="sbBatchColumns" /> )
		values(#{accountId}, #{entityId}, #{businessTypeId}, #{cityId}, #{clientId},#{corpId}, #{orderId}, #{contractId}, #{monthly}, #{startDate}, #{endDate}, 
			#{description}, 1, 1, #{remark1}, #{remark2}, #{remark3}, #{remark4}, #{remark5}, #{createBy}, #{createDate}, #{modifyBy}, #{modifyDate}, #{sbType})
	</insert>

	<delete id="deleteSBBatch" parameterType="int">
		delete from hro_sb_batch where batchId = #{value}
  	</delete>


	<select id="getSBToApplyForMoreStatusCountByBatchIds" resultType="int">
		SELECT
			count(1) AS count
		FROM
			hro_sb_batch a
		INNER JOIN hro_sb_header b ON a.batchId = b.batchId
		AND b.deleted = 1
		INNER JOIN hro_sb_detail c ON b.headerId = c.headerId
		AND c.deleted = 1
		INNER JOIN hro_biz_employee_contract_sb d ON d.contractId = b.contractId
		AND d.employeeSBId = b.employeeSBId
		AND d.deleted = 1
		WHERE
			d. STATUS = 2
		AND a.batchId IN 
		<foreach collection="array" item="batchId"  open="(" separator="," close=")">  
        	#{batchId}
     	</foreach>  
	</select>
	
	<select id="getSBToApplyForResigningStatusCountByBatchIds" resultType="int">
		SELECT
			count(1) AS count
		FROM
			hro_sb_batch a
		INNER JOIN hro_sb_header b ON a.batchId = b.batchId
		AND b.deleted = 1
		INNER JOIN hro_sb_detail c ON b.headerId = c.headerId
		AND c.deleted = 1
		INNER JOIN hro_biz_employee_contract_sb d ON d.contractId = b.contractId
		AND d.employeeSBId = b.employeeSBId
		AND d.deleted = 1
		WHERE
			d. STATUS = 5
		AND a.batchId IN 
		<foreach collection="array" item="batchId"  open="(" separator="," close=")">  
        	#{batchId}
     	</foreach>  
	</select>
	
	<update id="updateSBStatusTONoSocialBenefitByBatchId">
		UPDATE hro_biz_employee_contract_sb a
			INNER JOIN hro_sb_header b ON a.contractId = b.contractId AND a.employeeSBId = b.employeeSBId
		AND a.deleted = 1 
		SET a. STATUS = 0
		WHERE
			b.deleted = 1
		AND a. STATUS = 2
		AND b.batchId IN 
		<foreach collection="array" item="batchId"  open="(" separator="," close=")">  
        	#{batchId}
     	</foreach>
  	</update>
  	
  	<update id="updateSBStatusTONormalByBatchId">
		UPDATE hro_biz_employee_contract_sb a
			INNER JOIN hro_sb_header b ON a.contractId = b.contractId AND a.employeeSBId = b.employeeSBId
		AND a.deleted = 1 
		SET a. STATUS = 3
		WHERE
			b.deleted = 1
		AND a. STATUS = 5
		AND b.batchId IN 
		<foreach collection="array" item="batchId"  open="(" separator="," close=")">  
        	#{batchId}
     	</foreach>  
  	</update>
  	
  	<update id="updateSBBatchStatus" parameterType="sbBatch">
		UPDATE hro_sb_batch
		SET STATUS = #{status},
			modifyBy = #{modifyBy},
			modifyDate = #{modifyDate}
		WHERE
			deleted = 1
		<if test="batchId !=null and batchId != 0">
			and batchId = #{batchId} 
		</if>
  	</update>
  	<update id="updateSBHeaderStatus" parameterType="sbBatch">
		UPDATE hro_sb_header
		SET STATUS = #{status},
			modifyBy = #{modifyBy},
			modifyDate = #{modifyDate}
		WHERE
			deleted = 1
		<if test="batchId !=null and batchId != 0">
			and batchId = #{batchId} 
		</if>
		<if test="headerId !=null and headerId != 0">
			and headerId =  #{headerId}
		</if>
  	</update>
  	<update id="updateSBDetailStatus" parameterType="sbBatch">
		UPDATE hro_sb_detail d
		SET d.STATUS = #{status},
			d.modifyBy = #{modifyBy},
			d.modifyDate = #{modifyDate}
		WHERE
			d.deleted = 1
		<if test="batchId !=null and batchId != 0">
			and EXISTS(select 1 from hro_sb_header h where h.headerId = d.headerId and h.batchId = #{batchId} )
		</if>
		<if test="headerId !=null and headerId != 0">
			and d.headerId =  #{headerId}
		</if>
		<if test="detailId !=null and detailId != 0">
			and d.detailId =  #{detailId}
		</if>
  	</update>
  	<select id="getSBBatchId" resultType="String">
		SELECT
			h.batchId
		FROM
			hro_sb_header h 
		WHERE
			h.deleted = 1
		<if test="headerId !=null and headerId != 0">
			and h.headerId =  #{headerId}
		</if>
		<if test="detailId !=null and detailId != 0">
			and EXISTS(select 1 from hro_sb_detail d where h.headerId = d.headerId and d.detailId = #{detailId} )
		</if>  
	</select>
</mapper>