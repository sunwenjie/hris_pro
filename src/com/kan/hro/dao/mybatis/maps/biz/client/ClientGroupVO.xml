<?xml version="1.0" encoding="utf-8" ?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.kan.hro.domain.biz.client.ClientGroupVO">

	<resultMap id="clientGroupBaseView" type="com.kan.hro.domain.biz.client.ClientGroupBaseView">
		<result property="id" column="id" />
		<result property="name" column="name" />
	</resultMap>

	<resultMap id="result" type="com.kan.hro.domain.biz.client.ClientGroupVO">
		<result property="clientGroupId" column="clientGroupId" />
		<result property="accountId" column="accountId" />
		<result property="corpId" column="corpId" />
		<result property="number" column="number" />
		<result property="nameZH" column="nameZH" />
		<result property="nameEN" column="nameEN" />
		<result property="description" column="description" />
		<result property="deleted" column="deleted" />
		<result property="status" column="status" />
		<result property="remark1" column="remark1" />
		<result property="remark2" column="remark2" />
		<result property="createBy" column="createBy" />
		<result property="createDate" column="createDate" />
		<result property="modifyBy" column="modifyBy" />
		<result property="modifyDate" column="modifyDate" />
		<!-- For App -->
		<result property="extended" column="extended" />
	</resultMap>
	
  	<sql id="ClientGroupColumns"> 
  		accountId, corpId,number, nameZH, nameEN, description, deleted, status, remark1, remark2, createBy, createDate, modifyBy, modifyDate 
	</sql>
	
  	<sql id="ClientGroupColumns-for-join"> 
  		a.accountId,a.corpId, a.number, a.nameZH, a.nameEN, a.description, a.deleted, a.status, a.remark1, a.remark2, a.createBy, a.createDate, a.modifyBy, a.modifyDate 
	</sql>
  	
  	<select id="getClientGroupBaseViews" parameterType='String' resultType="clientGroupBaseView" >
  		select clientGroupId as id, CONCAT(nameZH , ' - ', nameEN, '(', clientGroupId, '/', number, ')') as name
  		from HRO_BIZ_Client_Group
  		where deleted = 1 and status = 1 and accountId = ${value}
  	</select>
  	
  	<select id="getClientGroupBaseViewByCondition" parameterType='clientGroup' resultType="clientGroupBaseView" >
  		select clientGroupId as id, CONCAT(nameZH , ' - ', nameEN, '(', clientGroupId, '/', number, ')') as name
  		from HRO_BIZ_Client_Group
  		where deleted = 1 and status = 1 and accountId = ${accountId} and clientGroupId = ${clientGroupId}
  	</select>
  	
	
	<select id="countClientGroupVOsByCondition" parameterType="clientGroup" resultType="int">
		select count(*) 
		from HRO_BIZ_Client_Group
		where deleted = 1 AND accountId = #{accountId}
		<if test="corpId != null and corpId != ''">
			AND (corpId = #{corpId} or 0 = #{corpId})
		</if>
		<if test="corpId == null or corpId == ''">
			AND corpId IS NULL
		</if>
		<if test="number != null and number != ''">
			AND number like CONCAT('%', '${number}', '%') 
		</if>
		<if test="nameZH != null and nameZH != ''">
			AND nameZH like CONCAT('%', '${nameZH}', '%') 
		</if>
		<if test="nameEN != null and nameEN != ''">
			AND nameEN like CONCAT('%', '${nameEN}', '%') 
		</if>
		<if test="status != null and status != ''">
			AND (status = #{status} or 0 = #{status})
		</if>
  	</select>
  	
	<select id="getClientGroupVOsByCondition" parameterType="clientGroup" resultMap="result">
		select CASE WHEN COUNT(b.clientId) != 0 THEN 1 ELSE 2 END AS extended, a.clientGroupId, <include refid="ClientGroupColumns-for-join"/>  
		from HRO_BIZ_Client_Group a LEFT JOIN hro_biz_client b ON a.clientGroupId = b.groupId AND b.deleted = 1 
		where a.deleted = 1 AND a.accountId = #{accountId}
		<if test="corpId != null and corpId != ''">
			AND (a.corpId = #{corpId} or 0 = #{corpId})
		</if>
		<if test="corpId == null or corpId == ''">
			AND a.corpId IS NULL
		</if>
		<if test="number != null and number != ''">
			AND a.number like CONCAT('%', '${number}', '%') 
		</if>
		<if test="nameZH != null and nameZH != ''">
			AND a.nameZH like CONCAT('%', '${nameZH}', '%') 
		</if>
		<if test="nameEN != null and nameEN != ''">
			AND a.nameEN like CONCAT('%', '${nameEN}', '%') 
		</if>
		<if test="status != null and status != ''">
			AND (a.status = #{status} or 0 = #{status})
		</if>
			 GROUP BY a.clientGroupId
		<if test="sortColumn != null and sortColumn != '' and sortOrder != null and sortOrder != ''">
			order by ${sortColumn} ${sortOrder}
		</if>
  	</select>
  	
  	<select id="getClientGroupVOByClientGroupId" parameterType="int" resultMap="result">
		select clientGroupId, <include refid="ClientGroupColumns"/>  
		from HRO_BIZ_Client_Group 
		where clientGroupId = #{value}
  	</select>
  	
	<update id="updateClientGroup" parameterType="clientGroup">
		update HRO_BIZ_Client_Group set number = #{number}, nameZH = #{nameZH}, nameEN = #{nameEN},
			description = #{description}, deleted = #{deleted}, status = #{status}, remark1 = #{remark1}, 
			remark2 = #{remark2}, modifyBy = #{modifyBy}, modifyDate = #{modifyDate}
		where clientGroupId = #{clientGroupId} 
  	</update>
  	
  	<insert id="insertClientGroup" parameterType="clientGroup" useGeneratedKeys="true" keyProperty="clientGroupId">
		insert into HRO_BIZ_Client_Group(<include refid="ClientGroupColumns"/>) 
		values (#{accountId}, #{corpId},#{number}, #{nameZH}, #{nameEN}, #{description}, 1, #{status}, 
		#{remark1}, #{remark2}, #{createBy}, #{createDate}, #{modifyBy}, #{modifyDate})
  	</insert>
  	
  	<delete id="deleteClientGroup" parameterType="int">
		delete from HRO_BIZ_Client_Group where clientGroupId = #{value}
  	</delete>
	
</mapper>