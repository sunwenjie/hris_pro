<?xml version="1.0" encoding="utf-8" ?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.kan.hro.domain.biz.employee.EmployeeEmergencyVO">

	<resultMap id="result" type="com.kan.hro.domain.biz.employee.EmployeeEmergencyVO">
		<result property="employeeEmergencyId" column="employeeEmergencyId" />
		<result property="employeeId" column="employeeId" />
		<result property="relationshipId" column="relationshipId" />
		<result property="name" column="name" />
		<result property="phone" column="phone" />
		<result property="mobile" column="mobile" />
		<result property="address" column="address" />
		<result property="postcode" column="postcode" />
		<result property="description" column="description" />
		<result property="deleted" column="deleted" />
		<result property="status" column="status" />
		<result property="remark1" column="remark1" />
		<result property="remark2" column="remark2" />
		<result property="remark3" column="remark3" />
		<result property="remark4" column="remark4" />
		<result property="remark5" column="remark5" />
		<result property="createBy" column="createBy" />
		<result property="createDate" column="createDate" />
		<result property="modifyBy" column="modifyBy" />
		<result property="modifyDate" column="modifyDate" />
	</resultMap>

	<sql id="employeeEmergencyColumns">
		employeeId, relationshipId, name,phone,mobile,address,postcode,description, 
		deleted, status, remark1, remark2, remark3, remark4, remark5, createBy,
		createDate, modifyBy, modifyDate
	</sql>	
	
	<select id="countEmployeeEmergencyVOsByCondition" parameterType="employeeEmergency" resultType="int">
		SELECT COUNT(*)
		FROM HRO_BIZ_Employee_Emergency 
		WHERE deleted = 1
		<if test="employeeId != null and employeeId != ''">
			AND (employeeId = #{employeeId} OR 0 = #{employeeId})
		</if>
		<if test="relationshipId != null and relationshipId != ''">
			AND (relationshipId = #{relationshipId} OR 0 = #{relationshipId})
		</if>
		<if test="name != null and name != ''">
			AND name LIKE CONCAT('%', '${name}', '%') 
		</if>
		
		<if test="status != null and status != ''">
			AND (status = #{status} OR 0 = #{status})
		</if>
	</select>
	
	<select id="getEmployeeEmergencyVOsByCondition" parameterType="employeeEmergency" resultMap="result">
		SELECT employeeEmergencyId,<include refid="employeeEmergencyColumns" />
		FROM HRO_BIZ_Employee_Emergency
		WHERE deleted = 1 
		<if test="employeeId != null and employeeId != ''">
			AND (employeeId = #{employeeId} OR 0 = #{employeeId})
		</if>
		<if test="relationshipId != null and relationshipId != ''">
			AND (relationshipId = #{relationshipId} OR 0 = #{relationshipId})
		</if>
		<if test="name != null and name != ''">
			AND name LIKE CONCAT('%', '${name}', '%') 
		</if>
		
		<if test="status != null and status != ''">
			AND (status = #{status} OR 0 = #{status})
		</if>
		<if test="sortColumn != null and sortColumn != '' and sortOrder != null and sortOrder != ''">
			ORDER BY ${sortColumn} ${sortOrder}
		</if>
	</select>
	
	<select id="getEmployeeEmergencyVOByEmployeeEmergencyId" parameterType="int" resultMap="result">
		SELECT employeeEmergencyId,<include refid="employeeEmergencyColumns" />
		FROM HRO_BIZ_Employee_Emergency
		WHERE deleted = 1 
		AND employeeEmergencyId = #{value}
	</select>
	
	<select id="getEmployeeEmergencyVOsByEmployeeId" parameterType="int"  resultMap="result">
		SELECT employeeEmergencyId,<include refid="employeeEmergencyColumns" />
		FROM HRO_BIZ_Employee_Emergency
		WHERE deleted = 1  AND  employeeId = #{value}
		ORDER BY relationshipId ASC
	</select>
	
	<insert id="insertEmployeeEmergency" parameterType="employeeEmergency" useGeneratedKeys="true" keyProperty="employeeEmergencyId">
		INSERT INTO HRO_BIZ_Employee_Emergency(<include refid="employeeEmergencyColumns" />)
		VALUES(#{employeeId}, #{relationshipId}, #{name},#{phone},#{mobile},#{address},#{postcode},#{description}, 
			   1, #{status}, #{remark1}, #{remark2}, #{remark3}, #{remark4}, #{remark5}, #{createBy}, 
		       #{createDate}, #{modifyBy}, #{modifyDate})
	</insert>

	<update id="updateEmployeeEmergency" parameterType="employeeEmergency">
		UPDATE HRO_BIZ_Employee_Emergency SET employeeId=#{employeeId}, relationshipId=#{relationshipId}, name=#{name},phone=#{phone},mobile=#{mobile},address=#{address},postcode=#{postcode}, description = #{description}, deleted = #{deleted},
			status = #{status}, remark1 = #{remark1}, remark2 = #{remark2}, remark3 = #{remark3}, remark4 = #{remark4}, remark5 = #{remark5},
			createBy = #{createBy}, createDate = #{createDate}, modifyBy = #{modifyBy}, modifyDate = #{modifyDate}
		WHERE employeeEmergencyId = #{employeeEmergencyId} 
	</update>	
	
	<delete id="deleteEmployeeEmergency" parameterType="int">
		DELETE FROM HRO_BIZ_Employee_Emergency WHERE employeeEmergencyId = #{value}
  	</delete>	
</mapper>
