<?xml version="1.0" encoding="utf-8" ?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.kan.base.domain.define.ColumnGroupVO">

	<resultMap id="result" type="com.kan.base.domain.define.ColumnGroupVO">
		<result property="groupId" column="groupId"/>
		<result property="accountId" column="accountId"/>
		<result property="corpId" column="corpId"/>
		<result property="nameZH" column="nameZH"/>
		<result property="nameEN" column="nameEN"/>
		<result property="useName" column="useName"/>
		<result property="useBorder" column="useBorder"/>		
		<result property="usePadding" column="usePadding"/>
		<result property="useMargin" column="useMargin"/>
		<result property="isDisplayed" column="isDisplayed"/>
		<result property="isFlexable" column="isFlexable"/>
		<result property="description" column="description"/>
		<result property="deleted" column="deleted" />
		<result property="status" column="status" />
		<result property="remark1" column="remark1" />    
		<result property="remark2" column="remark2" />
		<result property="remark3" column="remark3" />
		<result property="remark4" column="remark4" />
		<result property="remark5" column="remark5" />
		<result property="createBy" column="createBy" />
		<result property="createDate" column="createDate" />
		<result property="modifyBy" column="modifyBy" />
		<result property="modifyDate" column="modifyDate" />		
	</resultMap>
	
	<sql id="columnGroupColumns">
		accountId,corpId, nameZH, nameEN, useName, useBorder, usePadding, useMargin, isDisplayed, isFlexable, description, deleted, status, remark1, remark2, 
		remark3, remark4, remark5, createBy, createDate, modifyBy, modifyDate
	</sql>
	
	<sql id="columnGroupColumns-for-join">
		a.accountId,a.corpId, a.nameZH, a.nameEN, a.useName, a.useBorder, a.usePadding, a.useMargin, a.isDisplayed, a.isFlexable, a.description, a.deleted, a.status, a.remark1, a.remark2, 
		a.remark3, a.remark4, a.remark5, a.createBy, a.createDate, a.modifyBy, a.modifyDate
	</sql>
	
	<select id="countColumnGroupVOsByCondition" parameterType="columnGroup" resultType="int">
	SELECT COUNT(0) FROM
	(
		select 1
		FROM HRO_DEF_Column_Group a
			LEFT JOIN HRO_DEF_Column b
				ON a.groupId = b.groupId AND b.deleted = 1
		WHERE a.deleted = 1 and a.accountId = #{accountId}					
		<if test="nameZH != null and nameZH != ''">
			AND a.nameZH like CONCAT('%', '${nameZH}' , '%')
		</if>
		<if test="corpId !=null and corpId!=''">
			AND a.corpId=#{corpId}
		</if>
		<if test="corpId == null or corpId == ''">
			AND a.corpId IS NULL
		</if>
		<if test="nameEN != null and nameEN != ''">
			AND a.nameEN like CONCAT('%', '${nameEN}' , '%')
		</if>
		<if test="isDisplayed != null and isDisplayed != ''">
			AND (a.isDisplayed = #{isDisplayed} or 0 = #{isDisplayed})
		</if>
		<if test="status != null and status != ''">
			AND (a.status = #{status} or 0 = #{status})
		</if>
			GROUP BY a.groupId
	)t
	</select>
	
	<select id="getColumnGroupVOsByCondition" parameterType="columnGroup" resultMap="result">
		SELECT
			a.groupId , <include refid="columnGroupColumns-for-join" />,
			CASE 
				WHEN ( ISNULL(b.groupId) )
				THEN 2
				ELSE 1
			END AS `extended`
		FROM HRO_DEF_Column_Group a
			LEFT JOIN HRO_DEF_Column b
				ON a.groupId = b.groupId AND b.deleted = 1
		WHERE a.deleted = 1 and a.accountId = #{accountId}					
		<if test="nameZH != null and nameZH != ''">
			AND a.nameZH like CONCAT('%', '${nameZH}' , '%')
		</if>
		<if test="corpId !=null and corpId!=''">
			AND a.corpId=#{corpId}
		</if>
		<if test="corpId == null or corpId == ''">
			AND a.corpId IS NULL
		</if>
		<if test="nameEN != null and nameEN != ''">
			AND a.nameEN like CONCAT('%', '${nameEN}' , '%')
		</if>
		<if test="isDisplayed != null and isDisplayed != ''">
			AND (a.isDisplayed = #{isDisplayed} or 0 = #{isDisplayed})
		</if>
		<if test="status != null and status != ''">
			AND (a.status = #{status} or 0 = #{status})
		</if>
			GROUP BY a.groupId
		<if test="sortColumn != null and sortColumn != '' and sortOrder != null and sortOrder != ''">
			order by ${sortColumn} ${sortOrder}
		</if>
	</select>
	
	<select id="getColumnGroupVOByGroupId" parameterType="int" resultMap="result">
		select groupId, <include refid="columnGroupColumns" />
		from Hro_Def_Column_Group
		where groupId = #{value}
	</select>
	
	<insert id="insertColumnGroup" parameterType="columnGroup" useGeneratedKeys="true" keyProperty="groupId">
		insert into Hro_Def_Column_Group(<include refid="columnGroupColumns" />)		
		values(#{accountId},#{corpId}, #{nameZH}, #{nameEN}, #{useName}, #{useBorder}, #{usePadding}, #{useMargin}, #{isDisplayed}, #{isFlexable}, #{description}, 
			1, #{status}, #{remark1}, #{remark2}, #{remark3}, #{remark4}, #{remark5}, #{createBy}, #{createDate}, #{modifyBy}, #{modifyDate})
	</insert>
	
  	<update id="updateColumnGroup" parameterType="columnGroup"> 					
		update Hro_Def_Column_Group set  nameZH = #{nameZH}, nameEN = #{nameEN}, useName = #{useName}, useBorder = #{useBorder}, usePadding = #{usePadding}, 
			useMargin = #{useMargin}, isDisplayed = #{isDisplayed}, isFlexable = #{isFlexable}, description = #{description}, deleted = #{deleted}, 
			status = #{status}, remark1 = #{remark1}, remark2 = #{remark2}, remark3 = #{remark3}, remark4 = #{remark4}, remark5 = #{remark5},
			modifyBy = #{modifyBy}, modifyDate = #{modifyDate}
		where groupId = #{groupId} 		
  	</update>
  	
  	<delete id="deleteColumnGroup" parameterType="int">
		delete from Hro_Def_Column_Group where groupId = #{value}
  	</delete>
	
	<select id="getColumnGroupVOsByAccountId" parameterType="int" resultMap="result">
		select groupId, <include refid="columnGroupColumns" />
		from Hro_Def_Column_Group
		where deleted = 1 AND status = 1 AND accountId = #{value}
	</select>
</mapper>