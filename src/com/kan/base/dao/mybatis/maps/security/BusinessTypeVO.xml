<?xml version="1.0" encoding="utf-8" ?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.kan.base.domain.management.BusinessTypeVO">

	<resultMap id="businessTypeBaseView" type="com.kan.base.domain.security.BusinessTypeBaseView">
		<result property="id" column="id" />
		<result property="accountId" column="accountId" />
		<result property="name" column="name" />
	</resultMap>

	<resultMap id="result" type="com.kan.base.domain.security.BusinessTypeVO" >
		<result property="businessTypeId" column="businessTypeId"/>
		<result property="accountId" column="accountId"/>
		<result property="corpId" column="corpId"/>
		<result property="nameZH" column="nameZH"/>
		<result property="nameEN" column="nameEN"/>
		<result property="description" column="description"/>
		<result property="deleted" column="deleted"/>
		<result property="status" column="status"/>
		<result property="remark1" column="remark1"/>
		<result property="remark2" column="remark2"/>
		<result property="createBy" column="createBy" />
		<result property="createDate" column="createDate" />
		<result property="modifyBy" column="modifyBy" />
		<result property="modifyDate" column="modifyDate" />
		<result property="extended" column="extended" />
	</resultMap>
	
	<sql id="businessTypeColumns">
		accountId, corpId, nameZH, nameEN, description, deleted, status, remark1, remark2, createBy, createDate, modifyBy, modifyDate
	</sql>  	
	
	<sql id="businessTypeColumns-for-join">
		a.accountId, a.corpId, a.nameZH, a.nameEN, a.description, a.deleted, a.status, a.remark1, a.remark2, a.createBy, a.createDate, a.modifyBy, a.modifyDate
	</sql>   	
	
	<select id="countBusinessTypeVOsByCondition" parameterType="businessType" resultType="int">
		SELECT count(1) 
		FROM Hro_SEC_Business_Type
		WHERE deleted = 1 AND accountId= #{accountId}
		<if test="corpId != null and corpId != ''">
			AND corpId = #{corpId}
		</if>
		<if test="corpId == null or corpId == ''">
			AND corpId IS NULL
		</if>
		<if test="nameZH != null and nameZH != ''">
			AND nameZH LIKE CONCAT('%', '${nameZH}', '%') 
		</if>
		<if test="nameEN != null and nameEN != ''">
			AND nameEN LIKE CONCAT('%', '${nameEN}', '%') 
		</if>
		<if test="status != null and status != ''">
			AND (status = #{status} or 0 = #{status})
		</if>
  	</select>

	<select id="getBusinessTypeVOsByCondition" parameterType="businessType" resultMap="result">
		SELECT a.businessTypeId, <include refid="businessTypeColumns-for-join"/>, 
		CASE WHEN ISNULL( b.businessTypeId ) THEN 2 ELSE 1 END AS `extended`
		FROM HRO_SEC_Business_Type a LEFT JOIN
			(
				SELECT businessTypeId 
				FROM hro_biz_client_order_header
				WHERE deleted = 1 AND accountId = #{accountId}	
				GROUP BY businessTypeId
	
				UNION ALL
	
				SELECT businessTypeId 
				FROM hro_biz_employee_contract 
				WHERE deleted = 1 AND accountId = #{accountId}	
				GROUP BY businessTypeId
	
				UNION ALL
	
				SELECT businessTypeId 
				FROM hro_biz_client_contract
				WHERE deleted = 1 AND accountId = #{accountId}	
				GROUP BY businessTypeId
	
				UNION ALL
	
				SELECT businessTypeId 
				FROM hro_sec_branch 
				WHERE deleted = 1 AND accountId = #{accountId}	
				GROUP BY businessTypeId
				
				UNION ALL
				
				SELECT bizType 
				FROM hro_sec_entity
				WHERE deleted = 1 AND accountId = #{accountId}	
				GROUP BY bizType
			) b ON a.businessTypeId = b.businessTypeId
		WHERE a.deleted = 1 AND a.accountId = #{accountId}	
		<if test="corpId != null and corpId != ''">
			AND a.corpId = #{corpId}
		</if>
		<if test="corpId == null or corpId == ''">
			AND a.corpId IS NULL
		</if>
		<if test="nameZH != null and nameZH != ''">
			AND a.nameZH LIKE CONCAT('%', '${nameZH}', '%') 
		</if>
		<if test="nameEN != null and nameEN != ''">
			AND a.nameEN LIKE CONCAT('%', '${nameEN}', '%') 
		</if>
		<if test="status != null and status != ''">
			AND (a.status = #{status} OR 0 = #{status})
		</if>
		GROUP BY a.businessTypeId
		<if test="sortColumn != null and sortColumn != '' and sortOrder != null and sortOrder != ''">
			ORDER BY ${sortColumn} ${sortOrder}
		</if>
  	</select>
  		
  	<select id="getBusinessTypeBaseViews" parameterType='String' resultType="businessTypeBaseView" >
  		SELECT businessTypeId AS id, CONCAT(nameZH , ' - ', nameEN) AS name, accountId
  		FROM Hro_SEC_Business_Type
  		WHERE deleted = 1 AND status = 1 AND accountId = ${value}
  		ORDER BY name
  	</select>
  	
  	<select id="getBusinessTypeVOByBusinessTypeId" parameterType="int" resultMap="result">
  		SELECT businessTypeId, <include refid="businessTypeColumns"/>
  		FROM Hro_SEC_Business_Type
  		WHERE businessTypeId = #{value}
  	</select>
  	
  	<select id="getBusinessTypeVOsByAccountId" parameterType="int" resultMap="result">
  		SELECT businessTypeId, <include refid="businessTypeColumns"/>
  		FROM Hro_SEC_Business_Type
  		WHERE deleted = 1 AND status = 1 AND accountId = #{value}
  	</select>
  	
  	<insert id="insertBusinessType" parameterType="businessType" useGeneratedKeys="true" keyProperty="businessTypeId">
  		INSERT INTO Hro_SEC_Business_Type(<include refid="businessTypeColumns"/>)		
  		VALUES(	#{accountId},#{corpId}, #{nameZH}, #{nameEN}, #{description}, 1, #{status}, #{remark1}, #{remark2}, #{createBy}, #{createDate}, #{modifyBy}, #{modifyDate}) 	
  	</insert>
  	
  	<update id="updateBusinessType" parameterType="businessType">  							
  		UPDATE Hro_SEC_Business_Type SET 
  				 nameZH = #{nameZH}, nameEN = #{nameEN}, description = #{description}, deleted = #{deleted}, status = #{status}, 
  				 remark1 = #{remark1}, remark2 = #{remark2}, createBy = #{createBy}, 
  				 createDate = #{createDate}, modifyBy = #{modifyBy}, modifyDate = #{modifyDate}
  		WHERE businessTypeId = #{businessTypeId}  		
  	</update>  	
  	
  	<delete id="deleteBusinessType" parameterType="int">
  		DELETE FROM Hro_SEC_Business_Type WHERE businessTypeId = #{value} 
  	</delete>
  	
</mapper>