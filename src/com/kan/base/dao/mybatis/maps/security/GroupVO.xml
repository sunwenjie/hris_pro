<?xml version="1.0" encoding="utf-8" ?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.kan.base.domain.security.GroupVO">

	<resultMap id="groupBaseView" type="com.kan.base.domain.security.GroupBaseView">
		<result property="id" column="id" />
		<result property="name" column="name" />
	</resultMap>
	
	<resultMap id="result" type="com.kan.base.domain.security.GroupVO">
		<result property="groupId" column="groupId" />
		<result property="accountId" column="accountId" />
		<result property="corpId" column="corpId" />
		<result property="nameZH" column="nameZH" />
		<result property="nameEN" column="nameEN" />
		<result property="hrFunction" column="hrFunction" />
		<result property="description" column="description" />
		<result property="deleted" column="deleted" />
		<result property="status" column="status" />
		<result property="remark1" column="remark1" />
		<result property="remark2" column="remark2" />
		<result property="remark3" column="remark3" />
		<result property="remark4" column="remark4" />
		<result property="remark5" column="remark5" />
		<result property="createBy" column="createBy" />
		<result property="createDate" column="createDate" />
		<result property="modifyBy" column="modifyBy" />
		<result property="modifyDate" column="modifyDate" />
		<result property="extended" column="extended" />
		<result property="dataRole" column="dataRole" />
	</resultMap>
	
  	<sql id="GroupColumns"> 
  		accountId, corpId, nameZH, nameEN, hrFunction, description,dataRole, deleted, status, remark1, remark2, remark3, remark4, remark5, createBy, createDate, modifyBy, modifyDate 
	</sql>
  	<sql id="GroupColumns_for_join"> 
  		a.accountId, a.corpId, a.nameZH, a.nameEN, a.hrFunction, a.description,a.dataRole, a.deleted, a.status, a.remark1, a.remark2, a.remark3, a.remark4, a.remark5, a.createBy, a.createDate, a.modifyBy, a.modifyDate 
	</sql>
	
	<select id="getGroupBaseViewsByAccountId" resultType="groupBaseView">
  		SELECT groupId as id, CONCAT(nameZH, ' - ', nameEN) AS name 
  		FROM HRO_SEC_Group
  		WHERE deleted = 1 AND accountId = #{value}
  		ORDER BY name 
  	</select>
	
	<select id="countGroupVOsByCondition" parameterType="group" resultType="int">
		SELECT COUNT(0) FROM
		(
			SELECT 0
			FROM HRO_SEC_Group a
			LEFT JOIN hro_sec_position_group_relation b ON a.groupId = b.groupId AND b.deleted = 1 AND b.`status` = 1
			WHERE a.deleted = 1 AND a.accountId = #{accountId}
			<if test="corpId != null and corpId != ''">
				AND (a.corpId = #{corpId} or 0 = #{corpId})
			</if>
			<if test="corpId == null or corpId == ''">
				AND a.corpId IS NULL
			</if>
			<if test="groupId != null and groupId != ''">
				AND (a.groupId = #{groupId} or 0 = #{groupId})
			</if>
			<if test="nameZH != null and nameZH != ''">
				AND a.nameZH like CONCAT('%', '${nameZH}', '%') 
			</if>
			<if test="nameEN != null and nameEN != ''">
				AND a.nameEN like CONCAT('%', '${nameEN}', '%') 
			</if>
			<if test="status != null and status != ''">
				AND (a.status = #{status} or 0 = #{status})
			</if>
			GROUP BY a.groupId
		)t
  	</select>
  	
	<select id="getGroupVOsByCondition" parameterType="group" resultMap="result">
		SELECT a.groupId, <include refid="GroupColumns_for_join"/> ,CASE WHEN COUNT(b.relationId) != 0 THEN 1  ELSE 2 END AS `extended`
		FROM HRO_SEC_Group a
		LEFT JOIN hro_sec_position_group_relation b ON a.groupId = b.groupId AND b.deleted = 1 AND b.`status` = 1
		WHERE a.deleted = 1 AND a.accountId = #{accountId}
		<if test="corpId != null and corpId != ''">
			AND (a.corpId = #{corpId} or 0 = #{corpId})
		</if>
		<if test="corpId == null or corpId == ''">
			AND a.corpId IS NULL
		</if>
		<if test="groupId != null and groupId != ''">
			AND (a.groupId = #{groupId} or 0 = #{groupId})
		</if>
		<if test="nameZH != null and nameZH != ''">
			AND a.nameZH like CONCAT('%', '${nameZH}', '%') 
		</if>
		<if test="nameEN != null and nameEN != ''">
			AND a.nameEN like CONCAT('%', '${nameEN}', '%') 
		</if>
		<if test="status != null and status != ''">
			AND (a.status = #{status} or 0 = #{status})
		</if>
		GROUP BY a.groupId
		<if test="sortColumn != null and sortColumn != '' and sortOrder != null and sortOrder != ''">
			ORDER BY ${sortColumn} ${sortOrder}
		</if>
  	</select>
  	
  	<select id="getGroupVOByGroupId" parameterType="int" resultMap="result">
		SELECT groupId, <include refid="GroupColumns"/>  
		FROM HRO_SEC_Group 
		WHERE deleted = 1 AND groupId = #{value}
  	</select>
  	
  	<insert id="insertGroup" parameterType="group" useGeneratedKeys="true" keyProperty="groupId">
		INSERT into HRO_SEC_Group(<include refid="GroupColumns"/>) 
		VALUES (#{accountId},#{corpId}, #{nameZH}, #{nameEN}, #{hrFunction}, #{description},#{dataRole}, 1, #{status}, #{remark1}, #{remark2}, #{remark3}, #{remark4}, #{remark5}, #{createBy}, 
			#{createDate}, #{modifyBy}, #{modifyDate})
  	</insert>
  	
  	<update id="updateGroup" parameterType="group">
		UPDATE HRO_SEC_Group SET  nameZH = #{nameZH}, hrFunction = #{hrFunction}, nameEN = #{nameEN}, description = #{description}, dataRole = #{dataRole},deleted = #{deleted}, 
			status = #{status}, remark1 = #{remark1}, remark2 = #{remark2}, remark3 = #{remark3}, remark4 = #{remark4}, remark5 = #{remark5}, 
			modifyBy = #{modifyBy}, modifyDate = #{modifyDate}
		WHERE groupId = #{groupId} 
  	</update>
  	
  	<delete id="deleteGroup" parameterType="int">
		DELETE FROM HRO_SEC_Group where groupId = #{value}
  	</delete>
	  	
	<select id="getGroupVOsByAccountId" parameterType="String" resultMap="result">
		SELECT groupId, <include refid="GroupColumns"/>  
		FROM HRO_SEC_Group 
		WHERE deleted = 1  AND accountId = #{value} 
		ORDER BY groupId
  	</select>
</mapper>