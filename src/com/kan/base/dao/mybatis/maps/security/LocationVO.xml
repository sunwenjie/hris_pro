<?xml version="1.0" encoding="utf-8" ?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.kan.base.domain.security.LocationVO">

	<resultMap id="result" type="com.kan.base.domain.security.LocationVO">
		<result property="locationId" column="locationId" />
		<result property="accountId" column="accountId" />
		<result property="corpId" column="corpId" />
		<result property="cityId" column="cityId" />
		<result property="nameZH" column="nameZH" />
		<result property="nameEN" column="nameEN" />
		<result property="addressZH" column="addressZH" />
		<result property="addressEN" column="addressEN" />
		<result property="telephone" column="telephone" />
		<result property="fax" column="fax" />
		<result property="postcode" column="postcode" />
		<result property="email" column="email" />
		<result property="website" column="website" />
		<result property="description" column="description" />
		<result property="deleted" column="deleted" />
		<result property="status" column="status" />
		<result property="remark1" column="remark1" />
		<result property="remark2" column="remark2" />
		<result property="remark3" column="remark3" />
		<result property="remark4" column="remark4" />
		<result property="remark5" column="remark5" />
		<result property="createBy" column="createBy" />
		<result property="createDate" column="createDate" />
		<result property="modifyBy" column="modifyBy" />
		<result property="modifyDate" column="modifyDate" />
		<result property="extended" column="extended" />
	</resultMap>
	
  	<sql id="LocationColumns"> 
  		accountId, corpId, cityId, nameZH, nameEN, addressZH, addressEN, telephone, fax, postcode, email, website, description, deleted, status, remark1, remark2, remark3, remark4, remark5, createBy, createDate, modifyBy, modifyDate 
	</sql>
	
  	<sql id="LocationColumns_for_join"> 
  		a.accountId, a.corpId, a.cityId, a.nameZH, a.nameEN, a.addressZH, a.addressEN, a.telephone, a.fax, a.postcode, a.email, a.website, a.description, a.deleted, a.status, a.remark1, a.remark2, a.remark3, a.remark4, a.remark5, a.createBy, a.createDate, a.modifyBy, a.modifyDate 
	</sql>
	
	<select id="countLocationVOsByCondition" parameterType="location" resultType="int">
		SELECT COUNT(0) FROM
		(
			select 0 
			FROM HRO_SEC_Location a
			LEFT JOIN hro_sec_entity b ON a.locationId = b.locationId AND b.deleted = 1 AND b.`status` = 1
			LEFT JOIN hro_sec_position c ON c.locationId = a.locationId AND c.deleted = 1 AND c.deleted = 1
			WHERE a.deleted = 1 AND a.accountId = #{accountId}
			<if test="corpId != null and corpId != ''">
				AND (a.corpId = #{corpId} OR 0 = #{corpId}) 
			</if>
			<if test="corpId == null or corpId == ''">
				AND a.corpId IS NULL 
			</if>
			<if test="nameZH != null and nameZH != ''">
				AND a.nameZH like CONCAT('%', '${nameZH}', '%') 
			</if>
			<if test="nameEN != null and nameEN != ''">
				AND a.nameEN like CONCAT('%', '${nameEN}', '%') 
			</if>
			<if test="addressZH != null and addressZH != ''">
				AND a.addressZH like CONCAT('%', '${addressZH}', '%') 
			</if>
			<if test="addressEN != null and addressEN != ''">
				AND a.addressEN like CONCAT('%', '${addressEN}', '%') 
			</if>
			<if test="cityId != null and cityId != ''">
				AND (a.cityId = #{cityId} or 0 = #{cityId})
			</if>
			<if test="status != null and status != ''">
				AND (a.status = #{status} or 0 = #{status})
			</if>
			<if test="sortColumn != null and sortColumn != '' and sortOrder != null and sortOrder != ''">
				ORDER BY ${sortColumn} ${sortOrder}
			</if>
			GROUP BY a.locationId
		) t
  	</select>
  	
	<select id="getLocationVOsByCondition" parameterType="location" resultMap="result">
		SELECT a.locationId, <include refid="LocationColumns_for_join"/>  ,CASE WHEN (COUNT(b.entityId) + COUNT(c.positionId)) != 0 THEN 1  ELSE 2 END AS `extended`
		FROM HRO_SEC_Location a
		LEFT JOIN hro_sec_entity b ON a.locationId = b.locationId AND b.deleted = 1 AND b.`status` = 1
		LEFT JOIN hro_sec_position c ON c.locationId = a.locationId AND c.deleted = 1 AND c.deleted = 1
		WHERE a.deleted = 1 AND a.accountId = #{accountId}
		<if test="corpId != null and corpId != ''">
			AND (a.corpId = #{corpId} OR 0 = #{corpId}) 
		</if>
		<if test="corpId == null or corpId == ''">
			AND a.corpId IS NULL 
		</if>
		<if test="nameZH != null and nameZH != ''">
			AND a.nameZH like CONCAT('%', '${nameZH}', '%') 
		</if>
		<if test="nameEN != null and nameEN != ''">
			AND a.nameEN like CONCAT('%', '${nameEN}', '%') 
		</if>
		<if test="addressZH != null and addressZH != ''">
			AND a.addressZH like CONCAT('%', '${addressZH}', '%') 
		</if>
		<if test="addressEN != null and addressEN != ''">
			AND a.addressEN like CONCAT('%', '${addressEN}', '%') 
		</if>
		<if test="cityId != null and cityId != ''">
			AND (a.cityId = #{cityId} or 0 = #{cityId})
		</if>
		<if test="status != null and status != ''">
			AND (a.status = #{status} or 0 = #{status})
		</if>
		<if test="sortColumn != null and sortColumn != '' and sortOrder != null and sortOrder != ''">
			ORDER BY ${sortColumn} ${sortOrder}
		</if>
		GROUP BY a.locationId
  	</select>
  	
  	<select id="getLocationVOsByAccountId" parameterType="int" resultMap="result">
		select locationId, <include refid="LocationColumns"/>  
		from HRO_SEC_Location 
		where deleted = 1 AND status = 1 AND accountId = #{value}
		order by locationId
  	</select>
  	
  	<select id="getLocationVOByLocationId" parameterType="int" resultMap="result">
		select locationId, <include refid="LocationColumns"/>  
		from HRO_SEC_Location 
		where locationId = #{value}
  	</select>
  	
	<update id="updateLocation" parameterType="location">
		update HRO_SEC_Location set  cityId = #{cityId}, nameZH = #{nameZH}, nameEN = #{nameEN}, 
			addressZH = #{addressZH}, addressEN = #{addressEN}, telephone = #{telephone}, fax = #{fax}, postcode = #{postcode},
			email = #{email}, website = #{website}, description = #{description},
			deleted = #{deleted}, status = #{status}, remark1 = #{remark1}, remark2 = #{remark2}, remark3 = #{remark3}, remark4 = #{remark4}, 
			remark5 = #{remark5}, modifyBy = #{modifyBy}, modifyDate = #{modifyDate}
		where locationId = #{locationId} 
  	</update>
  	
  	<insert id="insertLocation" parameterType="location" useGeneratedKeys="true" keyProperty="locationId">
		insert into HRO_SEC_Location(<include refid="LocationColumns"/>) 
			values (#{accountId},#{corpId}, #{cityId}, #{nameZH}, #{nameEN}, #{addressZH}, #{addressEN}, #{telephone}, #{fax},
			#{postcode}, #{email}, #{website}, #{description},
		 	1, #{status}, #{remark1}, #{remark2}, #{remark3}, #{remark4}, #{remark5}, 
			#{createBy}, #{createDate}, #{modifyBy}, #{modifyDate})
  	</insert>
  	
  	<delete id="deleteLocation" parameterType="location">
		update HRO_SEC_Location set deleted = 2, modifyBy = #{modifyBy}, modifyDate = #{modifyDate} where locationId = #{locationId}
  	</delete>
	
</mapper>