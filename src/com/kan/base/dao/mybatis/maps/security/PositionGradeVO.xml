<?xml version="1.0" encoding="utf-8" ?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.kan.base.domain.security.PositionGradeVO">

  	<resultMap id="result" type="com.kan.base.domain.security.PositionGradeVO">
	    <result property="positionGradeId" column="positionGradeId" />
	    <result property="accountId" column="accountId" />
	    <result property="corpId" column="corpId" />
	    <result property="gradeNameZH" column="gradeNameZH" />
	    <result property="gradeNameEN" column="gradeNameEN" />
	    <result property="weight" column="weight" />
	    <result property="description" column="description" />
	    <result property="deleted" column="deleted" />
	    <result property="status" column="status" />
	    <result property="remark1" column="remark1" />
	    <result property="remark2" column="remark2" />
	    <result property="remark3" column="remark3" />
	    <result property="remark4" column="remark4" />
	    <result property="remark5" column="remark5" />
	    <result property="createBy" column="createBy" />
	    <result property="createDate" column="createDate" /> 
	    <result property="modifyBy" column="modifyBy" />
	    <result property="modifyDate" column="modifyDate" />
  	</resultMap>
  
  	<sql id="positionGradeColumns">
     	accountId, corpId, gradeNameZH, gradeNameEN, weight, description, deleted, status, remark1, remark2, remark3, remark4, remark5, createBy, 
     	createDate, modifyBy, modifyDate
  	</sql>
  	<sql id="positionGradeColumns_for_join">
     	a.accountId, a.corpId, a.gradeNameZH, a.gradeNameEN, a.weight, a.description, a.deleted, a.status, a.remark1, a.remark2, a.remark3, a.remark4, a.remark5, a.createBy, 
     	a.createDate, a.modifyBy, a.modifyDate
  	</sql>
  
  	<select id="countPositionGradeVOsByCondition" parameterType="positionGrade" resultType="int">
  		SELECT COUNT(0) FROM
  		(
		    SELECT 0 
		    FROM HRO_Sec_Position_Grade a
			LEFT JOIN hro_sec_position  b ON a.positionGradeId = b.positionGradeId AND b.deleted =1 AND b.`status` = 1
			LEFT JOIN hro_sec_position_grade_currency c ON a.positionGradeId = c.positionGradeId AND c.deleted = 1 AND c.`status` =1
			WHERE a.deleted = 1 AND a.accountId = #{accountId}
			<if test="corpId != null and corpId != ''">
				AND (a.corpId =#{corpId} or 0 = #{corpId})
			</if>
			<if test="corpId == null or corpId == ''">
				AND a.corpId IS NULL
			</if>
			<if test="gradeNameZH != null and gradeNameZH != ''">
				AND a.gradeNameZH like CONCAT('%', '${gradeNameZH}', '%') 
			</if>
			<if test="gradeNameEN != null and gradeNameEN != ''">
				AND a.gradeNameEN like CONCAT('%', '${gradeNameEN}', '%') 
			</if>
			<if test="weight != null and weight != ''">
				AND a.weight = #{weight}
			</if>
			<if test="status != null and status != ''">
				AND (a.status = #{status} or 0 = #{status})
			</if>
			GROUP BY a.positionGradeId
		)t
  	</select>
  
  	<select id="getPositionGradeVOsByCondition" parameterType="positionGrade" resultMap="result">
		SELECT a.positionGradeId, <include refid="positionGradeColumns_for_join"/>  , CASE WHEN (COUNT(b.parentPositionId) + COUNT(c.positionGradeId)) != 0 THEN 1  ELSE 2 END AS `extended`
		FROM HRO_Sec_Position_Grade a
		LEFT JOIN hro_sec_position  b ON a.positionGradeId = b.positionGradeId AND b.deleted =1 AND b.`status` = 1
		LEFT JOIN hro_sec_position_grade_currency c ON a.positionGradeId = c.positionGradeId AND c.deleted = 1 AND c.`status` =1
		WHERE a.deleted = 1 AND a.accountId = #{accountId}
		<if test="corpId != null and corpId != ''">
			AND (a.corpId =#{corpId} or 0 = #{corpId})
		</if>
		<if test="corpId == null or corpId == ''">
			AND a.corpId IS NULL
		</if>
		<if test="gradeNameZH != null and gradeNameZH != ''">
			AND a.gradeNameZH like CONCAT('%', '${gradeNameZH}', '%') 
		</if>
		<if test="gradeNameEN != null and gradeNameEN != ''">
			AND a.gradeNameEN like CONCAT('%', '${gradeNameEN}', '%') 
		</if>
		<if test="weight != null and weight != ''">
			AND a.weight = #{weight}
		</if>
		<if test="status != null and status != ''">
			AND (a.status = #{status} or 0 = #{status})
		</if>
		GROUP BY a.positionGradeId
		<if test="sortColumn != null and sortColumn != '' and sortOrder != null and sortOrder != ''">
			ORDER BY ${sortColumn} ${sortOrder}
		</if>
  	</select>
  	
  	<select id="getPositionGradeVOByPositionGradeId" parameterType="int" resultMap="result">
		SELECT positionGradeId, <include refid="positionGradeColumns"/>  
		FROM HRO_Sec_Position_Grade 
		WHERE positionGradeId = #{value}
  	</select>
  	
  	<insert id="insertPositionGrade" parameterType="positionGrade" useGeneratedKeys="true" keyProperty="positionGradeId">
		INSERT INTO HRO_Sec_Position_Grade(<include refid="positionGradeColumns"/>)
			VALUES(#{accountId},#{corpId}, #{gradeNameZH}, #{gradeNameEN}, #{weight}, #{description}, 1, #{status}, #{remark1}, #{remark2}, #{remark3}, #{remark4}, 
				#{remark5}, #{createBy}, #{createDate}, #{modifyBy}, #{modifyDate}) 
  	</insert>
  	
  	<update id="updatePositionGrade" parameterType="positionGrade">
  	   	UPDATE HRO_Sec_Position_Grade SET  gradeNameZH = #{gradeNameZH}, gradeNameEN = #{gradeNameEN}, weight = #{weight}, 
  	   		description = #{description}, deleted = #{deleted}, status = #{status}, remark1 = #{remark1}, remark2 = #{remark2}, remark3 = #{remark3}, 
  	   		remark4 = #{remark4}, remark5 = #{remark5}, modifyBy = #{modifyBy}, modifyDate = #{modifyDate}
		WHERE positionGradeId = #{positionGradeId} 
  	</update>
  	
  	<delete id="deletePositionGrade" parameterType="int">
		DELETE FROM HRO_Sec_Position_Grade WHERE positionGradeId = #{value}
  	</delete>
  	
  	<select id="getPositionGradeVOsByAccountId" parameterType="int" resultMap="result">
		SELECT positionGradeId, <include refid="positionGradeColumns"/>  
		FROM HRO_Sec_Position_Grade 
		WHERE deleted = 1 AND status = 1 AND accountId = #{value}
		ORDER BY weight desc, positionGradeId
  	</select>
</mapper>