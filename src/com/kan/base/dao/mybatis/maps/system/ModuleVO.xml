<?xml version="1.0" encoding="utf-8" ?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.kan.base.domain.system.ModuleVO">
	
	<resultMap id="moduleBaseView" type="com.kan.base.domain.system.ModuleBaseView">
		<result property="id" column="id" />
		<result property="name" column="name" />
	</resultMap>
	
	<resultMap id="result" type="com.kan.base.domain.system.ModuleVO">
		<result property="moduleId" column="moduleId" />
		<result property="moduleName" column="moduleName" />
		<result property="moduleFlag" column="moduleFlag" />
		<result property="nameZH" column="nameZH" />
		<result property="nameEN" column="nameEN" />
		<result property="titleZH" column="titleZH" />
		<result property="titleEN" column="titleEN" />
		<result property="role" column="role" />
		<result property="property" column="property" />
		<result property="moduleType" column="moduleType" />
		<result property="accessAction" column="accessAction" />
		<result property="defaultAction" column="defaultAction" />
		<result property="listAction" column="listAction" />
		<result property="newAction" column="newAction" />
		<result property="toNewAction" column="toNewAction" />
		<result property="modifyAction" column="modifyAction" />
		<result property="toModifyAction" column="toModifyAction" />
		<result property="deleteAction" column="deleteAction" />
		<result property="deletesAction" column="deletesAction" />
		<result property="parentModuleId" column="parentModuleId" />
		<result property="levelOneModuleName" column="levelOneModuleName" />
		<result property="levelTwoModuleName" column="levelTwoModuleName" />
		<result property="levelThreeModuleName" column="levelThreeModuleName" />
		<result property="description" column="description" />
		<result property="moduleIndex" column="moduleIndex" />
		<result property="rightIds" column="rightIds" />
		<result property="ruleIds" column="ruleIds" />
		<result property="deleted" column="deleted" />
		<result property="status" column="status" />
		<result property="remark1" column="remark1" />
		<result property="remark2" column="remark2" />
		<result property="remark3" column="remark3" />
		<result property="remark4" column="remark4" />
		<result property="remark5" column="remark5" />
		<result property="createBy" column="createBy" />
		<result property="createDate" column="createDate" />
		<result property="modifyBy" column="modifyBy" />
		<result property="modifyDate" column="modifyDate" />
		<!-- For Application -->
		<result property="accountId" column="accountId" />
		<result property="staffId" column="staffId" />
		<result property="clientId" column="clientId" />
	</resultMap>
	
	<select id="getActiveModuleBaseViews" resultType="moduleBaseView">
  		select moduleId as id, CONCAT(titleZH, ' - ', titleEN) as name    
  		from HRO_SYS_Module 
  		where deleted = 1 and status = 1 and (titleZH != '' or titleEN != '')
  		order by name
  	</select>
  	
  	<sql id="moduleColumns"> 
  		moduleName,moduleFlag, nameZH, nameEN, titleZH, titleEN, role, property, moduleType, accessAction, defaultAction, listAction, newAction, toNewAction, modifyAction, 
  		toModifyAction, deleteAction, deletesAction, parentModuleId, levelOneModuleName, levelTwoModuleName, levelThreeModuleName, description, moduleIndex, 
  		rightIds, ruleIds, deleted, status, remark1, remark2, remark3, remark4, remark5, createBy, createDate, modifyBy, modifyDate
	</sql>
	
	<sql id="moduleColumns-for-join"> 
  		a.moduleName,a.moduleFlag, a.nameZH, a.nameEN, a.titleZH, a.titleEN, a.property, a.moduleType, a.accessAction, a.defaultAction, a.listAction, a.newAction, 
  		a.toNewAction, a.modifyAction, a.toModifyAction, a.deleteAction, a.deletesAction, a.parentModuleId, a.levelOneModuleName, a.levelTwoModuleName, 
  		a.levelThreeModuleName, a.description, a.moduleIndex, a.rightIds, a.ruleIds, a.deleted, a.status, a.remark1, a.remark2, a.remark3, a.remark4, 
  		a.remark5, a.createBy, a.createDate, a.modifyBy, a.modifyDate
	</sql>
	
	<select id="countModuleVOsByCondition" parameterType="module" resultType="int">
		select count(0) 
		from HRO_SYS_Module
		where deleted = 1
		<if test="moduleName != null and moduleName != ''">
			AND moduleName like CONCAT('%', '${moduleName}', '%') 
		</if>
		<if test="nameZH != null and nameZH != ''">
			AND nameZH like CONCAT('%', '${nameZH}', '%') 
		</if>
		<if test="nameEN != null and nameEN != ''">
			AND nameEN like CONCAT('%', '${nameEN}', '%') 
		</if>
		<if test="moduleType != null and moduleType != ''">
			AND (moduleType = #{moduleType} or 0 = #{moduleType})
		</if>
		<if test="defaultAction != null and defaultAction != ''">
			AND defaultAction like CONCAT('%', '${defaultAction}', '%')  
		</if>
		<if test="status != null and status != ''">
			AND (status = #{status} or 0 = #{status})
		</if>
  	</select>
  	
	<select id="getModuleVOsByCondition" parameterType="module" resultMap="result">
		select moduleId, <include refid="moduleColumns"/>  
		from HRO_SYS_Module 
		where deleted = 1
		<if test="moduleName != null and moduleName != ''">
			AND moduleName like CONCAT('%', '${moduleName}', '%') 
		</if>
		<if test="nameZH != null and nameZH != ''">
			AND nameZH like CONCAT('%', '${nameZH}', '%') 
		</if>
		<if test="nameEN != null and nameEN != ''">
			AND nameEN like CONCAT('%', '${nameEN}', '%') 
		</if>
		<if test="moduleType != null and moduleType != ''">
			AND (moduleType = #{moduleType} or 0 = #{moduleType})
		</if>
		<if test="defaultAction != null and defaultAction != ''">
			AND defaultAction like CONCAT('%', '${defaultAction}', '%')  
		</if>
		<if test="status != null and status != ''">
			AND (status = #{status} or 0 = #{status})
		</if>
		<if test="sortColumn != null and sortColumn != '' and sortOrder != null and sortOrder != ''">
			order by ${sortColumn} ${sortOrder}
		</if>
  	</select>
  	
  	<select id="getModuleVOsByParentModuleId" parameterType="int" resultMap="result">
		select moduleId, <include refid="moduleColumns"/>  
		from HRO_SYS_Module 
		where deleted = 1 and status = 1 and moduleId != 50 and parentModuleId = #{value}
		order by moduleType, moduleIndex
  	</select>
  	
  	<select id="getModuleVOByModuleId" parameterType="int" resultMap="result">
		select moduleId, <include refid="moduleColumns"/>  
		from HRO_SYS_Module 
		where moduleId = #{value}
  	</select>

	<update id="updateModule" parameterType="module">
		update HRO_SYS_Module set moduleName = #{moduleName}, nameZH = #{nameZH}, nameEN = #{nameEN}, titleZH = #{titleZH}, titleEN = #{titleEN}, 
			role = #{role}, property = #{property}, moduleType = #{moduleType}, accessAction = #{accessAction}, defaultAction = #{defaultAction}, 
			listAction = #{listAction}, newAction = #{newAction}, toNewAction = #{toNewAction}, modifyAction = #{modifyAction}, 
			toModifyAction = #{toModifyAction}, deleteAction = #{deleteAction}, deletesAction = #{deletesAction}, parentModuleId = #{parentModuleId}, 
			levelOneModuleName = #{levelOneModuleName}, levelTwoModuleName = #{levelTwoModuleName}, levelThreeModuleName = #{levelThreeModuleName}, 
			description = #{description}, moduleIndex = #{moduleIndex}, rightIds = #{rightIds}, ruleIds = #{ruleIds}, deleted = #{deleted}, 
			status = #{status}, remark1 = #{remark1}, remark2 = #{remark2}, remark3 = #{remark3}, remark4 = #{remark4}, remark5 = #{remark5}, 
			modifyBy = #{modifyBy}, modifyDate = #{modifyDate},moduleFlag = #{moduleFlag}
		where moduleId = #{moduleId} 
  	</update>
  	
  	<insert id="insertModule" parameterType="module" useGeneratedKeys="true" keyProperty="moduleId">
		insert into HRO_SYS_Module(<include refid="moduleColumns"/>) 
		values(#{moduleName},#{moduleFlag}, #{nameZH}, #{nameEN}, #{titleZH}, #{titleEN}, #{role}, #{property}, #{moduleType}, #{accessAction}, #{defaultAction}, #{listAction}, 
			#{newAction}, #{toNewAction}, #{modifyAction}, #{toModifyAction}, #{deleteAction}, #{deletesAction}, #{parentModuleId}, #{levelOneModuleName}, 
			#{levelTwoModuleName}, #{levelThreeModuleName}, #{description}, #{moduleIndex}, #{rightIds}, #{ruleIds}, 1, #{status}, #{remark1}, #{remark2}, 
			#{remark3}, #{remark4}, #{remark5}, #{createBy}, #{createDate}, #{modifyBy}, #{modifyDate})
  	</insert>
  	
  	<delete id="deleteModule" parameterType="module">
		update HRO_SYS_Module set deleted = 2, modifyBy = #{modifyBy}, modifyDate = #{modifyDate} where moduleId = #{moduleId}
  	</delete>
  	
  	<select id="getModuleVOsByConditionFromAccount" parameterType="module" resultMap="result">
		select distinct a.moduleId, <include refid="moduleColumns-for-join"/>  
		from hro_sys_module a LEFT OUTER JOIN hro_sys_account_module_relation b on a.moduleId = b.moduleId 
					LEFT OUTER JOIN hro_sec_module_right_relation c on b.moduleId = c.moduleId
					LEFT OUTER JOIN hro_sec_module_rule_relation d on b.moduleId = d.moduleId 
		where a.moduleId = #{moduleId} and b.accountId = #{accountId} and (c.accountId = #{accountId} or d.accountId = #{accountId})
	</select>
		
	<select id="getModuleVOsByConditionFromPosition" parameterType="module" resultMap="result">
		SELECT a.moduleId, <include refid="moduleColumns-for-join"/>  	
		FROM hro_sys_module a LEFT OUTER JOIN hro_sys_account_module_relation b ON a.moduleId = b.moduleId 
					LEFT OUTER JOIN hro_sec_position_module_right_relation c ON b.moduleId = c.moduleId
					LEFT OUTER JOIN hro_sec_position_module_rule_relation d ON b.moduleId = d.moduleId 
					LEFT OUTER JOIN hro_sec_position_staff_relation e ON c.positionId = e.positionId
					LEFT OUTER JOIN hro_sec_position_staff_relation f ON d.positionId = f.positionId 
		WHERE a.moduleId = #{moduleId} AND b.accountId = #{accountId} AND (e.staffId = #{staffId} OR f.staffId = #{staffId})
		GROUP BY a.moduleId
	</select>
		
	<select id="getModuleVOsByConditionFromGroup" parameterType="module" resultMap="result">	
		SELECT a.moduleId, <include refid="moduleColumns-for-join"/> 
		FROM hro_sys_module a LEFT OUTER JOIN hro_sys_account_module_relation b ON a.moduleId = b.moduleId 
					LEFT OUTER JOIN hro_sec_group_module_right_relation c ON b.moduleId = c.moduleId
					LEFT OUTER JOIN hro_sec_group_module_rule_relation d ON b.moduleId = d.moduleId 
					LEFT OUTER JOIN hro_sec_position_group_relation e ON c.groupId = e.groupId
					LEFT OUTER JOIN hro_sec_position_group_relation f ON d.groupId = f.groupId 
					LEFT OUTER JOIN hro_sec_position_staff_relation g ON e.positionId = g.positionId
					LEFT OUTER JOIN hro_sec_position_staff_relation h ON h.positionId = f.positionId
		WHERE a.moduleId = #{moduleId} AND b.accountId = #{accountId} AND (g.staffId = #{staffId} OR h.staffId = #{staffId})
		GROUP BY a.moduleId
  	</select>
	
	<select id="getModuleVOsByModuleVO" parameterType="module" resultMap="result">	
<!-- 		SELECT a.moduleId, <include refid="moduleColumns-for-join"/>   -->
<!-- 		FROM hro_sys_module a LEFT OUTER JOIN hro_sys_account_module_relation b ON a.moduleId = b.moduleId  -->
<!-- 					LEFT OUTER JOIN hro_sec_module_right_relation c ON b.moduleId = c.moduleId -->
<!-- 					LEFT OUTER JOIN hro_sec_module_rule_relation d ON b.moduleId = d.moduleId  -->
<!-- 		WHERE a.moduleId = #{moduleId} AND b.accountId = #{accountId} AND (c.accountId = #{accountId} OR d.accountId = #{accountId}) -->
<!-- 		GROUP BY a.moduleId -->
		
<!-- 		union all -->
		
<!-- 		SELECT a.moduleId, <include refid="moduleColumns-for-join"/>  	 -->
<!-- 		FROM hro_sys_module a LEFT OUTER JOIN hro_sys_account_module_relation b ON a.moduleId = b.moduleId  -->
<!-- 					LEFT OUTER JOIN hro_sec_position_module_right_relation c ON b.moduleId = c.moduleId -->
<!-- 					LEFT OUTER JOIN hro_sec_position_module_rule_relation d ON b.moduleId = d.moduleId  -->
<!-- 					LEFT OUTER JOIN hro_sec_position_staff_relation e ON c.positionId = e.positionId -->
<!-- 					LEFT OUTER JOIN hro_sec_position_staff_relation f ON d.positionId = f.positionId  -->
<!-- 		WHERE a.moduleId = #{moduleId} AND b.accountId = #{accountId} AND (e.staffId = #{staffId} OR f.staffId = #{staffId}) -->
<!-- 		GROUP BY a.moduleId -->
		
<!-- 		union all -->
		
<!-- 		SELECT a.moduleId, <include refid="moduleColumns-for-join"/>  -->
<!-- 		FROM hro_sys_module a LEFT OUTER JOIN hro_sys_account_module_relation b on a.moduleId = b.moduleId  -->
<!-- 					LEFT OUTER JOIN hro_sec_group_module_right_relation c ON b.moduleId = c.moduleId -->
<!-- 					LEFT OUTER JOIN hro_sec_group_module_rule_relation d ON b.moduleId = d.moduleId  -->
<!-- 					LEFT OUTER JOIN hro_sec_position_group_relation e ON c.groupId = e.groupId -->
<!-- 					LEFT OUTER JOIN hro_sec_position_group_relation f ON d.groupId = f.groupId  -->
<!-- 					LEFT OUTER JOIN hro_sec_position_staff_relation g ON e.positionId = g.positionId -->
<!-- 					LEFT OUTER JOIN hro_sec_position_staff_relation h ON h.positionId = f.positionId -->
<!-- 		WHERE a.moduleId = #{moduleId} AND b.accountId = #{accountId} AND (g.staffId = #{staffId} OR h.staffId = #{staffId}) -->
<!-- 		GROUP BY a.moduleId -->
<!-- 优化 性能 -->
		SELECT a.moduleId, <include refid="moduleColumns-for-join"/>
		FROM hro_sys_module a 
		WHERE 1=1 
		<if test="moduleId != null and moduleId != '' ">
		AND  a.moduleId =#{moduleId}
		</if>
		<if test="role != null and role != '' ">
		AND  (a.role = #{role} or a.role = 0)
		</if>
		AND EXISTS (
		          SELECT 1 FROM hro_sys_account_module_relation b 
						   WHERE  a.moduleId = b.moduleId AND b.accountId = #{accountId}
									)
		AND ( EXISTS ( SELECT 1 FROM hro_sec_module_right_relation c
								WHERE c.moduleId = a.moduleId
								AND c.accountId = #{accountId} )
			 OR EXISTS ( SELECT 1 FROM hro_sec_module_rule_relation c
								  WHERE c.moduleId = a.moduleId
								  AND c.accountId = #{accountId} )
			 OR EXISTS ( SELECT 1 FROM hro_sec_position_module_right_relation c
								 JOIN hro_sec_position_staff_relation d ON c.positionId = d.positionId
								 WHERE c.moduleId = a.moduleId
								 AND d.staffId = #{staffId} )
			 OR EXISTS ( SELECT 1 FROM hro_sec_position_module_rule_relation c
								  JOIN hro_sec_position_staff_relation d ON c.positionId = d.positionId
								  WHERE c.moduleId = a.moduleId
								  AND  d.staffId = #{staffId} )
			 OR EXISTS ( SELECT 1 FROM hro_sec_group_module_right_relation d 
									JOIN hro_sec_position_group_relation e ON d.groupId = e.groupId
									JOIN hro_sec_position_staff_relation f ON e.positionId = f.positionId
									WHERE  a.moduleId = d.moduleId AND f.staffId = #{staffId} )
			 OR EXISTS ( SELECT 1 FROM hro_sec_group_module_rule_relation d 
									JOIN hro_sec_position_group_relation e ON d.groupId = e.groupId
									JOIN hro_sec_position_staff_relation f ON e.positionId = f.positionId
									WHERE  a.moduleId = d.moduleId AND f.staffId = #{staffId} )
					)
  	</select>
  	
  	<select id="getClientModuleVOsByParentModuleId" parameterType="int" resultMap="result">
		select moduleId, <include refid="moduleColumns"/>  
		from HRO_SYS_Module 
		where deleted = 1 and status = 1 and moduleId != 50 and parentModuleId = #{value} and remark3 = '{C}'
		order by moduleType, moduleIndex
  	</select>
  	
  	<select id="getEmployeeModuleVOsByParentModuleId" parameterType="int" resultMap="result">
		select 
			moduleId,
			moduleName,
			moduleFlag,
			nameZH,
			nameEN,
			titleZH,
			titleEN,
			role,
			property,
			moduleType,
			accessAction,
			defaultAction,
			listAction,
			newAction,
			toNewAction,
			modifyAction,
			toModifyAction,
			deleteAction,
			deletesAction,
			'0' as parentModuleId,
			levelOneModuleName,
			levelTwoModuleName,
			levelThreeModuleName,
			description,
			moduleIndex,
			rightIds,
			ruleIds,
			deleted,
			STATUS,
			remark1,
			remark2,
			remark3,
			remark4,
			remark5,
			createBy,
			createDate,
			modifyBy,
			modifyDate
		FROM
			HRO_SYS_Module
		WHERE
			deleted = 1
		AND STATUS = 1
		AND moduleId != 50
		AND moduleId IN (451, 453, 502, 501, 556,720)
		AND 0 = #{value} 
		order by moduleType, moduleIndex
  	</select>
  	
  	<select id="getClientModuleVOs" parameterType="int" resultMap="result">
		SELECT
			moduleId,
			accountId,
			clientId
		FROM
			hro_sys_account_client_module_relation
		WHERE accountId = #{accountId}
		AND role = #{roleId}
		<if test="clientId != null and clientId != '' ">
			AND clientId = #{clientId} OR (accountId = #{accountId} AND role = #{roleId} AND clientId IS NULL)
		</if>
		<if test="clientId == null">
			AND clientId IS NULL
		</if>
  	</select>
  	
	<insert id="insertClientModule" parameterType="module" useGeneratedKeys="true" keyProperty="moduleId">
		INSERT INTO hro_sys_account_client_module_relation (
			accountId,
			moduleId,
			role,
		<if test="clientId != null and clientId != '' ">
			clientId,
		</if>
			deleted,
			STATUS,
			createBy,
			createDate
		)
		VALUES
		(
			#{accountId}, 
			#{moduleId}, 
			#{menuRole}, 
		<if test="clientId != null and clientId != '' ">
			#{clientId}, 
		</if>
			1, 
			1, 
			#{createBy}, 
			#{createDate}
		)
  	</insert>
  	
  	<delete id="deleteClientModule" parameterType="module">
  		DELETE
		FROM
			hro_sys_account_client_module_relation
		WHERE
			accountId = #{accountId}
		AND role = #{menuRole}
		AND clientId IS NULL
		<if test="moduleIdArray != null">
			OR (accountId = #{accountId} AND role = #{menuRole} AND moduleId IN 
			<foreach collection="moduleIdArray" item="moduleId"  open="(" separator="," close=")">  
        		#{moduleId}
     		</foreach>)
		</if>
  	</delete>
  	
  	<delete id="deleteClientModuleByClient" parameterType="module">
  		DELETE
		FROM
			hro_sys_account_client_module_relation
		WHERE
			accountId = #{accountId}
		AND role = #{menuRole}
		AND clientId =#{clientId}
  	</delete>
</mapper>