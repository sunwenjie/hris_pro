<?xml version="1.0" encoding="utf-8" ?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.kan.base.domain.management.PositionGradeVO">

  <resultMap id="result" type="com.kan.base.domain.management.PositionGradeVO">
    <result property="positionGradeId" column="positionGradeId" />
    <result property="accountId" column="accountId" />
    <result property="corpId" column="corpId" />
    <result property="gradeNameZH" column="gradeNameZH" />
    <result property="gradeNameEN" column="gradeNameEN" />
    <result property="weight" column="weight" />
    <result property="description" column="description" />
    <result property="deleted" column="deleted" />
    <result property="status" column="status" />
    <result property="remark1" column="remark1" />
    <result property="remark2" column="remark2" />
    <result property="remark3" column="remark3" />
    <result property="remark4" column="remark4" />
    <result property="remark5" column="remark5" />
    <result property="createBy" column="createBy" />
    <result property="createDate" column="createDate" /> 
    <result property="modifyBy" column="modifyBy" />
    <result property="modifyDate" column="modifyDate" />
    
  </resultMap>
  
  <sql id="positionGradeColumns">
     accountId,corpId,gradeNameZH, gradeNameEN,weight, description, deleted, status, remark1, remark2, remark3, remark4, remark5, createBy, createDate, modifyBy, modifyDate
  </sql>
  
  <sql id="positionGradeColumns-for-join">
     g.accountId,g.corpId,g.gradeNameZH, g.gradeNameEN,g.weight, g.description, g.deleted, g.status, g.remark1, g.remark2, g.remark3, 
     g.remark4, g.remark5, g.createBy, g.createDate, g.modifyBy, g.modifyDate
  </sql>
  
  <select id="countMgtPositionGradeVOByCondition" parameterType="positionGrade" resultType="int">
    select count(*) 
    from  HRO_MGT_Position_Grade
    where deleted=1 AND accountId = #{accountId}
    <if test="corpId != null and corpId != ''">
			AND (corpId = #{corpId} or 0 = #{corpId})
	</if>
	<if test="corpId == null or corpId =='' ">
   			AND corpId IS NULL
  	</if>
    <if test="gradeNameZH != null and gradeNameZH != ''">
			AND gradeNameZH like CONCAT('%', '${gradeNameZH}', '%') 
	</if>
    <if test="gradeNameEN != null and gradeNameEN != ''">
			AND gradeNameEN like CONCAT('%', '${gradeNameEN}', '%') 
	</if>
	<if test="weight != null and weight != ''">
			AND ( weight=#{weight} or weight=0 ) 
	</if>
	<if test="description != null and description != ''">
			AND description like CONCAT('%', '${description}', '%') 
	</if>
	<if test="status != null and status != ''">
			AND (status = #{status} or 0 = #{status})
	</if>
	<if test="sortColumn != null and sortColumn != '' and sortOrder != null and sortOrder != ''">
			order by ${sortColumn} ${sortOrder}
	</if>
  </select>
  
  <select id="getMgtPositionGradeVOByCondition" parameterType="positionGrade" resultMap="result">
		SELECT g.positionGradeId, <include refid="positionGradeColumns-for-join"/>,  
		CASE WHEN COUNT(p.positionId) !=0 THEN 1 ELSE 2 END AS extended 
		FROM HRO_MGT_Position_Grade g LEFT JOIN hro_mgt_position p ON p.positionGradeId = g.positionGradeId AND p.deleted = 1
		WHERE g.deleted = 1 AND g.accountId = #{accountId}
		 <if test="corpId != null and corpId != ''">
			AND (g.corpId = #{corpId} or 0 = #{corpId})
		</if>
		<if test="corpId == null or corpId =='' ">
   			AND g.corpId IS NULL
  		</if>
		<if test="gradeNameZH != null and gradeNameZH != ''">
			AND g.gradeNameZH like CONCAT('%', '${gradeNameZH}', '%') 
		</if>
		<if test="gradeNameEN != null and gradeNameEN != ''">
			AND g.gradeNameEN like CONCAT('%', '${gradeNameEN}', '%') 
		</if>
		<if test="weight != null and weight != ''">
			AND ( g.weight=#{weight} or 0 = #{weight} ) 
		</if>
		<if test="description != null and description != ''">
			AND g.description like CONCAT('%', '${description}', '%') 
		</if>
		<if test="status != null and status != ''">
			AND (g.status = #{status} or 0 = #{status})
		</if>
		group by g.positionGradeId
		<if test="sortColumn != null and sortColumn != '' and sortOrder != null and sortOrder != ''">
			order by ${sortColumn} ${sortOrder}
		</if>
  	</select>
  	
  	<select id="getMgtPositionGradeVOByPositionGradeId" parameterType="int" resultMap="result">
		select positionGradeId, <include refid="positionGradeColumns"/>  
		from HRO_MGT_Position_Grade 
		where positionGradeId = #{value}
  	</select>
  	
  	<insert id="insertMgtPositionGrade" parameterType="positionGrade" useGeneratedKeys="true" keyProperty="positionGradeId">
		insert into HRO_MGT_Position_Grade(<include refid="positionGradeColumns"/>)
		values(#{accountId},#{corpId},#{gradeNameZH}, #{gradeNameEN}, #{weight}, #{description}, 1, #{status}, #{remark1}, #{remark2}, #{remark3}, #{remark4}, #{remark5}, #{createBy}, #{createDate}, #{modifyBy}, #{modifyDate}) 
  	</insert>
  	
  	<delete id="deleteMgtPositionGrade" parameterType="int">
		delete from HRO_MGT_Position_Grade where positionGradeId = #{value}
  	</delete>
  	
  	<update id="updateMgtPositionGrade" parameterType="positionGrade">
  	   update HRO_MGT_Position_Grade set accountId= #{accountId},corpId = #{corpId}, gradeNameZH = #{gradeNameZH}, gradeNameEN = #{gradeNameEN}, weight=#{weight}, description = #{description}, 
			deleted = #{deleted}, status = #{status}, remark1 = #{remark1}, remark2 = #{remark2}, remark3 = #{remark3}, remark4 = #{remark4}, 
			remark5 = #{remark5}, modifyBy = #{modifyBy}, modifyDate = #{modifyDate}
		where positionGradeId = #{positionGradeId} 
  	</update>
  	
  	<select id="getMgtPositionGradeVOsByAccountId" parameterType="int" resultMap="result">
		select positionGradeId, <include refid="positionGradeColumns"/>  
		from HRO_MGT_Position_Grade 
		where deleted = 1 AND status = 1 AND accountId = #{value}
		order by weight desc, positionGradeId
  	</select>
</mapper>