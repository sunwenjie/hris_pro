<?xml version="1.0" encoding="utf-8" ?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.kan.base.domain.management.SickLeaveSalaryHeaderVO">

	<resultMap id="result" type="com.kan.base.domain.management.SickLeaveSalaryHeaderVO" >
		<result property="headerId" column="headerId"/>
		<result property="accountId" column="accountId"/>
		<result property="corpId" column="corpId"/>
		<result property="nameZH" column="nameZH"/>
		<result property="nameEN" column="nameEN"/>
		<result property="itemId" column="itemId"/>
		<result property="baseOn" column="baseOn"/>
		<result property="description" column="description"/>
		<result property="deleted" column="deleted"/>
		<result property="status" column="status"/>
		<result property="remark1" column="remark1"/>
		<result property="remark2" column="remark2"/>
		<result property="remark3" column="remark3"/>
		<result property="remark4" column="remark4"/>
		<result property="remark5" column="remark5"/>
		<result property="createBy" column="createBy" />
		<result property="createDate" column="createDate" />
		<result property="modifyBy" column="modifyBy" />
		<result property="modifyDate" column="modifyDate" />
		<!-- For Application -->
		<result property="extended" column="extended" />
	</resultMap>
	
	<sql id="SickLeaveSalaryHeaderColumns">
		accountId, corpId, nameZH, nameEN, itemId, baseOn,description, deleted, status, remark1, remark2, remark3, remark4, remark5, createBy, createDate, modifyBy, modifyDate
	</sql>  	 	
	
	<sql id="SickLeaveSalaryHeaderColumns-for-join">
		a.accountId, a.corpId, a.nameZH, a.nameEN, a.itemId, a.baseOn, a.description, a.deleted, a.status, a.remark1, a.remark2, a.remark3, a.remark4,a.remark5, a.createBy, a.createDate, 
		a.modifyBy, a.modifyDate
	</sql>  	
	
	<select id="countSickLeaveSalaryHeaderVOsByCondition" parameterType="SickLeaveSalaryHeader" resultType="int">
		select count(1) 
		from hro_mgt_sick_leave_salary_header
		where deleted = 1 AND ( accountId = #{accountId} OR 1 = accountId )
		<if test="corpId != null and corpId != ''">
			AND (corpId = #{corpId} or 1 = accountId)
		</if>
		<if test="corpId == null or corpId == ''">
			AND corpId IS NULL
		</if>
		<if test="corpId == null or corpId == ''">
			AND corpId IS NULL
		</if>
		<if test="nameZH != null and nameZH != ''">
			AND nameZH like CONCAT('%', '${nameZH}', '%') 
		</if>
		<if test="nameEN != null and nameEN != ''">
			AND nameEN like CONCAT('%', '${nameEN}', '%') 
		</if>
		<if test="status != null and status != ''">
			AND (status = #{status} or 0 = #{status})
		</if>
  	</select>

	<select id="getSickLeaveSalaryHeaderVOsByCondition" parameterType="SickLeaveSalaryHeader" resultMap="result">
		SELECT a.headerId, <include refid="SickLeaveSalaryHeaderColumns-for-join" />,
			CASE WHEN ISNULL( b.sickLeaveSalaryId ) THEN 2 ELSE 1 END as extended
		FROM hro_mgt_sick_leave_salary_header a LEFT JOIN 
			(
				SELECT sickLeaveSalaryId FROM hro_biz_employee_contract
				WHERE deleted = 1 AND accountId = #{accountId}
				GROUP BY sickLeaveSalaryId
				
				UNION ALL
				
				SELECT sickLeaveSalaryId FROM hro_biz_client_order_header
				WHERE deleted = 1 AND accountId = #{accountId}
				GROUP BY sickLeaveSalaryId
			) b ON a.headerId = b.sickLeaveSalaryId
		WHERE a.deleted = 1 AND ( a.accountId = #{accountId} OR 1 = a.accountId )		
		<if test="corpId != null and corpId != ''">
			AND a.corpId = #{corpId} 
		</if>
		<if test="corpId == null or corpId == ''">
			AND a.corpId IS NULL
		</if>
		<if test="nameZH != null and nameZH != ''">
			AND a.nameZH like CONCAT('%', '${nameZH}', '%') 
		</if>
		<if test="nameEN != null and nameEN != ''">
			AND a.nameEN like CONCAT('%', '${nameEN}', '%') 
		</if>
		<if test="itemId != null and itemId != ''">
			AND (a.itemId = #{itemId} or 0 = #{itemId})
		</if>
		<if test="baseOn != null and baseOn != ''">
			AND (a.baseOn = #{baseOn} or 0 = #{baseOn})
		</if>
		<if test="status != null and status != ''">
			AND (a.status = #{status} or 0 = #{status})
		</if>
		GROUP BY a.headerId
		<if test="sortColumn != null and sortColumn != '' and sortOrder != null and sortOrder != ''">
			order by ${sortColumn} ${sortOrder}
		</if>			
  	</select>
  	
  	<select id="getSickLeaveSalaryHeaderVOByHeaderId" parameterType="int" resultMap="result">
  		SELECT headerId, <include refid="SickLeaveSalaryHeaderColumns"/>
  		FROM hro_mgt_sick_leave_salary_header
  		WHERE headerId = #{value}
  	</select>
  	
  	<select id="getSickLeaveSalaryHeaderVOsByAccountId" parameterType="int" resultMap="result">
  		SELECT headerId, <include refid="SickLeaveSalaryHeaderColumns"/>
  		FROM hro_mgt_sick_leave_salary_header
  		WHERE deleted = 1 AND status = 1 AND accountId = #{value}
  	</select>
  	
  	<insert id="insertSickLeaveSalaryHeader" parameterType="SickLeaveSalaryHeader" useGeneratedKeys="true" keyProperty="headerId">
  		insert into hro_mgt_sick_leave_salary_header (<include refid="SickLeaveSalaryHeaderColumns"/>)		
  		values(#{accountId}, #{corpId}, #{nameZH}, #{nameEN}, #{itemId}, #{baseOn}, #{description}, 1,#{status}, #{remark1}, #{remark2}, #{remark3}, #{remark4}, #{remark5}, #{createBy}, #{createDate}, #{modifyBy}, #{modifyDate}) 	
  	</insert>
  	
  	<update id="updateSickLeaveSalaryHeader" parameterType="SickLeaveSalaryHeader">  							
  		update hro_mgt_sick_leave_salary_header set nameZH = #{nameZH}, nameEN = #{nameEN}, itemId = #{itemId}, baseOn = #{baseOn},
  			description = #{description}, deleted = #{deleted}, status = #{status}, remark1 = #{remark1}, remark2 = #{remark2}, 
  			createBy = #{createBy}, createDate = #{createDate}, modifyBy = #{modifyBy}, modifyDate = #{modifyDate}
  		where headerId = #{headerId}  		
  	</update>  	
  	
  	<delete id="deleteSickLeaveSalaryHeader" parameterType="int">
  		delete from hro_mgt_sick_leave_salary_header where headerId = #{value} 
  	</delete>
  	
</mapper>	