<?xml version="1.0" encoding="utf-8" ?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.kan.base.domain.management.ItemVO">
	
	<resultMap id="itemBaseView" type="com.kan.base.domain.management.ItemBaseView" >
		<result property="id" column="id" />
		<result property="accountId" column="accountId" />
		<result property="name" column="name" />
	</resultMap>
	
	<select id="getItemBaseViewsByAccountId" parameterType="int" resultMap="itemBaseView">
		select itemId as id, CONCAT(nameZH , ' - ', nameEN) as name, accountId
  		from HRO_MGT_Item
  		where deleted = 1 and accountId = ${value}
  		order by name
	</select>

	<resultMap id="result" type="com.kan.base.domain.management.ItemVO" >
		<result property="itemId" column="itemId"/>
		<result property="accountId" column="accountId"/>
		<result property="corpId" column="corpId"/>
		<result property="itemNo" column="itemNo"/>
		<result property="nameZH" column="nameZH"/>
		<result property="nameEN" column="nameEN"/>
		<result property="itemCap" column="itemCap"/>
		<result property="itemFloor" column="itemFloor"/>
		<result property="sequence" column="sequence"/>
		<result property="personalTax" column="personalTax"/>
		<result property="companyTax" column="companyTax"/>
		<result property="calculateType" column="calculateType"/>
		<result property="itemType" column="itemType"/>
		<result property="billRatePersonal" column="billRatePersonal"/>
		<result property="billRateCompany" column="billRateCompany"/>
		<result property="costRatePersonal" column="costRatePersonal"/>
		<result property="costRateCompany" column="costRateCompany"/>
		<result property="billFixPersonal" column="billFixPersonal"/>
		<result property="billFixCompany" column="billFixCompany"/>
		<result property="costFixPersonal" column="costFixPersonal"/>
		<result property="costFixCompany" column="costFixCompany"/>
		<result property="personalTaxAgent" column="personalTaxAgent"/>
		<result property="description" column="description"/>
		<result property="deleted" column="deleted"/>
		<result property="status" column="status"/>
		<result property="remark1" column="remark1"/>
		<result property="remark2" column="remark2"/>
		<result property="remark3" column="remark3"/>
		<result property="remark4" column="remark4"/>
		<result property="remark5" column="remark5"/>
		<result property="createBy" column="createBy" />
		<result property="createDate" column="createDate" />
		<result property="modifyBy" column="modifyBy" />
		<result property="modifyDate" column="modifyDate" />
		<result property="extended" column="extended" />
	</resultMap>
	
	<sql id="itemColumns">
		accountId, corpId, itemNo, nameZH, nameEN, itemCap, itemFloor, sequence, personalTax, companyTax, calculateType, itemType, billRatePersonal, 
		billRateCompany, costRatePersonal, costRateCompany, billFixPersonal, billFixCompany, costFixPersonal, costFixCompany, personalTaxAgent,
		description, deleted, status, remark1, remark2, remark3, remark4, remark5, createBy, createDate, modifyBy, modifyDate
	</sql>  	
	
	<sql id="itemColumns-for-join">
		a.accountId, a.corpId, a.itemNo, a.nameZH, a.nameEN, a.itemCap, a.itemFloor, a.sequence, a.personalTax, a.companyTax, a.calculateType, a.itemType, a.billRatePersonal, 
		a.billRateCompany, a.costRatePersonal, a.costRateCompany, a.billFixPersonal, a.billFixCompany, a.costFixPersonal, a.costFixCompany, a.personalTaxAgent,
		a.description, a.deleted, a.status, a.remark1, a.remark2, a.remark3, a.remark4, a.remark5, a.createBy, a.createDate, a.modifyBy, a.modifyDate
	</sql>  	
	
	<select id="countItemVOsByCondition" parameterType="item" resultType="int">
		select count(1) 
		from HRO_MGT_Item a
		where deleted = 1 AND (accountId = 1 OR (accountId = #{accountId}
		<if test="corpId != null and corpId != ''">
			AND (a.corpId = #{corpId} or 0 = #{corpId})
		</if>
		))
		<if test="nameZH != null and nameZH != ''">
			AND a.nameZH like CONCAT('%', '${nameZH}', '%') 
		</if>
		<if test="nameEN != null and nameEN != ''">
			AND a.nameEN like CONCAT('%', '${nameEN}', '%') 
		</if>
		<if test="itemType != null and itemType != ''">
			AND (a.itemType = #{itemType} or 0 = #{itemType})
		</if>
		<if test="status != null and status != ''">
			AND (a.status = #{status} or 0 = #{status})
		</if>
		<if test="sortColumn != null and sortColumn != '' and sortOrder != null and sortOrder != ''">
			order by ${sortColumn} ${sortOrder}
		</if>	
  	</select>

	<select id="getItemVOsByCondition" parameterType="item" resultMap="result">
		SELECT DISTINCT(a.itemId), <include refid="itemColumns-for-join"/>,
			  CASE WHEN (ISNULL(b.itemId)) THEN 2 ELSE 1 END `extended`  
		FROM HRO_MGT_Item a LEFT JOIN 
		(
			SELECT itemId FROM hro_biz_employee_contract_leave
			WHERE deleted = 1
			GROUP BY itemId
			
			UNION ALL
			
			SELECT itemId FROM hro_biz_employee_contract_ot
			WHERE deleted = 1
			GROUP BY itemId
				
			UNION ALL
			
			SELECT itemId FROM hro_biz_employee_contract_other
			WHERE deleted = 1
			GROUP BY itemId
			
			UNION ALL
			
			SELECT itemId FROM hro_biz_employee_contract_salary
			WHERE deleted = 1
			GROUP BY itemId
			
			UNION ALL
			
			SELECT itemId FROM hro_biz_client_order_leave
			WHERE deleted = 1
			GROUP BY itemId
			
			UNION ALL
			
			SELECT itemId FROM hro_biz_client_order_detail
			WHERE deleted = 1
			GROUP BY itemId
			
			UNION ALL
			
			SELECT itemId FROM hro_biz_client_order_ot
			WHERE deleted = 1
			GROUP BY itemId
			
			UNION ALL
			
			SELECT itemId FROM hro_biz_client_order_other
			WHERE deleted = 1
			GROUP BY itemId
		) b ON a.itemId = b.itemId	  	
		WHERE a.deleted = 1 AND (a.accountId = 1 OR (a.accountId = #{accountId}
		<if test="corpId != null and corpId != ''">
			AND (a.corpId = #{corpId} or 0 = #{corpId})
		</if>
		))
		<if test="nameZH != null and nameZH != ''">
			AND a.nameZH like CONCAT('%', '${nameZH}', '%') 
		</if>
		<if test="nameEN != null and nameEN != ''">
			AND a.nameEN like CONCAT('%', '${nameEN}', '%') 
		</if>
		<if test="itemType != null and itemType != ''">
			AND (a.itemType = #{itemType} or 0 = #{itemType})
		</if>
		<if test="status != null and status != ''">
			AND (a.status = #{status} or 0 = #{status})
		</if>
		<if test="sortColumn != null and sortColumn != '' and sortOrder != null and sortOrder != ''">
			order by ${sortColumn} ${sortOrder}
		</if>			
  	</select>
  	
  	<select id="getItemVOByItemId" parameterType="int" resultMap="result">
  		select itemId, <include refid="itemColumns"/>
  		from HRO_MGT_Item
  		where itemId = #{value}
  	</select>
  	
  	<insert id="insertItem" parameterType="item" useGeneratedKeys="true" keyProperty="itemId">
  		insert into HRO_MGT_Item(<include refid="itemColumns"/>)		
  		values(#{accountId}, #{corpId}, #{itemNo}, #{nameZH}, #{nameEN}, #{itemCap}, #{itemFloor}, #{sequence}, #{personalTax}, #{companyTax}, #{calculateType}, 
  			#{itemType}, #{billRatePersonal}, #{billRateCompany}, #{costRatePersonal}, #{costRateCompany}, #{billFixPersonal}, #{billFixCompany},
	   		#{costFixPersonal}, #{costFixCompany}, #{personalTaxAgent}, #{description}, 1, #{status}, #{remark1}, #{remark2}, #{remark3}, #{remark4}, 
	   		#{remark5}, #{createBy}, #{createDate}, #{modifyBy}, #{modifyDate})
  	</insert>
  	
  	<update id="updateItem" parameterType="item">  							
  		update HRO_MGT_Item set itemNo = #{itemNo}, nameZH = #{nameZH}, nameEN = #{nameEN}, itemCap = #{itemCap}, itemFloor = #{itemFloor}, 
  			sequence = #{sequence}, personalTax = #{personalTax}, companyTax = #{companyTax}, calculateType = #{calculateType}, itemType = #{itemType}, 
  			billRatePersonal = #{billRatePersonal}, billRateCompany = #{billRateCompany}, costRatePersonal = #{costRatePersonal}, 
  			costRateCompany = #{costRateCompany}, billFixPersonal = #{billFixPersonal}, billFixCompany = #{billFixCompany}, 
  			costFixPersonal = #{costFixPersonal}, costFixCompany = #{costFixCompany},personalTaxAgent = #{personalTaxAgent}, 
  			description = #{description}, deleted = #{deleted}, status = #{status}, remark1 = #{remark1}, remark2 = #{remark2}, remark3 = #{remark3}, 
  			remark4 = #{remark4}, remark5 = #{remark5}, createBy = #{createBy}, createDate = #{createDate}, modifyBy = #{modifyBy}, 
  			modifyDate = #{modifyDate}
  		where itemId = #{itemId}  		
  	</update>  	
  	
  	<delete id="deleteItem" parameterType="int">
  		delete from HRO_MGT_Item where itemId = #{value} 
  	</delete>
  	
  	<select id="getItemVOsByAccountId" parameterType="int" resultMap="result">
  		select itemId, <include refid="itemColumns"/>
  		from HRO_MGT_Item
  		where deleted = 1 AND status = 1 AND accountId = #{value}
  	</select>
</mapper>