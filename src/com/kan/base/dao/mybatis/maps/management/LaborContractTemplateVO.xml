<?xml version="1.0" encoding="utf-8" ?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.kan.base.domain.management.LaborContractTemplateVO">

	<resultMap id="result" type="com.kan.base.domain.management.LaborContractTemplateVO" >
		<result property="templateId" column="templateId"/>
		<result property="accountId" column="accountId"/>
		<result property="corpId" column="corpId"/>
		<result property="contractTypeId" column="contractTypeId"/>
		<result property="nameZH" column="nameZH"/>
		<result property="nameEN" column="nameEN"/>
		<result property="entityIds" column="entityIds"/>
		<result property="businessTypeIds" column="businessTypeIds"/>
		<result property="content" column="content"/>
		<result property="contentType" column="contentType"/>
		<result property="description" column="description"/>
		<result property="deleted" column="deleted"/>
		<result property="status" column="status"/>
		<result property="remark1" column="remark1"/>
		<result property="remark2" column="remark2"/>
		<result property="createBy" column="createBy" />
		<result property="createDate" column="createDate" />
		<result property="modifyBy" column="modifyBy" />
		<result property="modifyDate" column="modifyDate" />
		<result property="clientIds" column="clientIds"/>
		<!-- For App -->
		<result property="extended" column="extended" />
	</resultMap>
	
	<sql id="laborContractTemplateColumns">
		accountId,corpId, contractTypeId, entityIds, nameZH, nameEN, businessTypeIds, content, contentType, description, deleted, status, remark1, remark2, createBy, createDate, modifyBy, modifyDate,clientIds 
	</sql>
	  	 	
	<sql id="laborContractTemplateColumns-for-join">
		t.accountId,t.corpId, t.contractTypeId, t.entityIds,t.clientIds, t.nameZH, t.nameEN, t.businessTypeIds, t.content, t.contentType, t.description, 
		t.deleted, t.status, t.remark1, t.remark2, t.createBy, t.createDate, t.modifyBy, t.modifyDate
	</sql>  	 	
	
	<select id="countLaborContractTemplateVOsByCondition" parameterType="laborContractTemplate" resultType="int">
		select count(0) 
		from HRO_MGT_LABOR_CONTRACT_TEMPLATE t
		where t.deleted = 1 AND t.accountId= #{accountId}
		<if test="corpId != null and corpId !='' ">
			AND (t.corpId = #{corpId} or 0 = #{corpId} )
		</if>
		<if test="corpId == null or corpId =='' ">
			AND t.corpId IS NULL
		</if>
		<if test="nameZH != null and nameZH != ''">
			AND t.nameZH like CONCAT('%', '${nameZH}', '%') 
		</if>
		<if test="nameEN != null and nameEN != ''">
			AND t.nameEN like CONCAT('%', '${nameEN}', '%') 
		</if>
		<if test="entityId != null and entityId != '' and entityId != 0">
			AND (t.entityIds like CONCAT('%{', '${entityId}:', '%') OR t.entityIds like CONCAT('%', ':${entityId}:', "%") OR t.entityIds like CONCAT('%', ':${entityId}}', '%') OR t.entityIds = '{${entityId}}')
		</if>
		<if test="businessTypeId != null and businessTypeId != '' and businessTypeId != 0">
			AND (t.businessTypeIds like CONCAT('%{', '${businessTypeId}:', '%') OR t.businessTypeIds like CONCAT('%', ':${businessTypeId}:', "%") OR t.businessTypeIds like CONCAT('%', ':${businessTypeId}}', '%') OR t.businessTypeIds = '{${businessTypeId}}')
		</if>
		<if test="status != null and status != ''">
			AND (t.status = #{status} or 0 = #{status})
		</if>
		<if test="contractTypeId != null and contractTypeId != '' and contractTypeId != 0">
			AND (t.contractTypeId = #{contractTypeId} or 0 = #{contractTypeId})
		</if>
  	</select>

	<select id="getLaborContractTemplateVOsByCondition" parameterType="laborContractTemplate" resultMap="result">
		select CASE WHEN COUNT(c.contractId) != 0 THEN 1 ELSE 2 END AS extended,
		t.templateId, <include refid="laborContractTemplateColumns-for-join"/>  
		from HRO_MGT_LABOR_CONTRACT_TEMPLATE t LEFT JOIN hro_biz_employee_contract c on c.templateId = t.templateId and c.deleted = 1
		where t.deleted = 1 AND t.accountId= #{accountId}
		<if test="corpId != null and corpId !='' ">
			AND (t.corpId = #{corpId} or 0 = #{corpId} )
		</if>
		<if test="corpId == null or corpId =='' ">
			AND t.corpId IS NULL
		</if>
		<if test="nameZH != null and nameZH != ''">
			AND t.nameZH like CONCAT('%', '${nameZH}', '%') 
		</if>
		<if test="nameEN != null and nameEN != ''">
			AND t.nameEN like CONCAT('%', '${nameEN}', '%') 
		</if>
		<if test="entityId != null and entityId != '' and entityId != 0">
			AND (t.entityIds like CONCAT('%{', '${entityId}:', '%') OR t.entityIds like CONCAT('%', ':${entityId}:', "%") OR t.entityIds like CONCAT('%', ':${entityId}}', '%') OR t.entityIds = '{${entityId}}')
		</if>
		<if test="businessTypeId != null and businessTypeId != '' and businessTypeId != 0">
			AND (t.businessTypeIds like CONCAT('%{', '${businessTypeId}:', '%') OR t.businessTypeIds like CONCAT('%', ':${businessTypeId}:', "%") OR t.businessTypeIds like CONCAT('%', ':${businessTypeId}}', '%') OR t.businessTypeIds = '{${businessTypeId}}')
		</if>
		<if test="status != null and status != ''">
			AND (t.status = #{status} or 0 = #{status})
		</if>
		<if test="contractTypeId != null and contractTypeId != '' and contractTypeId != 0">
			AND (t.contractTypeId = #{contractTypeId} or 0 = #{contractTypeId})
		</if>
		GROUP BY t.templateId
		<if test="sortColumn != null and sortColumn != '' and sortOrder != null and sortOrder != ''">
			order by ${sortColumn} ${sortOrder}
		</if>			
  	</select>
  	
  	<select id="getLaborContractTemplateVOByLaborContractTemplateId" parameterType="int" resultMap="result">
  		select templateId, <include refid="laborContractTemplateColumns"/>
  		from HRO_MGT_LABOR_CONTRACT_TEMPLATE
  		where templateId = #{value}
  	</select>
  	
  	<insert id="insertLaborContractTemplate" parameterType="laborContractTemplate" useGeneratedKeys="true" keyProperty="templateId">
  		insert into HRO_MGT_LABOR_CONTRACT_TEMPLATE(<include refid="laborContractTemplateColumns"/>)		
  		values(	#{accountId},#{corpId}, #{contractTypeId}, #{entityIds}, #{nameZH}, #{nameEN}, #{businessTypeIds}, #{content}, #{contentType}, #{description}, 1, #{status}, #{remark1}, #{remark2}, #{createBy}, #{createDate}, #{modifyBy}, #{modifyDate}, #{clientIds}) 	
  	</insert>
  	
  	<update id="updateLaborContractTemplate" parameterType="laborContractTemplate">  							
  		update HRO_MGT_LABOR_CONTRACT_TEMPLATE set contractTypeId = #{contractTypeId},corpId = #{corpId},
  				entityIds = #{entityIds}, nameZH = #{nameZH}, nameEN = #{nameEN}, businessTypeIds = #{businessTypeIds}, content = #{content}, contentType = #{contentType}, description = #{description}, deleted = #{deleted}, 
  				status = #{status}, remark1 = #{remark1}, remark2 = #{remark2}, createBy = #{createBy}, createDate = #{createDate}, modifyBy = #{modifyBy}, modifyDate = #{modifyDate},clientIds = #{clientIds}
  		where templateId = #{templateId}  		
  	</update>  	
  	
  	<delete id="deleteLaborContractTemplate" parameterType="int">
  		delete from HRO_MGT_LABOR_CONTRACT_TEMPLATE where templateId = #{value} 
  	</delete>
  	
  	<select id="getLaborContractTemplateVOsByAccountId" parameterType="int" resultMap="result">
  		select templateId, <include refid="laborContractTemplateColumns"/>
  		from HRO_MGT_LABOR_CONTRACT_TEMPLATE
  		where deleted = 1 AND accountId = #{value}
  	</select>
  	
  	<select id="getLaborContractTemplateVOsByContractTypeId" parameterType="int" resultMap="result">
  		select templateId, <include refid="laborContractTemplateColumns"/>
  		from HRO_MGT_LABOR_CONTRACT_TEMPLATE
  		where deleted = 1 AND status = 1 AND accountId = #{value}
  	</select>
</mapper>