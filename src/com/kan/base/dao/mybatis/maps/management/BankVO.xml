<?xml version="1.0" encoding="utf-8" ?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.kan.base.domain.management.BankVO">
	
	<resultMap id="result" type="com.kan.base.domain.management.BankVO" >
		<result property="bankId" column="bankId"/>
		<result property="accountId" column="accountId"/>
		<result property="corpId" column="corpId"/>
		<result property="cityId" column="cityId"/>
		<result property="nameZH" column="nameZH"/>
		<result property="nameEN" column="nameEN"/>
		<result property="addressZH" column="addressZH"/>
		<result property="addressEN" column="addressEN"/>
		<result property="telephone" column="telephone"/>
		<result property="fax" column="fax"/>
		<result property="postcode" column="postcode"/>
		<result property="email" column="email"/>
		<result property="website" column="website"/>
		<result property="description" column="description"/>
		<result property="deleted" column="deleted"/>
		<result property="status" column="status"/>
		<result property="remark1" column="remark1"/>
		<result property="remark2" column="remark2"/>
		<result property="createBy" column="createBy" />
		<result property="createDate" column="createDate" />
		<result property="modifyBy" column="modifyBy" />
		<result property="modifyDate" column="modifyDate" />
		<!-- For Application -->
		<result property="extended" column="extended" />
	</resultMap>
	
	<sql id="bankColumns">
		accountId, corpId, cityId, nameZH, nameEN, addressZH, addressEN, telephone, fax, postcode, email, website, description, deleted, status, remark1, 
		remark2, createBy, createDate, modifyBy, modifyDate
	</sql>  
	
	<sql id="bankColumns-for-join">
		a.accountId, a.corpId, a.cityId, a.nameZH, a.nameEN, a.addressZH, a.addressEN, a.telephone, a.fax, a.postcode, a.email, a.website, a.description, a.deleted, a.status, a.remark1, 
		a.remark2, a.createBy, a.createDate, a.modifyBy, a.modifyDate
	</sql> 	 	
	
	<select id="countBankVOsByCondition" parameterType="bank" resultType="int">
		SELECT COUNT(1) 
		FROM HRO_MGT_Bank
		WHERE deleted = 1 AND ( accountId = 1 OR (accountId = #{accountId}
		<if test="corpId != null and corpId != ''">
			AND (corpId = #{corpId} or 0 = #{corpId})
		</if>
		))
		<if test="corpId == null or corpId == ''">
			AND corpId IS NULL
		</if>
		<if test="nameZH != null and nameZH != ''">
			AND nameZH like CONCAT('%', '${nameZH}', '%') 
		</if>
		<if test="nameEN != null and nameEN != ''">
			AND nameEN like CONCAT('%', '${nameEN}', '%') 
		</if>
		<if test="status != null and status != ''">
			AND (status = #{status} or 0 = #{status})
		</if>
  	</select>

	<select id="getBankVOsByCondition" parameterType="bank" resultMap="result">
		SELECT
			DISTINCT( a.bankId ), <include refid="bankColumns-for-join"/>,
			CASE
				WHEN ( ISNULL(b.bankId) AND ISNULL(c.bankId) AND ISNULL(d.bankId) )
				THEN 2
				ELSE 1
			END AS `extended`
		FROM hro_mgt_bank a
			LEFT JOIN hro_biz_vendor b
				ON a.bankId = b.bankId AND b.deleted = 1
			LEFT JOIN hro_biz_employee c
				ON a.bankId = c.bankId AND c.deleted = 1
			LEFT JOIN hro_def_bank_template_header d
				ON a.bankId = d.bankId AND d.deleted = 1			  
		WHERE a.deleted = 1 AND ( a.accountId = 1 OR (a.accountId = #{accountId}
		<if test="corpId != null and corpId != ''">
			AND (a.corpId = #{corpId} or 0 = #{corpId})
		</if>
		))
		<if test="corpId == null or corpId == ''">
			AND a.corpId IS NULL
		</if>	
		<if test="nameZH != null and nameZH != ''">
			AND a.nameZH like CONCAT('%', '${nameZH}', '%') 
		</if>
		<if test="nameEN != null and nameEN != ''">
			AND a.nameEN like CONCAT('%', '${nameEN}', '%') 
		</if>
		<if test="status != null and status != ''">
			AND (a.status = #{status} or 0 = #{status})
		</if>
		<if test="sortColumn != null and sortColumn != '' and sortOrder != null and sortOrder != ''">
			order by ${sortColumn} ${sortOrder}
		</if>			
  	</select>
  	
  	<select id="getBankVOByBankId" parameterType="int" resultMap="result">
  		SELECT bankId, <include refid="bankColumns"/>
  		FROM HRO_MGT_Bank
  		WHERE bankId = #{value}
  	</select>
  	
  	<insert id="insertBank" parameterType="bank" useGeneratedKeys="true" keyProperty="bankId">
  		INSERT INTO HRO_MGT_Bank(<include refid="bankColumns"/>)		
  		VALUES(#{accountId}, #{corpId}, #{cityId}, #{nameZH}, #{nameEN}, #{addressZH}, #{addressEN}, #{telephone}, #{fax}, #{postcode}, #{email}, #{website}, 
  		       #{description}, 1, #{status}, #{remark1}, #{remark2}, #{createBy}, #{createDate}, #{modifyBy}, #{modifyDate})
  	</insert>
  	
  	<update id="updateBank" parameterType="bank">  							
  		UPDATE HRO_MGT_Bank SET cityId = #{cityId}, nameZH = #{nameZH}, nameEN = #{nameEN}, addressZH = #{addressZH}, addressEN = #{addressEN}, 
  			telephone = #{telephone}, fax = #{fax}, postcode = #{postcode}, email = #{email}, website = #{website}, description = #{description}, 
  			deleted = #{deleted}, status = #{status}, remark1 = #{remark1}, remark2 = #{remark2}, createBy = #{createBy}, createDate = #{createDate}, 
  			modifyBy = #{modifyBy}, modifyDate = #{modifyDate}
  		WHERE bankId = #{bankId}  		
  	</update>  	
  	
  	<delete id="deleteBank" parameterType="int">
  		DELETE FROM HRO_MGT_Bank WHERE bankId = #{value} 
  	</delete>
  	
  	<select id="getBankVOsByAccountId" parameterType="int" resultMap="result">
  		SELECT bankId, <include refid="bankColumns"/>
  		FROM HRO_MGT_Bank
  		WHERE deleted = 1 AND status = 1 AND accountId = #{value}
  	</select>
  	
</mapper>