<?xml version="1.0" encoding="utf-8" ?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.kan.base.domain.management.CertificationVO">

	<resultMap id="result" type="com.kan.base.domain.management.CertificationVO" >
		<result property="certificationId" column="certificationId"/>
		<result property="accountId" column="accountId"/>
		<result property="corpId" column="corpId"/>
		<result property="nameZH" column="nameZH"/>
		<result property="nameEN" column="nameEN"/>
		<result property="description" column="description"/>
		<result property="deleted" column="deleted"/>
		<result property="status" column="status"/>
		<result property="extended" column="extended"/>
		<result property="remark1" column="remark1"/>
		<result property="remark2" column="remark2"/>
		<result property="createBy" column="createBy" />
		<result property="createDate" column="createDate" />
		<result property="modifyBy" column="modifyBy" />
		<result property="modifyDate" column="modifyDate" />
	</resultMap>
	
	<resultMap id="certificationBaseView" type="com.kan.base.domain.management.CertificationBaseView" >
		<result property="id" column="id"/>
		<result property="name" column="name"/>
	</resultMap>
	
	<sql id="certificationColumns">
		accountId,corpId, nameZH, nameEN, description, deleted, status, remark1, remark2, createBy, createDate, modifyBy, modifyDate
	</sql>  	 	
	<sql id="certificationColumns-for-join">
		a.accountId,a.corpId, a.nameZH, a.nameEN, a.description, a.deleted, a.status, a.remark1, a.remark2, a.createBy, a.createDate, a.modifyBy, a.modifyDate
	</sql>  	 	
	
	<select id="countCertificationVOsByCondition" parameterType="certification" resultType="int">
		SELECT count(*) 
		FROM Hro_MGT_Certification 
		WHERE deleted = 1 AND accountId= #{accountId}
		<if test="corpId != null and corpId != ''">
			AND (corpId = #{corpId} or 0 = #{corpId})
		</if>
		<if test="corpId == null or corpId =='' ">
		   AND corpId IS NULL
		</if>
		<if test="nameZH != null and nameZH != ''">
			AND nameZH like CONCAT('%', '${nameZH}', '%') 
		</if>
		<if test="nameEN != null and nameEN != ''">
			AND nameEN like CONCAT('%', '${nameEN}', '%') 
		</if>
		<if test="status != null and status != ''">
			AND (status = #{status} or 0 = #{status})
		</if>
  	</select>

	<select id="getCertificationVOsByCondition" parameterType="certification" resultMap="result">
		SELECT a.certificationId, <include refid="certificationColumns-for-join"/> ,
		<![CDATA[CASE WHEN COUNT(b.employeeCertificationId) >0 THEN 1 ELSE 2 END `extended`]]>
		FROM Hro_MGT_Certification a
		LEFT JOIN hro_biz_employee_certification b ON a.certificationId = b.certificationId AND b.deleted = 1
		WHERE a.deleted = 1 AND accountId= #{accountId}
		<if test="corpId != null and corpId != ''">
			AND (a.corpId = #{corpId} or 0 = #{corpId})
		</if>
		<if test="corpId == null or corpId =='' ">
		   AND a.corpId IS NULL
		</if>
		<if test="nameZH != null and nameZH != ''">
			AND a.nameZH like CONCAT('%', '${nameZH}', '%') 
		</if>
		<if test="nameEN != null and nameEN != ''">
			AND a.nameEN like CONCAT('%', '${nameEN}', '%') 
		</if>
		<if test="status != null and status != ''">
			AND (a.status = #{status} or 0 = #{status})
		</if>
		GROUP BY a.certificationId
		<if test="sortColumn != null and sortColumn != '' and sortOrder != null and sortOrder != ''">
			ORDER BY ${sortColumn} ${sortOrder}
		</if>			
  	</select>
  	
  	<select id="getCertificationVOByCertificationId" parameterType="int" resultMap="result">
  		SELECT certificationId, <include refid="certificationColumns"/>
  		FROM Hro_MGT_Certification
  		WHERE certificationId = #{value}
  	</select>
  	
  	<select id="getCertificationBaseViewsByAccountId" parameterType="int" resultMap="certificationBaseView">
  		SELECT certificationId id, CONCAT(nameZH,' - ' ,nameEN) name
  		FROM Hro_MGT_Certification
  		WHERE deleted = 1 AND accountId = #{value}
  	</select>
  	
  	<select id="getCertificationVOsByAccountId" parameterType="int" resultMap="result">
  		SELECT certificationId, <include refid="certificationColumns"/>
  		FROM Hro_MGT_Certification
  		WHERE deleted = 1 AND accountId = #{value} AND status = 1
  	</select>
  	
  	<insert id="insertCertification" parameterType="certification" useGeneratedKeys="true" keyProperty="certificationId">
  		INSERT INTO Hro_MGT_Certification(<include refid="certificationColumns"/>)		
  		VALUES(	#{accountId},#{corpId}, #{nameZH}, #{nameEN}, #{description}, 1, #{status}, #{remark1}, #{remark2}, #{createBy}, #{createDate}, #{modifyBy}, #{modifyDate}) 	
  	</insert>
  	
  	<update id="updateCertification" parameterType="certification">  							
  		UPDATE Hro_MGT_Certification SET 
  				 nameZH = #{nameZH}, nameEN = #{nameEN}, description = #{description}, 
  				 deleted = #{deleted}, status = #{status}, remark1 = #{remark1}, remark2 = #{remark2}, createBy = #{createBy}, 
  				 createDate = #{createDate}, modifyBy = #{modifyBy}, modifyDate = #{modifyDate}
  		WHERE certificationId = #{certificationId}  		
  	</update>  	
  	
  	<delete id="deleteCertification" parameterType="int">
  		DELETE FROM Hro_MGT_Certification WHERE certificationId = #{value} 
  	</delete>
</mapper>